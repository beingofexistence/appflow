{"version":3,"sources":["vs/workbench/contrib/mergeEditor/browser/model/mergeEditorModel.ts"],"names":[],"mappings":"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","file":"mergeEditorModel.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CompareResult, equals } from 'vs/base/common/arrays';\nimport { BugIndicatingError } from 'vs/base/common/errors';\nimport { autorunHandleChanges, derived, IObservable, IReader, ISettableObservable, ITransaction, keepObserved, observableValue, transaction, waitForState } from 'vs/base/common/observable';\nimport { URI } from 'vs/base/common/uri';\nimport { Range } from 'vs/editor/common/core/range';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { localize } from 'vs/nls';\nimport { IResourceUndoRedoElement, IUndoRedoService, UndoRedoElementType, UndoRedoGroup } from 'vs/platform/undoRedo/common/undoRedo';\nimport { EditorModel } from 'vs/workbench/common/editor/editorModel';\nimport { IMergeDiffComputer } from 'vs/workbench/contrib/mergeEditor/browser/model/diffComputer';\nimport { LineRange } from 'vs/workbench/contrib/mergeEditor/browser/model/lineRange';\nimport { DetailedLineRangeMapping, DocumentLineRangeMap, DocumentRangeMap, LineRangeMapping } from 'vs/workbench/contrib/mergeEditor/browser/model/mapping';\nimport { TextModelDiffChangeReason, TextModelDiffs, TextModelDiffState } from 'vs/workbench/contrib/mergeEditor/browser/model/textModelDiffs';\nimport { MergeEditorTelemetry } from 'vs/workbench/contrib/mergeEditor/browser/telemetry';\nimport { leftJoin } from 'vs/workbench/contrib/mergeEditor/browser/utils';\nimport { InputNumber, ModifiedBaseRange, ModifiedBaseRangeState, ModifiedBaseRangeStateKind } from './modifiedBaseRange';\n\nexport interface InputData {\n\treadonly textModel: ITextModel;\n\treadonly title: string | undefined;\n\treadonly detail: string | undefined;\n\treadonly description: string | undefined;\n}\n\nexport class MergeEditorModel extends EditorModel {\n\tprivate readonly input1TextModelDiffs = this._register(new TextModelDiffs(this.base, this.input1.textModel, this.diffComputer));\n\tprivate readonly input2TextModelDiffs = this._register(new TextModelDiffs(this.base, this.input2.textModel, this.diffComputer));\n\tprivate readonly resultTextModelDiffs = this._register(new TextModelDiffs(this.base, this.resultTextModel, this.diffComputer));\n\tpublic readonly modifiedBaseRanges = derived<ModifiedBaseRange[]>(this, (reader) => {\n\t\tconst input1Diffs = this.input1TextModelDiffs.diffs.read(reader);\n\t\tconst input2Diffs = this.input2TextModelDiffs.diffs.read(reader);\n\t\treturn ModifiedBaseRange.fromDiffs(input1Diffs, input2Diffs, this.base, this.input1.textModel, this.input2.textModel);\n\t});\n\n\tprivate readonly modifiedBaseRangeResultStates = derived(this, reader => {\n\t\tconst map = new Map<ModifiedBaseRange, ModifiedBaseRangeData>(\n\t\t\tthis.modifiedBaseRanges.read(reader).map<[ModifiedBaseRange, ModifiedBaseRangeData]>((s) => [\n\t\t\t\ts, new ModifiedBaseRangeData(s)\n\t\t\t])\n\t\t);\n\t\treturn map;\n\t});\n\n\tprivate readonly resultSnapshot = this.resultTextModel.createSnapshot();\n\n\tconstructor(\n\t\treadonly base: ITextModel,\n\t\treadonly input1: InputData,\n\t\treadonly input2: InputData,\n\t\treadonly resultTextModel: ITextModel,\n\t\tprivate readonly diffComputer: IMergeDiffComputer,\n\t\tprivate readonly options: { resetResult: boolean },\n\t\tpublic readonly telemetry: MergeEditorTelemetry,\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t\t@IUndoRedoService private readonly undoRedoService: IUndoRedoService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(keepObserved(this.modifiedBaseRangeResultStates));\n\t\tthis._register(keepObserved(this.input1ResultMapping));\n\t\tthis._register(keepObserved(this.input2ResultMapping));\n\n\t\tconst initializePromise = this.initialize();\n\n\t\tthis.onInitialized = this.onInitialized.then(async () => {\n\t\t\tawait initializePromise;\n\t\t});\n\n\t\tinitializePromise.then(() => {\n\t\t\tlet shouldRecomputeHandledFromAccepted = true;\n\t\t\tthis._register(\n\t\t\t\tautorunHandleChanges(\n\t\t\t\t\t{\n\t\t\t\t\t\thandleChange: (ctx) => {\n\t\t\t\t\t\t\tif (ctx.didChange(this.modifiedBaseRangeResultStates)) {\n\t\t\t\t\t\t\t\tshouldRecomputeHandledFromAccepted = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn ctx.didChange(this.resultTextModelDiffs.diffs)\n\t\t\t\t\t\t\t\t// Ignore non-text changes as we update the state directly\n\t\t\t\t\t\t\t\t? ctx.change === TextModelDiffChangeReason.textChange\n\t\t\t\t\t\t\t\t: true;\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\t(reader) => {\n\t\t\t\t\t\t/** @description Merge Editor Model: Recompute State From Result */\n\t\t\t\t\t\tconst states = this.modifiedBaseRangeResultStates.read(reader);\n\t\t\t\t\t\tif (!this.isUpToDate.read(reader)) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst resultDiffs = this.resultTextModelDiffs.diffs.read(reader);\n\t\t\t\t\t\ttransaction(tx => {\n\t\t\t\t\t\t\t/** @description Merge Editor Model: Recompute State */\n\n\t\t\t\t\t\t\tthis.updateBaseRangeAcceptedState(resultDiffs, states, tx);\n\n\t\t\t\t\t\t\tif (shouldRecomputeHandledFromAccepted) {\n\t\t\t\t\t\t\t\tshouldRecomputeHandledFromAccepted = false;\n\t\t\t\t\t\t\t\tfor (const [_range, observableState] of states) {\n\t\t\t\t\t\t\t\t\tconst state = observableState.accepted.get();\n\t\t\t\t\t\t\t\t\tconst handled = !(state.kind === ModifiedBaseRangeStateKind.base || state.kind === ModifiedBaseRangeStateKind.unrecognized);\n\t\t\t\t\t\t\t\t\tobservableState.handledInput1.set(handled, tx);\n\t\t\t\t\t\t\t\t\tobservableState.handledInput2.set(handled, tx);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\t}\n\n\tprivate async initialize(): Promise<void> {\n\t\tif (this.options.resetResult) {\n\t\t\tawait this.reset();\n\t\t}\n\t}\n\n\tpublic async reset(): Promise<void> {\n\t\tawait waitForState(this.inputDiffComputingState, state => state === MergeEditorModelState.upToDate);\n\t\tconst states = this.modifiedBaseRangeResultStates.get();\n\n\t\ttransaction(tx => {\n\t\t\t/** @description Set initial state */\n\n\t\t\tfor (const [range, state] of states) {\n\t\t\t\tlet newState: ModifiedBaseRangeState;\n\t\t\t\tlet handled = false;\n\t\t\t\tif (range.input1Diffs.length === 0) {\n\t\t\t\t\tnewState = ModifiedBaseRangeState.base.withInputValue(2, true);\n\t\t\t\t\thandled = true;\n\t\t\t\t} else if (range.input2Diffs.length === 0) {\n\t\t\t\t\tnewState = ModifiedBaseRangeState.base.withInputValue(1, true);\n\t\t\t\t\thandled = true;\n\t\t\t\t} else if (range.isEqualChange) {\n\t\t\t\t\tnewState = ModifiedBaseRangeState.base.withInputValue(1, true);\n\t\t\t\t\thandled = true;\n\t\t\t\t} else {\n\t\t\t\t\tnewState = ModifiedBaseRangeState.base;\n\t\t\t\t\thandled = false;\n\t\t\t\t}\n\n\t\t\t\tstate.accepted.set(newState, tx);\n\t\t\t\tstate.computedFromDiffing = false;\n\t\t\t\tstate.previousNonDiffingState = undefined;\n\t\t\t\tstate.handledInput1.set(handled, tx);\n\t\t\t\tstate.handledInput2.set(handled, tx);\n\t\t\t}\n\n\t\t\tthis.resultTextModel.pushEditOperations(null, [{\n\t\t\t\trange: new Range(1, 1, Number.MAX_SAFE_INTEGER, 1),\n\t\t\t\ttext: this.computeAutoMergedResult()\n\t\t\t}], () => null);\n\t\t});\n\t}\n\n\tprivate computeAutoMergedResult(): string {\n\t\tconst baseRanges = this.modifiedBaseRanges.get();\n\n\t\tconst baseLines = this.base.getLinesContent();\n\t\tconst input1Lines = this.input1.textModel.getLinesContent();\n\t\tconst input2Lines = this.input2.textModel.getLinesContent();\n\n\t\tconst resultLines: string[] = [];\n\t\tfunction appendLinesToResult(source: string[], lineRange: LineRange) {\n\t\t\tfor (let i = lineRange.startLineNumber; i < lineRange.endLineNumberExclusive; i++) {\n\t\t\t\tresultLines.push(source[i - 1]);\n\t\t\t}\n\t\t}\n\n\t\tlet baseStartLineNumber = 1;\n\n\t\tfor (const baseRange of baseRanges) {\n\t\t\tappendLinesToResult(baseLines, LineRange.fromLineNumbers(baseStartLineNumber, baseRange.baseRange.startLineNumber));\n\t\t\tbaseStartLineNumber = baseRange.baseRange.endLineNumberExclusive;\n\n\t\t\tif (baseRange.input1Diffs.length === 0) {\n\t\t\t\tappendLinesToResult(input2Lines, baseRange.input2Range);\n\t\t\t} else if (baseRange.input2Diffs.length === 0) {\n\t\t\t\tappendLinesToResult(input1Lines, baseRange.input1Range);\n\t\t\t} else if (baseRange.isEqualChange) {\n\t\t\t\tappendLinesToResult(input1Lines, baseRange.input1Range);\n\t\t\t} else {\n\t\t\t\tappendLinesToResult(baseLines, baseRange.baseRange);\n\t\t\t}\n\t\t}\n\n\t\tappendLinesToResult(baseLines, LineRange.fromLineNumbers(baseStartLineNumber, baseLines.length + 1));\n\n\t\treturn resultLines.join(this.resultTextModel.getEOL());\n\t}\n\n\tpublic hasBaseRange(baseRange: ModifiedBaseRange): boolean {\n\t\treturn this.modifiedBaseRangeResultStates.get().has(baseRange);\n\t}\n\n\tpublic readonly baseInput1Diffs = this.input1TextModelDiffs.diffs;\n\n\tpublic readonly baseInput2Diffs = this.input2TextModelDiffs.diffs;\n\tpublic readonly baseResultDiffs = this.resultTextModelDiffs.diffs;\n\tpublic get isApplyingEditInResult(): boolean { return this.resultTextModelDiffs.isApplyingChange; }\n\tpublic readonly input1ResultMapping = derived(this, reader => {\n\t\treturn this.getInputResultMapping(\n\t\t\tthis.baseInput1Diffs.read(reader),\n\t\t\tthis.baseResultDiffs.read(reader),\n\t\t\tthis.input1.textModel.getLineCount(),\n\t\t);\n\t});\n\n\tpublic readonly resultInput1Mapping = derived(this, reader => this.input1ResultMapping.read(reader).reverse());\n\n\tpublic readonly input2ResultMapping = derived(this, reader => {\n\t\treturn this.getInputResultMapping(\n\t\t\tthis.baseInput2Diffs.read(reader),\n\t\t\tthis.baseResultDiffs.read(reader),\n\t\t\tthis.input2.textModel.getLineCount(),\n\t\t);\n\t});\n\n\tpublic readonly resultInput2Mapping = derived(this, reader => this.input2ResultMapping.read(reader).reverse());\n\n\tprivate getInputResultMapping(inputLinesDiffs: DetailedLineRangeMapping[], resultDiffs: DetailedLineRangeMapping[], inputLineCount: number) {\n\t\tconst map = DocumentLineRangeMap.betweenOutputs(inputLinesDiffs, resultDiffs, inputLineCount);\n\t\treturn new DocumentLineRangeMap(\n\t\t\tmap.lineRangeMappings.map((m) =>\n\t\t\t\tm.inputRange.isEmpty || m.outputRange.isEmpty\n\t\t\t\t\t? new LineRangeMapping(\n\t\t\t\t\t\t// We can do this because two adjacent diffs have one line in between.\n\t\t\t\t\t\tm.inputRange.deltaStart(-1),\n\t\t\t\t\t\tm.outputRange.deltaStart(-1)\n\t\t\t\t\t)\n\t\t\t\t\t: m\n\t\t\t),\n\t\t\tmap.inputLineCount\n\t\t);\n\t}\n\n\tpublic readonly baseResultMapping = derived(this, reader => {\n\t\tconst map = new DocumentLineRangeMap(this.baseResultDiffs.read(reader), -1);\n\t\treturn new DocumentLineRangeMap(\n\t\t\tmap.lineRangeMappings.map((m) =>\n\t\t\t\tm.inputRange.isEmpty || m.outputRange.isEmpty\n\t\t\t\t\t? new LineRangeMapping(\n\t\t\t\t\t\t// We can do this because two adjacent diffs have one line in between.\n\t\t\t\t\t\tm.inputRange.deltaStart(-1),\n\t\t\t\t\t\tm.outputRange.deltaStart(-1)\n\t\t\t\t\t)\n\t\t\t\t\t: m\n\t\t\t),\n\t\t\tmap.inputLineCount\n\t\t);\n\t});\n\n\tpublic readonly resultBaseMapping = derived(this, reader => this.baseResultMapping.read(reader).reverse());\n\n\tpublic translateInputRangeToBase(input: 1 | 2, range: Range): Range {\n\t\tconst baseInputDiffs = input === 1 ? this.baseInput1Diffs.get() : this.baseInput2Diffs.get();\n\t\tconst map = new DocumentRangeMap(baseInputDiffs.flatMap(d => d.rangeMappings), 0).reverse();\n\t\treturn map.projectRange(range).outputRange;\n\t}\n\n\tpublic translateBaseRangeToInput(input: 1 | 2, range: Range): Range {\n\t\tconst baseInputDiffs = input === 1 ? this.baseInput1Diffs.get() : this.baseInput2Diffs.get();\n\t\tconst map = new DocumentRangeMap(baseInputDiffs.flatMap(d => d.rangeMappings), 0);\n\t\treturn map.projectRange(range).outputRange;\n\t}\n\n\tpublic getLineRangeInResult(baseRange: LineRange, reader?: IReader): LineRange {\n\t\treturn this.resultTextModelDiffs.getResultLineRange(baseRange, reader);\n\t}\n\n\tpublic translateResultRangeToBase(range: Range): Range {\n\t\tconst map = new DocumentRangeMap(this.baseResultDiffs.get().flatMap(d => d.rangeMappings), 0).reverse();\n\t\treturn map.projectRange(range).outputRange;\n\t}\n\n\tpublic translateBaseRangeToResult(range: Range): Range {\n\t\tconst map = new DocumentRangeMap(this.baseResultDiffs.get().flatMap(d => d.rangeMappings), 0);\n\t\treturn map.projectRange(range).outputRange;\n\t}\n\n\tpublic findModifiedBaseRangesInRange(rangeInBase: LineRange): ModifiedBaseRange[] {\n\t\t// TODO use binary search\n\t\treturn this.modifiedBaseRanges.get().filter(r => r.baseRange.intersects(rangeInBase));\n\t}\n\n\tpublic readonly diffComputingState = derived(this, reader => {\n\t\tconst states = [\n\t\t\tthis.input1TextModelDiffs,\n\t\t\tthis.input2TextModelDiffs,\n\t\t\tthis.resultTextModelDiffs,\n\t\t].map((s) => s.state.read(reader));\n\n\t\tif (states.some((s) => s === TextModelDiffState.initializing)) {\n\t\t\treturn MergeEditorModelState.initializing;\n\t\t}\n\t\tif (states.some((s) => s === TextModelDiffState.updating)) {\n\t\t\treturn MergeEditorModelState.updating;\n\t\t}\n\t\treturn MergeEditorModelState.upToDate;\n\t});\n\n\tpublic readonly inputDiffComputingState = derived(this, reader => {\n\t\tconst states = [\n\t\t\tthis.input1TextModelDiffs,\n\t\t\tthis.input2TextModelDiffs,\n\t\t].map((s) => s.state.read(reader));\n\n\t\tif (states.some((s) => s === TextModelDiffState.initializing)) {\n\t\t\treturn MergeEditorModelState.initializing;\n\t\t}\n\t\tif (states.some((s) => s === TextModelDiffState.updating)) {\n\t\t\treturn MergeEditorModelState.updating;\n\t\t}\n\t\treturn MergeEditorModelState.upToDate;\n\t});\n\n\tpublic readonly isUpToDate = derived(this, reader => this.diffComputingState.read(reader) === MergeEditorModelState.upToDate);\n\n\tpublic readonly onInitialized = waitForState(this.diffComputingState, state => state === MergeEditorModelState.upToDate).then(() => { });\n\n\tprivate firstRun = true;\n\tprivate updateBaseRangeAcceptedState(resultDiffs: DetailedLineRangeMapping[], states: Map<ModifiedBaseRange, ModifiedBaseRangeData>, tx: ITransaction): void {\n\t\tconst baseRangeWithStoreAndTouchingDiffs = leftJoin(\n\t\t\tstates,\n\t\t\tresultDiffs,\n\t\t\t(baseRange, diff) =>\n\t\t\t\tbaseRange[0].baseRange.touches(diff.inputRange)\n\t\t\t\t\t? CompareResult.neitherLessOrGreaterThan\n\t\t\t\t\t: LineRange.compareByStart(\n\t\t\t\t\t\tbaseRange[0].baseRange,\n\t\t\t\t\t\tdiff.inputRange\n\t\t\t\t\t)\n\t\t);\n\n\t\tfor (const row of baseRangeWithStoreAndTouchingDiffs) {\n\t\t\tconst newState = this.computeState(row.left[0], row.rights);\n\t\t\tconst data = row.left[1];\n\t\t\tconst oldState = data.accepted.get();\n\t\t\tif (!oldState.equals(newState)) {\n\t\t\t\tif (!this.firstRun && !data.computedFromDiffing) {\n\t\t\t\t\t// Don't set this on the first run - the first run might be used to restore state.\n\t\t\t\t\tdata.computedFromDiffing = true;\n\t\t\t\t\tdata.previousNonDiffingState = oldState;\n\t\t\t\t}\n\t\t\t\tdata.accepted.set(newState, tx);\n\t\t\t}\n\t\t}\n\n\t\tif (this.firstRun) {\n\t\t\tthis.firstRun = false;\n\t\t}\n\t}\n\n\tprivate computeState(baseRange: ModifiedBaseRange, conflictingDiffs: DetailedLineRangeMapping[]): ModifiedBaseRangeState {\n\t\tif (conflictingDiffs.length === 0) {\n\t\t\treturn ModifiedBaseRangeState.base;\n\t\t}\n\t\tconst conflictingEdits = conflictingDiffs.map((d) => d.getLineEdit());\n\n\t\tfunction editsAgreeWithDiffs(diffs: readonly DetailedLineRangeMapping[]): boolean {\n\t\t\treturn equals(\n\t\t\t\tconflictingEdits,\n\t\t\t\tdiffs.map((d) => d.getLineEdit()),\n\t\t\t\t(a, b) => a.equals(b)\n\t\t\t);\n\t\t}\n\n\t\tif (editsAgreeWithDiffs(baseRange.input1Diffs)) {\n\t\t\treturn ModifiedBaseRangeState.base.withInputValue(1, true);\n\t\t}\n\t\tif (editsAgreeWithDiffs(baseRange.input2Diffs)) {\n\t\t\treturn ModifiedBaseRangeState.base.withInputValue(2, true);\n\t\t}\n\n\t\tconst states = [\n\t\t\tModifiedBaseRangeState.base.withInputValue(1, true).withInputValue(2, true, true),\n\t\t\tModifiedBaseRangeState.base.withInputValue(2, true).withInputValue(1, true, true),\n\t\t\tModifiedBaseRangeState.base.withInputValue(1, true).withInputValue(2, true, false),\n\t\t\tModifiedBaseRangeState.base.withInputValue(2, true).withInputValue(1, true, false),\n\t\t];\n\n\t\tfor (const s of states) {\n\t\t\tconst { edit } = baseRange.getEditForBase(s);\n\t\t\tif (edit) {\n\t\t\t\tconst resultRange = this.resultTextModelDiffs.getResultLineRange(baseRange.baseRange);\n\t\t\t\tconst existingLines = resultRange.getLines(this.resultTextModel);\n\n\t\t\t\tif (equals(edit.newLines, existingLines, (a, b) => a === b)) {\n\t\t\t\t\treturn s;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn ModifiedBaseRangeState.unrecognized;\n\t}\n\n\tpublic getState(baseRange: ModifiedBaseRange): IObservable<ModifiedBaseRangeState> {\n\t\tconst existingState = this.modifiedBaseRangeResultStates.get().get(baseRange);\n\t\tif (!existingState) {\n\t\t\tthrow new BugIndicatingError('object must be from this instance');\n\t\t}\n\t\treturn existingState.accepted;\n\t}\n\n\tpublic setState(\n\t\tbaseRange: ModifiedBaseRange,\n\t\tstate: ModifiedBaseRangeState,\n\t\t_markInputAsHandled: boolean | InputNumber,\n\t\ttx: ITransaction,\n\t\t_pushStackElement: boolean = false\n\t): void {\n\t\tif (!this.isUpToDate.get()) {\n\t\t\tthrow new BugIndicatingError('Cannot set state while updating');\n\t\t}\n\n\t\tconst existingState = this.modifiedBaseRangeResultStates.get().get(baseRange);\n\t\tif (!existingState) {\n\t\t\tthrow new BugIndicatingError('object must be from this instance');\n\t\t}\n\n\t\tconst conflictingDiffs = this.resultTextModelDiffs.findTouchingDiffs(\n\t\t\tbaseRange.baseRange\n\t\t);\n\t\tconst group = new UndoRedoGroup();\n\t\tif (conflictingDiffs) {\n\t\t\tthis.resultTextModelDiffs.removeDiffs(conflictingDiffs, tx, group);\n\t\t}\n\n\t\tconst { edit, effectiveState } = baseRange.getEditForBase(state);\n\n\t\texistingState.accepted.set(effectiveState, tx);\n\t\texistingState.previousNonDiffingState = undefined;\n\t\texistingState.computedFromDiffing = false;\n\n\t\tconst input1Handled = existingState.handledInput1.get();\n\t\tconst input2Handled = existingState.handledInput2.get();\n\n\t\tif (!input1Handled || !input2Handled) {\n\t\t\tthis.undoRedoService.pushElement(\n\t\t\t\tnew MarkAsHandledUndoRedoElement(this.resultTextModel.uri, new WeakRef(this), new WeakRef(existingState), input1Handled, input2Handled),\n\t\t\t\tgroup\n\t\t\t);\n\t\t}\n\n\t\tif (edit) {\n\t\t\tthis.resultTextModel.pushStackElement();\n\t\t\tthis.resultTextModelDiffs.applyEditRelativeToOriginal(edit, tx, group);\n\t\t\tthis.resultTextModel.pushStackElement();\n\t\t}\n\n\t\t// always set conflict as handled\n\t\texistingState.handledInput1.set(true, tx);\n\t\texistingState.handledInput2.set(true, tx);\n\t}\n\n\tpublic resetDirtyConflictsToBase(): void {\n\t\ttransaction(tx => {\n\t\t\t/** @description Reset Unknown Base Range States */\n\t\t\tthis.resultTextModel.pushStackElement();\n\t\t\tfor (const range of this.modifiedBaseRanges.get()) {\n\t\t\t\tif (this.getState(range).get().kind === ModifiedBaseRangeStateKind.unrecognized) {\n\t\t\t\t\tthis.setState(range, ModifiedBaseRangeState.base, false, tx, false);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.resultTextModel.pushStackElement();\n\t\t});\n\t}\n\n\tpublic isHandled(baseRange: ModifiedBaseRange): IObservable<boolean> {\n\t\treturn this.modifiedBaseRangeResultStates.get().get(baseRange)!.handled;\n\t}\n\n\tpublic isInputHandled(baseRange: ModifiedBaseRange, inputNumber: InputNumber): IObservable<boolean> {\n\t\tconst state = this.modifiedBaseRangeResultStates.get().get(baseRange)!;\n\t\treturn inputNumber === 1 ? state.handledInput1 : state.handledInput2;\n\t}\n\n\tpublic setInputHandled(baseRange: ModifiedBaseRange, inputNumber: InputNumber, handled: boolean, tx: ITransaction): void {\n\t\tconst state = this.modifiedBaseRangeResultStates.get().get(baseRange)!;\n\t\tif (state.handled.get() === handled) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst dataRef = new WeakRef(ModifiedBaseRangeData);\n\t\tconst modelRef = new WeakRef(this);\n\n\t\tthis.undoRedoService.pushElement({\n\t\t\ttype: UndoRedoElementType.Resource,\n\t\t\tresource: this.resultTextModel.uri,\n\t\t\tcode: 'setInputHandled',\n\t\t\tlabel: localize('setInputHandled', \"Set Input Handled\"),\n\t\t\tredo() {\n\t\t\t\tconst model = modelRef.deref();\n\t\t\t\tconst data = dataRef.deref();\n\t\t\t\tif (model && !model.isDisposed() && data) {\n\t\t\t\t\ttransaction(tx => {\n\t\t\t\t\t\tif (inputNumber === 1) {\n\t\t\t\t\t\t\tstate.handledInput1.set(handled, tx);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstate.handledInput2.set(handled, tx);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tundo() {\n\t\t\t\tconst model = modelRef.deref();\n\t\t\t\tconst data = dataRef.deref();\n\t\t\t\tif (model && !model.isDisposed() && data) {\n\t\t\t\t\ttransaction(tx => {\n\t\t\t\t\t\tif (inputNumber === 1) {\n\t\t\t\t\t\t\tstate.handledInput1.set(!handled, tx);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstate.handledInput2.set(!handled, tx);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\n\t\tif (inputNumber === 1) {\n\t\t\tstate.handledInput1.set(handled, tx);\n\t\t} else {\n\t\t\tstate.handledInput2.set(handled, tx);\n\t\t}\n\t}\n\n\tpublic setHandled(baseRange: ModifiedBaseRange, handled: boolean, tx: ITransaction): void {\n\t\tconst state = this.modifiedBaseRangeResultStates.get().get(baseRange)!;\n\t\tif (state.handled.get() === handled) {\n\t\t\treturn;\n\t\t}\n\n\t\tstate.handledInput1.set(handled, tx);\n\t\tstate.handledInput2.set(handled, tx);\n\t}\n\n\tpublic readonly unhandledConflictsCount = derived(this, reader => {\n\t\tconst map = this.modifiedBaseRangeResultStates.read(reader);\n\t\tlet unhandledCount = 0;\n\t\tfor (const [_key, value] of map) {\n\t\t\tif (!value.handled.read(reader)) {\n\t\t\t\tunhandledCount++;\n\t\t\t}\n\t\t}\n\t\treturn unhandledCount;\n\t});\n\n\tpublic readonly hasUnhandledConflicts = this.unhandledConflictsCount.map(value => /** @description hasUnhandledConflicts */ value > 0);\n\n\tpublic setLanguageId(languageId: string, source?: string): void {\n\t\tconst language = this.languageService.createById(languageId);\n\t\tthis.base.setLanguage(language, source);\n\t\tthis.input1.textModel.setLanguage(language, source);\n\t\tthis.input2.textModel.setLanguage(language, source);\n\t\tthis.resultTextModel.setLanguage(language, source);\n\t}\n\n\tpublic getInitialResultValue(): string {\n\t\tconst chunks: string[] = [];\n\t\twhile (true) {\n\t\t\tconst chunk = this.resultSnapshot.read();\n\t\t\tif (chunk === null) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tchunks.push(chunk);\n\t\t}\n\t\treturn chunks.join();\n\t}\n\n\tpublic async getResultValueWithConflictMarkers(): Promise<string> {\n\t\tawait waitForState(this.diffComputingState, state => state === MergeEditorModelState.upToDate);\n\n\t\tif (this.unhandledConflictsCount.get() === 0) {\n\t\t\treturn this.resultTextModel.getValue();\n\t\t}\n\n\t\tconst resultLines = this.resultTextModel.getLinesContent();\n\t\tconst input1Lines = this.input1.textModel.getLinesContent();\n\t\tconst input2Lines = this.input2.textModel.getLinesContent();\n\n\t\tconst states = this.modifiedBaseRangeResultStates.get();\n\n\t\tconst outputLines: string[] = [];\n\t\tfunction appendLinesToResult(source: string[], lineRange: LineRange) {\n\t\t\tfor (let i = lineRange.startLineNumber; i < lineRange.endLineNumberExclusive; i++) {\n\t\t\t\toutputLines.push(source[i - 1]);\n\t\t\t}\n\t\t}\n\n\t\tlet resultStartLineNumber = 1;\n\n\t\tfor (const [range, state] of states) {\n\t\t\tif (state.handled.get()) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tconst resultRange = this.resultTextModelDiffs.getResultLineRange(range.baseRange);\n\n\t\t\tappendLinesToResult(resultLines, LineRange.fromLineNumbers(resultStartLineNumber, Math.max(resultStartLineNumber, resultRange.startLineNumber)));\n\t\t\tresultStartLineNumber = resultRange.endLineNumberExclusive;\n\n\t\t\toutputLines.push('<<<<<<<');\n\t\t\tif (state.accepted.get().kind === ModifiedBaseRangeStateKind.unrecognized) {\n\t\t\t\t// to prevent loss of data, use modified result as \"ours\"\n\t\t\t\tappendLinesToResult(resultLines, resultRange);\n\t\t\t} else {\n\t\t\t\tappendLinesToResult(input1Lines, range.input1Range);\n\t\t\t}\n\t\t\toutputLines.push('=======');\n\t\t\tappendLinesToResult(input2Lines, range.input2Range);\n\t\t\toutputLines.push('>>>>>>>');\n\t\t}\n\n\t\tappendLinesToResult(resultLines, LineRange.fromLineNumbers(resultStartLineNumber, resultLines.length + 1));\n\t\treturn outputLines.join('\\n');\n\t}\n\n\tpublic get conflictCount(): number {\n\t\treturn arrayCount(this.modifiedBaseRanges.get(), r => r.isConflicting);\n\t}\n\tpublic get combinableConflictCount(): number {\n\t\treturn arrayCount(this.modifiedBaseRanges.get(), r => r.isConflicting && r.canBeCombined);\n\t}\n\n\tpublic get conflictsResolvedWithBase(): number {\n\t\treturn arrayCount(\n\t\t\tthis.modifiedBaseRangeResultStates.get().entries(),\n\t\t\t([r, s]) =>\n\t\t\t\tr.isConflicting &&\n\t\t\t\ts.accepted.get().kind === ModifiedBaseRangeStateKind.base\n\t\t);\n\t}\n\tpublic get conflictsResolvedWithInput1(): number {\n\t\treturn arrayCount(\n\t\t\tthis.modifiedBaseRangeResultStates.get().entries(),\n\t\t\t([r, s]) =>\n\t\t\t\tr.isConflicting &&\n\t\t\t\ts.accepted.get().kind === ModifiedBaseRangeStateKind.input1\n\t\t);\n\t}\n\tpublic get conflictsResolvedWithInput2(): number {\n\t\treturn arrayCount(\n\t\t\tthis.modifiedBaseRangeResultStates.get().entries(),\n\t\t\t([r, s]) =>\n\t\t\t\tr.isConflicting &&\n\t\t\t\ts.accepted.get().kind === ModifiedBaseRangeStateKind.input2\n\t\t);\n\t}\n\tpublic get conflictsResolvedWithSmartCombination(): number {\n\t\treturn arrayCount(\n\t\t\tthis.modifiedBaseRangeResultStates.get().entries(),\n\t\t\t([r, s]: [ModifiedBaseRange, ModifiedBaseRangeData]) => {\n\t\t\t\tconst state = s.accepted.get();\n\t\t\t\treturn r.isConflicting && state.kind === ModifiedBaseRangeStateKind.both && state.smartCombination;\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic get manuallySolvedConflictCountThatEqualNone(): number {\n\t\treturn arrayCount(\n\t\t\tthis.modifiedBaseRangeResultStates.get().entries(),\n\t\t\t([r, s]) =>\n\t\t\t\tr.isConflicting &&\n\t\t\t\ts.accepted.get().kind === ModifiedBaseRangeStateKind.unrecognized\n\t\t);\n\t}\n\tpublic get manuallySolvedConflictCountThatEqualSmartCombine(): number {\n\t\treturn arrayCount(\n\t\t\tthis.modifiedBaseRangeResultStates.get().entries(),\n\t\t\t([r, s]: [ModifiedBaseRange, ModifiedBaseRangeData]) => {\n\t\t\t\tconst state = s.accepted.get();\n\t\t\t\treturn r.isConflicting && s.computedFromDiffing && state.kind === ModifiedBaseRangeStateKind.both && state.smartCombination;\n\t\t\t}\n\t\t);\n\t}\n\tpublic get manuallySolvedConflictCountThatEqualInput1(): number {\n\t\treturn arrayCount(\n\t\t\tthis.modifiedBaseRangeResultStates.get().entries(),\n\t\t\t([r, s]: [ModifiedBaseRange, ModifiedBaseRangeData]) => {\n\t\t\t\tconst state = s.accepted.get();\n\t\t\t\treturn r.isConflicting && s.computedFromDiffing && state.kind === ModifiedBaseRangeStateKind.input1;\n\t\t\t}\n\t\t);\n\t}\n\tpublic get manuallySolvedConflictCountThatEqualInput2(): number {\n\t\treturn arrayCount(\n\t\t\tthis.modifiedBaseRangeResultStates.get().entries(),\n\t\t\t([r, s]: [ModifiedBaseRange, ModifiedBaseRangeData]) => {\n\t\t\t\tconst state = s.accepted.get();\n\t\t\t\treturn r.isConflicting && s.computedFromDiffing && state.kind === ModifiedBaseRangeStateKind.input2;\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic get manuallySolvedConflictCountThatEqualNoneAndStartedWithBase(): number {\n\t\treturn arrayCount(\n\t\t\tthis.modifiedBaseRangeResultStates.get().entries(),\n\t\t\t([r, s]: [ModifiedBaseRange, ModifiedBaseRangeData]) => {\n\t\t\t\tconst state = s.accepted.get();\n\t\t\t\treturn r.isConflicting && state.kind === ModifiedBaseRangeStateKind.unrecognized && s.previousNonDiffingState?.kind === ModifiedBaseRangeStateKind.base;\n\t\t\t}\n\t\t);\n\t}\n\tpublic get manuallySolvedConflictCountThatEqualNoneAndStartedWithInput1(): number {\n\t\treturn arrayCount(\n\t\t\tthis.modifiedBaseRangeResultStates.get().entries(),\n\t\t\t([r, s]: [ModifiedBaseRange, ModifiedBaseRangeData]) => {\n\t\t\t\tconst state = s.accepted.get();\n\t\t\t\treturn r.isConflicting && state.kind === ModifiedBaseRangeStateKind.unrecognized && s.previousNonDiffingState?.kind === ModifiedBaseRangeStateKind.input1;\n\t\t\t}\n\t\t);\n\t}\n\tpublic get manuallySolvedConflictCountThatEqualNoneAndStartedWithInput2(): number {\n\t\treturn arrayCount(\n\t\t\tthis.modifiedBaseRangeResultStates.get().entries(),\n\t\t\t([r, s]: [ModifiedBaseRange, ModifiedBaseRangeData]) => {\n\t\t\t\tconst state = s.accepted.get();\n\t\t\t\treturn r.isConflicting && state.kind === ModifiedBaseRangeStateKind.unrecognized && s.previousNonDiffingState?.kind === ModifiedBaseRangeStateKind.input2;\n\t\t\t}\n\t\t);\n\t}\n\tpublic get manuallySolvedConflictCountThatEqualNoneAndStartedWithBothNonSmart(): number {\n\t\treturn arrayCount(\n\t\t\tthis.modifiedBaseRangeResultStates.get().entries(),\n\t\t\t([r, s]: [ModifiedBaseRange, ModifiedBaseRangeData]) => {\n\t\t\t\tconst state = s.accepted.get();\n\t\t\t\treturn r.isConflicting && state.kind === ModifiedBaseRangeStateKind.unrecognized && s.previousNonDiffingState?.kind === ModifiedBaseRangeStateKind.both && !s.previousNonDiffingState?.smartCombination;\n\t\t\t}\n\t\t);\n\t}\n\tpublic get manuallySolvedConflictCountThatEqualNoneAndStartedWithBothSmart(): number {\n\t\treturn arrayCount(\n\t\t\tthis.modifiedBaseRangeResultStates.get().entries(),\n\t\t\t([r, s]: [ModifiedBaseRange, ModifiedBaseRangeData]) => {\n\t\t\t\tconst state = s.accepted.get();\n\t\t\t\treturn r.isConflicting && state.kind === ModifiedBaseRangeStateKind.unrecognized && s.previousNonDiffingState?.kind === ModifiedBaseRangeStateKind.both && s.previousNonDiffingState?.smartCombination;\n\t\t\t}\n\t\t);\n\t}\n}\n\nfunction arrayCount<T>(array: Iterable<T>, predicate: (value: T) => boolean): number {\n\tlet count = 0;\n\tfor (const value of array) {\n\t\tif (predicate(value)) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n\nclass ModifiedBaseRangeData {\n\tconstructor(private readonly baseRange: ModifiedBaseRange) { }\n\n\tpublic accepted: ISettableObservable<ModifiedBaseRangeState> = observableValue(`BaseRangeState${this.baseRange.baseRange}`, ModifiedBaseRangeState.base);\n\tpublic handledInput1: ISettableObservable<boolean> = observableValue(`BaseRangeHandledState${this.baseRange.baseRange}.Input1`, false);\n\tpublic handledInput2: ISettableObservable<boolean> = observableValue(`BaseRangeHandledState${this.baseRange.baseRange}.Input2`, false);\n\n\tpublic computedFromDiffing = false;\n\tpublic previousNonDiffingState: ModifiedBaseRangeState | undefined = undefined;\n\n\tpublic readonly handled = derived(this, reader => this.handledInput1.read(reader) && this.handledInput2.read(reader));\n}\n\nexport const enum MergeEditorModelState {\n\tinitializing = 1,\n\tupToDate = 2,\n\tupdating = 3,\n}\n\nclass MarkAsHandledUndoRedoElement implements IResourceUndoRedoElement {\n\tpublic readonly code = 'undoMarkAsHandled';\n\tpublic readonly label = localize('undoMarkAsHandled', 'Undo Mark As Handled');\n\n\tpublic readonly type = UndoRedoElementType.Resource;\n\n\tconstructor(\n\t\tpublic readonly resource: URI,\n\t\tprivate readonly mergeEditorModelRef: WeakRef<MergeEditorModel>,\n\t\tprivate readonly stateRef: WeakRef<ModifiedBaseRangeData>,\n\t\tprivate readonly input1Handled: boolean,\n\t\tprivate readonly input2Handled: boolean,\n\t) { }\n\n\tpublic redo() {\n\t\tconst mergeEditorModel = this.mergeEditorModelRef.deref();\n\t\tif (!mergeEditorModel || mergeEditorModel.isDisposed()) {\n\t\t\treturn;\n\t\t}\n\t\tconst state = this.stateRef.deref();\n\t\tif (!state) { return; }\n\t\ttransaction(tx => {\n\t\t\tstate.handledInput1.set(true, tx);\n\t\t\tstate.handledInput2.set(true, tx);\n\t\t});\n\t}\n\tpublic undo() {\n\t\tconst mergeEditorModel = this.mergeEditorModelRef.deref();\n\t\tif (!mergeEditorModel || mergeEditorModel.isDisposed()) {\n\t\t\treturn;\n\t\t}\n\t\tconst state = this.stateRef.deref();\n\t\tif (!state) { return; }\n\t\ttransaction(tx => {\n\t\t\tstate.handledInput1.set(this.input1Handled, tx);\n\t\t\tstate.handledInput2.set(this.input2Handled, tx);\n\t\t});\n\t}\n}\n"]}