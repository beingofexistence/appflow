{"version":3,"sources":["vs/workbench/contrib/mergeEditor/browser/mergeEditorInput.ts"],"names":[],"mappings":"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","file":"mergeEditorInput.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { assertFn } from 'vs/base/common/assert';\nimport { autorun } from 'vs/base/common/observable';\nimport { isEqual } from 'vs/base/common/resources';\nimport { isDefined } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { DEFAULT_EDITOR_ASSOCIATION, EditorInputCapabilities, IResourceMergeEditorInput, IRevertOptions, isResourceMergeEditorInput, IUntypedEditorInput } from 'vs/workbench/common/editor';\nimport { EditorInput, IEditorCloseHandler } from 'vs/workbench/common/editor/editorInput';\nimport { AbstractTextResourceEditorInput } from 'vs/workbench/common/editor/textResourceEditorInput';\nimport { IMergeEditorInputModel, TempFileMergeEditorModeFactory, WorkspaceMergeEditorModeFactory } from 'vs/workbench/contrib/mergeEditor/browser/mergeEditorInputModel';\nimport { MergeEditorTelemetry } from 'vs/workbench/contrib/mergeEditor/browser/telemetry';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { IFilesConfigurationService } from 'vs/workbench/services/filesConfiguration/common/filesConfigurationService';\nimport { ILanguageSupport, ITextFileSaveOptions, ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\n\nexport class MergeEditorInputData {\n\tconstructor(\n\t\treadonly uri: URI,\n\t\treadonly title: string | undefined,\n\t\treadonly detail: string | undefined,\n\t\treadonly description: string | undefined,\n\t) { }\n}\n\nexport class MergeEditorInput extends AbstractTextResourceEditorInput implements ILanguageSupport {\n\tstatic readonly ID = 'mergeEditor.Input';\n\n\tprivate _inputModel?: IMergeEditorInputModel;\n\n\toverride closeHandler: IEditorCloseHandler = {\n\t\tshowConfirm: () => this._inputModel?.shouldConfirmClose() ?? false,\n\t\tconfirm: async (editors) => {\n\t\t\tassertFn(() => editors.every(e => e.editor instanceof MergeEditorInput));\n\t\t\tconst inputModels = editors.map(e => (e.editor as MergeEditorInput)._inputModel).filter(isDefined);\n\t\t\treturn await this._inputModel!.confirmClose(inputModels);\n\t\t},\n\t};\n\n\tprivate get useWorkingCopy() {\n\t\treturn this.configurationService.getValue('mergeEditor.useWorkingCopy') ?? false;\n\t}\n\n\tconstructor(\n\t\tpublic readonly base: URI,\n\t\tpublic readonly input1: MergeEditorInputData,\n\t\tpublic readonly input2: MergeEditorInputData,\n\t\tpublic readonly result: URI,\n\t\t@IInstantiationService private readonly _instaService: IInstantiationService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@ITextFileService textFileService: ITextFileService,\n\t\t@ILabelService labelService: ILabelService,\n\t\t@IFileService fileService: IFileService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IFilesConfigurationService filesConfigurationService: IFilesConfigurationService\n\t) {\n\t\tsuper(result, undefined, editorService, textFileService, labelService, fileService, filesConfigurationService);\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t}\n\n\toverride get typeId(): string {\n\t\treturn MergeEditorInput.ID;\n\t}\n\n\toverride get editorId(): string {\n\t\treturn DEFAULT_EDITOR_ASSOCIATION.id;\n\t}\n\n\toverride get capabilities(): EditorInputCapabilities {\n\t\tlet capabilities = super.capabilities | EditorInputCapabilities.MultipleEditors;\n\t\tif (this.useWorkingCopy) {\n\t\t\tcapabilities |= EditorInputCapabilities.Untitled;\n\t\t}\n\t\treturn capabilities;\n\t}\n\n\toverride getName(): string {\n\t\treturn localize('name', \"Merging: {0}\", super.getName());\n\t}\n\n\tprivate readonly mergeEditorModeFactory = this._instaService.createInstance(\n\t\tthis.useWorkingCopy\n\t\t\t? TempFileMergeEditorModeFactory\n\t\t\t: WorkspaceMergeEditorModeFactory,\n\t\tthis._instaService.createInstance(MergeEditorTelemetry),\n\t);\n\n\toverride async resolve(): Promise<IMergeEditorInputModel> {\n\t\tif (!this._inputModel) {\n\t\t\tconst inputModel = this._register(await this.mergeEditorModeFactory.createInputModel({\n\t\t\t\tbase: this.base,\n\t\t\t\tinput1: this.input1,\n\t\t\t\tinput2: this.input2,\n\t\t\t\tresult: this.result,\n\t\t\t}));\n\t\t\tthis._inputModel = inputModel;\n\n\t\t\tthis._register(autorun(reader => {\n\t\t\t\t/** @description fire dirty event */\n\t\t\t\tinputModel.isDirty.read(reader);\n\t\t\t\tthis._onDidChangeDirty.fire();\n\t\t\t}));\n\n\t\t\tawait this._inputModel.model.onInitialized;\n\t\t}\n\n\t\treturn this._inputModel;\n\t}\n\n\tpublic async accept(): Promise<void> {\n\t\tawait this._inputModel?.accept();\n\t}\n\n\toverride async save(group: number, options?: ITextFileSaveOptions | undefined): Promise<IUntypedEditorInput | undefined> {\n\t\tawait this._inputModel?.save(options);\n\t\treturn undefined;\n\t}\n\n\toverride toUntyped(): IResourceMergeEditorInput {\n\t\treturn {\n\t\t\tinput1: { resource: this.input1.uri, label: this.input1.title, description: this.input1.description, detail: this.input1.detail },\n\t\t\tinput2: { resource: this.input2.uri, label: this.input2.title, description: this.input2.description, detail: this.input2.detail },\n\t\t\tbase: { resource: this.base },\n\t\t\tresult: { resource: this.result },\n\t\t\toptions: {\n\t\t\t\toverride: this.typeId\n\t\t\t}\n\t\t};\n\t}\n\n\toverride matches(otherInput: EditorInput | IUntypedEditorInput): boolean {\n\t\tif (this === otherInput) {\n\t\t\treturn true;\n\t\t}\n\t\tif (otherInput instanceof MergeEditorInput) {\n\t\t\treturn isEqual(this.base, otherInput.base)\n\t\t\t\t&& isEqual(this.input1.uri, otherInput.input1.uri)\n\t\t\t\t&& isEqual(this.input2.uri, otherInput.input2.uri)\n\t\t\t\t&& isEqual(this.result, otherInput.result);\n\t\t}\n\t\tif (isResourceMergeEditorInput(otherInput)) {\n\t\t\treturn (this.editorId === otherInput.options?.override || otherInput.options?.override === undefined)\n\t\t\t\t&& isEqual(this.base, otherInput.base.resource)\n\t\t\t\t&& isEqual(this.input1.uri, otherInput.input1.resource)\n\t\t\t\t&& isEqual(this.input2.uri, otherInput.input2.resource)\n\t\t\t\t&& isEqual(this.result, otherInput.result.resource);\n\t\t}\n\n\t\treturn false;\n\t}\n\n\toverride async revert(group: number, options?: IRevertOptions): Promise<void> {\n\t\treturn this._inputModel?.revert(options);\n\t}\n\n\t// ---- FileEditorInput\n\n\toverride isDirty(): boolean {\n\t\treturn this._inputModel?.isDirty.get() ?? false;\n\t}\n\n\tsetLanguageId(languageId: string, source?: string): void {\n\t\tthis._inputModel?.model.setLanguageId(languageId, source);\n\t}\n\n\t// implement get/set encoding\n}\n"]}