{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/mergeEditor/browser/view/lineAlignment.ts"],"names":[],"mappings":"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","file":"lineAlignment.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { compareBy } from 'vs/base/common/arrays';\nimport { assertFn, checkAdjacentItems } from 'vs/base/common/assert';\nimport { isDefined } from 'vs/base/common/types';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { LengthObj } from 'vs/editor/common/model/bracketPairsTextModelPart/bracketPairsTree/length';\nimport { RangeMapping } from 'vs/workbench/contrib/mergeEditor/browser/model/mapping';\nimport { ModifiedBaseRange } from 'vs/workbench/contrib/mergeEditor/browser/model/modifiedBaseRange';\nimport { addLength, lengthBetweenPositions, lengthOfRange } from 'vs/workbench/contrib/mergeEditor/browser/model/rangeUtils';\n\nexport type LineAlignment = [input1LineNumber: number | undefined, baseLineNumber: number, input2LineNumber: number | undefined];\n\nexport function getAlignments(m: ModifiedBaseRange): LineAlignment[] {\n\tconst equalRanges1 = toEqualRangeMappings(m.input1Diffs.flatMap(d => d.rangeMappings), m.baseRange.toRange(), m.input1Range.toRange());\n\tconst equalRanges2 = toEqualRangeMappings(m.input2Diffs.flatMap(d => d.rangeMappings), m.baseRange.toRange(), m.input2Range.toRange());\n\n\tconst commonRanges = splitUpCommonEqualRangeMappings(equalRanges1, equalRanges2);\n\n\tlet result: LineAlignment[] = [];\n\tresult.push([m.input1Range.startLineNumber - 1, m.baseRange.startLineNumber - 1, m.input2Range.startLineNumber - 1]);\n\n\tfunction isFullSync(lineAlignment: LineAlignment) {\n\t\treturn lineAlignment.every((i) => i !== undefined);\n\t}\n\n\t// One base line has either up to one full sync or up to two half syncs.\n\tfor (const m of commonRanges) {\n\t\tconst lineAlignment: LineAlignment = [m.output1Pos?.lineNumber, m.inputPos.lineNumber, m.output2Pos?.lineNumber];\n\t\tconst alignmentIsFullSync = isFullSync(lineAlignment);\n\n\t\tlet shouldAdd = true;\n\t\tif (alignmentIsFullSync) {\n\t\t\tconst isNewFullSyncAlignment = !result.some(r => isFullSync(r) && r.some((v, idx) => v !== undefined && v === lineAlignment[idx]));\n\t\t\tif (isNewFullSyncAlignment) {\n\t\t\t\t// Remove half syncs\n\t\t\t\tresult = result.filter(r => !r.some((v, idx) => v !== undefined && v === lineAlignment[idx]));\n\t\t\t}\n\t\t\tshouldAdd = isNewFullSyncAlignment;\n\t\t} else {\n\t\t\tconst isNew = !result.some(r => r.some((v, idx) => v !== undefined && v === lineAlignment[idx]));\n\t\t\tshouldAdd = isNew;\n\t\t}\n\n\t\tif (shouldAdd) {\n\t\t\tresult.push(lineAlignment);\n\t\t} else {\n\t\t\tif (m.length.isGreaterThan(new LengthObj(1, 0))) {\n\t\t\t\tresult.push([\n\t\t\t\t\tm.output1Pos ? m.output1Pos.lineNumber + 1 : undefined,\n\t\t\t\t\tm.inputPos.lineNumber + 1,\n\t\t\t\t\tm.output2Pos ? m.output2Pos.lineNumber + 1 : undefined\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\t}\n\n\tconst finalLineAlignment: LineAlignment = [m.input1Range.endLineNumberExclusive, m.baseRange.endLineNumberExclusive, m.input2Range.endLineNumberExclusive];\n\tresult = result.filter(r => r.every((v, idx) => v !== finalLineAlignment[idx]));\n\tresult.push(finalLineAlignment);\n\n\tassertFn(() => checkAdjacentItems(result.map(r => r[0]).filter(isDefined), (a, b) => a < b)\n\t\t&& checkAdjacentItems(result.map(r => r[1]).filter(isDefined), (a, b) => a <= b)\n\t\t&& checkAdjacentItems(result.map(r => r[2]).filter(isDefined), (a, b) => a < b)\n\t\t&& result.every(alignment => alignment.filter(isDefined).length >= 2)\n\t);\n\n\treturn result;\n}\ninterface CommonRangeMapping {\n\toutput1Pos: Position | undefined;\n\toutput2Pos: Position | undefined;\n\tinputPos: Position;\n\tlength: LengthObj;\n}\n\nfunction toEqualRangeMappings(diffs: RangeMapping[], inputRange: Range, outputRange: Range): RangeMapping[] {\n\tconst result: RangeMapping[] = [];\n\n\tlet equalRangeInputStart = inputRange.getStartPosition();\n\tlet equalRangeOutputStart = outputRange.getStartPosition();\n\n\tfor (const d of diffs) {\n\t\tconst equalRangeMapping = new RangeMapping(\n\t\t\tRange.fromPositions(equalRangeInputStart, d.inputRange.getStartPosition()),\n\t\t\tRange.fromPositions(equalRangeOutputStart, d.outputRange.getStartPosition())\n\t\t);\n\t\tassertFn(() => lengthOfRange(equalRangeMapping.inputRange).equals(\n\t\t\tlengthOfRange(equalRangeMapping.outputRange)\n\t\t)\n\t\t);\n\t\tif (!equalRangeMapping.inputRange.isEmpty()) {\n\t\t\tresult.push(equalRangeMapping);\n\t\t}\n\n\t\tequalRangeInputStart = d.inputRange.getEndPosition();\n\t\tequalRangeOutputStart = d.outputRange.getEndPosition();\n\t}\n\n\tconst equalRangeMapping = new RangeMapping(\n\t\tRange.fromPositions(equalRangeInputStart, inputRange.getEndPosition()),\n\t\tRange.fromPositions(equalRangeOutputStart, outputRange.getEndPosition())\n\t);\n\tassertFn(() => lengthOfRange(equalRangeMapping.inputRange).equals(\n\t\tlengthOfRange(equalRangeMapping.outputRange)\n\t)\n\t);\n\tif (!equalRangeMapping.inputRange.isEmpty()) {\n\t\tresult.push(equalRangeMapping);\n\t}\n\n\treturn result;\n}\n\n/**\n * It is `result[i][0].inputRange.equals(result[i][1].inputRange)`.\n*/\nfunction splitUpCommonEqualRangeMappings(\n\tequalRangeMappings1: RangeMapping[],\n\tequalRangeMappings2: RangeMapping[]\n): CommonRangeMapping[] {\n\tconst result: CommonRangeMapping[] = [];\n\n\tconst events: { input: 0 | 1; start: boolean; inputPos: Position; outputPos: Position }[] = [];\n\tfor (const [input, rangeMappings] of [[0, equalRangeMappings1], [1, equalRangeMappings2]] as const) {\n\t\tfor (const rangeMapping of rangeMappings) {\n\t\t\tevents.push({\n\t\t\t\tinput: input,\n\t\t\t\tstart: true,\n\t\t\t\tinputPos: rangeMapping.inputRange.getStartPosition(),\n\t\t\t\toutputPos: rangeMapping.outputRange.getStartPosition()\n\t\t\t});\n\t\t\tevents.push({\n\t\t\t\tinput: input,\n\t\t\t\tstart: false,\n\t\t\t\tinputPos: rangeMapping.inputRange.getEndPosition(),\n\t\t\t\toutputPos: rangeMapping.outputRange.getEndPosition()\n\t\t\t});\n\t\t}\n\t}\n\n\tevents.sort(compareBy((m) => m.inputPos, Position.compare));\n\n\tconst starts: [Position | undefined, Position | undefined] = [undefined, undefined];\n\tlet lastInputPos: Position | undefined;\n\n\tfor (const event of events) {\n\t\tif (lastInputPos && starts.some(s => !!s)) {\n\t\t\tconst length = lengthBetweenPositions(lastInputPos, event.inputPos);\n\t\t\tif (!length.isZero()) {\n\t\t\t\tresult.push({\n\t\t\t\t\tinputPos: lastInputPos,\n\t\t\t\t\tlength,\n\t\t\t\t\toutput1Pos: starts[0],\n\t\t\t\t\toutput2Pos: starts[1]\n\t\t\t\t});\n\t\t\t\tif (starts[0]) {\n\t\t\t\t\tstarts[0] = addLength(starts[0], length);\n\t\t\t\t}\n\t\t\t\tif (starts[1]) {\n\t\t\t\t\tstarts[1] = addLength(starts[1], length);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tstarts[event.input] = event.start ? event.outputPos : undefined;\n\t\tlastInputPos = event.inputPos;\n\t}\n\n\treturn result;\n}\n"]}