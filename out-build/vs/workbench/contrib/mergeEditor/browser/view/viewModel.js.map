{"version":3,"sources":["vs/workbench/contrib/mergeEditor/browser/view/viewModel.ts"],"names":[],"mappings":"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","file":"viewModel.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { findLast } from 'vs/base/common/arraysFind';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { derived, derivedObservableWithWritableCache, IObservable, IReader, ITransaction, observableValue, transaction } from 'vs/base/common/observable';\nimport { Range } from 'vs/editor/common/core/range';\nimport { ScrollType } from 'vs/editor/common/editorCommon';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { localize } from 'vs/nls';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { INotificationService } from 'vs/platform/notification/common/notification';\nimport { LineRange } from 'vs/workbench/contrib/mergeEditor/browser/model/lineRange';\nimport { MergeEditorModel } from 'vs/workbench/contrib/mergeEditor/browser/model/mergeEditorModel';\nimport { InputNumber, ModifiedBaseRange, ModifiedBaseRangeState } from 'vs/workbench/contrib/mergeEditor/browser/model/modifiedBaseRange';\nimport { observableConfigValue } from 'vs/workbench/contrib/mergeEditor/browser/utils';\nimport { BaseCodeEditorView } from 'vs/workbench/contrib/mergeEditor/browser/view/editors/baseCodeEditorView';\nimport { CodeEditorView } from 'vs/workbench/contrib/mergeEditor/browser/view/editors/codeEditorView';\nimport { InputCodeEditorView } from 'vs/workbench/contrib/mergeEditor/browser/view/editors/inputCodeEditorView';\nimport { ResultCodeEditorView } from 'vs/workbench/contrib/mergeEditor/browser/view/editors/resultCodeEditorView';\n\nexport class MergeEditorViewModel extends Disposable {\n\tprivate readonly manuallySetActiveModifiedBaseRange = observableValue<\n\t\t{ range: ModifiedBaseRange | undefined; counter: number }\n\t>(this, { range: undefined, counter: 0 });\n\n\tprivate readonly attachedHistory = this._register(new AttachedHistory(this.model.resultTextModel));\n\n\tconstructor(\n\t\tpublic readonly model: MergeEditorModel,\n\t\tpublic readonly inputCodeEditorView1: InputCodeEditorView,\n\t\tpublic readonly inputCodeEditorView2: InputCodeEditorView,\n\t\tpublic readonly resultCodeEditorView: ResultCodeEditorView,\n\t\tpublic readonly baseCodeEditorView: IObservable<BaseCodeEditorView | undefined>,\n\t\tpublic readonly showNonConflictingChanges: IObservable<boolean>,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(resultCodeEditorView.editor.onDidChangeModelContent(e => {\n\t\t\tif (this.model.isApplyingEditInResult || e.isRedoing || e.isUndoing) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst baseRangeStates: ModifiedBaseRange[] = [];\n\n\t\t\tfor (const change of e.changes) {\n\t\t\t\tconst rangeInBase = this.model.translateResultRangeToBase(Range.lift(change.range));\n\t\t\t\tconst baseRanges = this.model.findModifiedBaseRangesInRange(new LineRange(rangeInBase.startLineNumber, rangeInBase.endLineNumber - rangeInBase.startLineNumber));\n\t\t\t\tif (baseRanges.length === 1) {\n\t\t\t\t\tconst isHandled = this.model.isHandled(baseRanges[0]).get();\n\t\t\t\t\tif (!isHandled) {\n\t\t\t\t\t\tbaseRangeStates.push(baseRanges[0]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (baseRangeStates.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst element = {\n\t\t\t\tmodel: this.model,\n\t\t\t\tredo() {\n\t\t\t\t\ttransaction(tx => {\n\t\t\t\t\t\t/** @description Mark conflicts touched by manual edits as handled */\n\t\t\t\t\t\tfor (const r of baseRangeStates) {\n\t\t\t\t\t\t\tthis.model.setHandled(r, true, tx);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tundo() {\n\t\t\t\t\ttransaction(tx => {\n\t\t\t\t\t\t/** @description Mark conflicts touched by manual edits as handled */\n\t\t\t\t\t\tfor (const r of baseRangeStates) {\n\t\t\t\t\t\t\tthis.model.setHandled(r, false, tx);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t};\n\t\t\tthis.attachedHistory.pushAttachedHistoryElement(element);\n\t\t\telement.redo();\n\t\t}));\n\t}\n\n\tpublic readonly shouldUseAppendInsteadOfAccept = observableConfigValue<boolean>(\n\t\t'mergeEditor.shouldUseAppendInsteadOfAccept',\n\t\tfalse,\n\t\tthis.configurationService,\n\t);\n\n\tprivate counter = 0;\n\tprivate readonly lastFocusedEditor = derivedObservableWithWritableCache<\n\t\t{ view: CodeEditorView | undefined; counter: number }\n\t>(this, (reader, lastValue) => {\n\t\tconst editors = [\n\t\t\tthis.inputCodeEditorView1,\n\t\t\tthis.inputCodeEditorView2,\n\t\t\tthis.resultCodeEditorView,\n\t\t\tthis.baseCodeEditorView.read(reader),\n\t\t];\n\t\tconst view = editors.find((e) => e && e.isFocused.read(reader));\n\t\treturn view ? { view, counter: this.counter++ } : lastValue || { view: undefined, counter: this.counter++ };\n\t});\n\n\tpublic readonly baseShowDiffAgainst = derived<1 | 2 | undefined>(this, reader => {\n\t\tconst lastFocusedEditor = this.lastFocusedEditor.read(reader);\n\t\tif (lastFocusedEditor.view === this.inputCodeEditorView1) {\n\t\t\treturn 1;\n\t\t} else if (lastFocusedEditor.view === this.inputCodeEditorView2) {\n\t\t\treturn 2;\n\t\t}\n\t\treturn undefined;\n\t});\n\n\tpublic readonly selectionInBase = derived(this, reader => {\n\t\tconst sourceEditor = this.lastFocusedEditor.read(reader).view;\n\t\tif (!sourceEditor) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst selections = sourceEditor.selection.read(reader) || [];\n\n\t\tconst rangesInBase = selections.map((selection) => {\n\t\t\tif (sourceEditor === this.inputCodeEditorView1) {\n\t\t\t\treturn this.model.translateInputRangeToBase(1, selection);\n\t\t\t} else if (sourceEditor === this.inputCodeEditorView2) {\n\t\t\t\treturn this.model.translateInputRangeToBase(2, selection);\n\t\t\t} else if (sourceEditor === this.resultCodeEditorView) {\n\t\t\t\treturn this.model.translateResultRangeToBase(selection);\n\t\t\t} else if (sourceEditor === this.baseCodeEditorView.read(reader)) {\n\t\t\t\treturn selection;\n\t\t\t} else {\n\t\t\t\treturn selection;\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\trangesInBase,\n\t\t\tsourceEditor\n\t\t};\n\t});\n\n\tprivate getRangeOfModifiedBaseRange(editor: CodeEditorView, modifiedBaseRange: ModifiedBaseRange, reader: IReader | undefined): LineRange {\n\t\tif (editor === this.resultCodeEditorView) {\n\t\t\treturn this.model.getLineRangeInResult(modifiedBaseRange.baseRange, reader);\n\t\t} else if (editor === this.baseCodeEditorView.get()) {\n\t\t\treturn modifiedBaseRange.baseRange;\n\t\t} else {\n\t\t\tconst input = editor === this.inputCodeEditorView1 ? 1 : 2;\n\t\t\treturn modifiedBaseRange.getInputRange(input);\n\t\t}\n\t}\n\n\tpublic readonly activeModifiedBaseRange = derived(this,\n\t\t(reader) => {\n\t\t\t/** @description activeModifiedBaseRange */\n\t\t\tconst focusedEditor = this.lastFocusedEditor.read(reader);\n\t\t\tconst manualRange = this.manuallySetActiveModifiedBaseRange.read(reader);\n\t\t\tif (manualRange.counter > focusedEditor.counter) {\n\t\t\t\treturn manualRange.range;\n\t\t\t}\n\n\t\t\tif (!focusedEditor.view) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst cursorLineNumber = focusedEditor.view.cursorLineNumber.read(reader);\n\t\t\tif (!cursorLineNumber) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\n\t\t\tconst modifiedBaseRanges = this.model.modifiedBaseRanges.read(reader);\n\t\t\treturn modifiedBaseRanges.find((r) => {\n\t\t\t\tconst range = this.getRangeOfModifiedBaseRange(focusedEditor.view!, r, reader);\n\t\t\t\treturn range.isEmpty\n\t\t\t\t\t? range.startLineNumber === cursorLineNumber\n\t\t\t\t\t: range.contains(cursorLineNumber);\n\t\t\t});\n\t\t}\n\t);\n\n\tpublic setActiveModifiedBaseRange(range: ModifiedBaseRange | undefined, tx: ITransaction): void {\n\t\tthis.manuallySetActiveModifiedBaseRange.set({ range, counter: this.counter++ }, tx);\n\t}\n\n\tpublic setState(\n\t\tbaseRange: ModifiedBaseRange,\n\t\tstate: ModifiedBaseRangeState,\n\t\ttx: ITransaction,\n\t\tinputNumber: InputNumber,\n\t): void {\n\t\tthis.manuallySetActiveModifiedBaseRange.set({ range: baseRange, counter: this.counter++ }, tx);\n\t\tthis.model.setState(baseRange, state, inputNumber, tx);\n\t}\n\n\tprivate goToConflict(getModifiedBaseRange: (editor: CodeEditorView, curLineNumber: number) => ModifiedBaseRange | undefined): void {\n\t\tlet editor = this.lastFocusedEditor.get().view;\n\t\tif (!editor) {\n\t\t\teditor = this.resultCodeEditorView;\n\t\t}\n\t\tconst curLineNumber = editor.editor.getPosition()?.lineNumber;\n\t\tif (curLineNumber === undefined) {\n\t\t\treturn;\n\t\t}\n\t\tconst modifiedBaseRange = getModifiedBaseRange(editor, curLineNumber);\n\t\tif (modifiedBaseRange) {\n\t\t\tconst range = this.getRangeOfModifiedBaseRange(editor, modifiedBaseRange, undefined);\n\t\t\teditor.editor.focus();\n\n\t\t\tlet startLineNumber = range.startLineNumber;\n\t\t\tlet endLineNumberExclusive = range.endLineNumberExclusive;\n\t\t\tif (range.startLineNumber > editor.editor.getModel()!.getLineCount()) {\n\t\t\t\ttransaction(tx => {\n\t\t\t\t\tthis.setActiveModifiedBaseRange(modifiedBaseRange, tx);\n\t\t\t\t});\n\t\t\t\tstartLineNumber = endLineNumberExclusive = editor.editor.getModel()!.getLineCount();\n\t\t\t}\n\n\t\t\teditor.editor.setPosition({\n\t\t\t\tlineNumber: startLineNumber,\n\t\t\t\tcolumn: editor.editor.getModel()!.getLineFirstNonWhitespaceColumn(startLineNumber),\n\t\t\t});\n\t\t\teditor.editor.revealLinesNearTop(startLineNumber, endLineNumberExclusive, ScrollType.Smooth);\n\t\t}\n\t}\n\n\tpublic goToNextModifiedBaseRange(predicate: (m: ModifiedBaseRange) => boolean): void {\n\t\tthis.goToConflict(\n\t\t\t(e, l) =>\n\t\t\t\tthis.model.modifiedBaseRanges\n\t\t\t\t\t.get()\n\t\t\t\t\t.find(\n\t\t\t\t\t\t(r) =>\n\t\t\t\t\t\t\tpredicate(r) &&\n\t\t\t\t\t\t\tthis.getRangeOfModifiedBaseRange(e, r, undefined).startLineNumber > l\n\t\t\t\t\t) ||\n\t\t\t\tthis.model.modifiedBaseRanges\n\t\t\t\t\t.get()\n\t\t\t\t\t.find((r) => predicate(r))\n\t\t);\n\t}\n\n\tpublic goToPreviousModifiedBaseRange(predicate: (m: ModifiedBaseRange) => boolean): void {\n\t\tthis.goToConflict(\n\t\t\t(e, l) =>\n\t\t\t\tfindLast(\n\t\t\t\t\tthis.model.modifiedBaseRanges.get(),\n\t\t\t\t\t(r) =>\n\t\t\t\t\t\tpredicate(r) &&\n\t\t\t\t\t\tthis.getRangeOfModifiedBaseRange(e, r, undefined).endLineNumberExclusive < l\n\t\t\t\t) ||\n\t\t\t\tfindLast(\n\t\t\t\t\tthis.model.modifiedBaseRanges.get(),\n\t\t\t\t\t(r) => predicate(r)\n\t\t\t\t)\n\t\t);\n\t}\n\n\tpublic toggleActiveConflict(inputNumber: 1 | 2): void {\n\t\tconst activeModifiedBaseRange = this.activeModifiedBaseRange.get();\n\t\tif (!activeModifiedBaseRange) {\n\t\t\tthis.notificationService.error(localize('noConflictMessage', \"There is currently no conflict focused that can be toggled.\"));\n\t\t\treturn;\n\t\t}\n\t\ttransaction(tx => {\n\t\t\t/** @description Toggle Active Conflict */\n\t\t\tthis.setState(\n\t\t\t\tactiveModifiedBaseRange,\n\t\t\t\tthis.model.getState(activeModifiedBaseRange).get().toggle(inputNumber),\n\t\t\t\ttx,\n\t\t\t\tinputNumber,\n\t\t\t);\n\t\t});\n\t}\n\n\tpublic acceptAll(inputNumber: 1 | 2): void {\n\t\ttransaction(tx => {\n\t\t\t/** @description Toggle Active Conflict */\n\t\t\tfor (const range of this.model.modifiedBaseRanges.get()) {\n\t\t\t\tthis.setState(\n\t\t\t\t\trange,\n\t\t\t\t\tthis.model.getState(range).get().withInputValue(inputNumber, true),\n\t\t\t\t\ttx,\n\t\t\t\t\tinputNumber\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n}\n\nclass AttachedHistory extends Disposable {\n\tprivate readonly attachedHistory: { element: IAttachedHistoryElement; altId: number }[] = [];\n\tprivate previousAltId: number = this.model.getAlternativeVersionId();\n\n\tconstructor(private readonly model: ITextModel) {\n\t\tsuper();\n\n\t\tthis._register(model.onDidChangeContent((e) => {\n\t\t\tconst currentAltId = model.getAlternativeVersionId();\n\n\t\t\tif (e.isRedoing) {\n\t\t\t\tfor (const item of this.attachedHistory) {\n\t\t\t\t\tif (this.previousAltId < item.altId && item.altId <= currentAltId) {\n\t\t\t\t\t\titem.element.redo();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (e.isUndoing) {\n\t\t\t\tfor (let i = this.attachedHistory.length - 1; i >= 0; i--) {\n\t\t\t\t\tconst item = this.attachedHistory[i];\n\t\t\t\t\tif (currentAltId < item.altId && item.altId <= this.previousAltId) {\n\t\t\t\t\t\titem.element.undo();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\t// The user destroyed the redo stack by performing a non redo/undo operation.\n\t\t\t\t// Thus we also need to remove all history elements after the last version id.\n\t\t\t\twhile (\n\t\t\t\t\tthis.attachedHistory.length > 0\n\t\t\t\t\t&& this.attachedHistory[this.attachedHistory.length - 1]!.altId > this.previousAltId\n\t\t\t\t) {\n\t\t\t\t\tthis.attachedHistory.pop();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.previousAltId = currentAltId;\n\t\t}));\n\t}\n\n\t/**\n\t * Pushes an history item that is tied to the last text edit (or an extension of it).\n\t * When the last text edit is undone/redone, so is is this history item.\n\t */\n\tpublic pushAttachedHistoryElement(element: IAttachedHistoryElement): void {\n\t\tthis.attachedHistory.push({ altId: this.model.getAlternativeVersionId(), element });\n\t}\n}\n\ninterface IAttachedHistoryElement {\n\tundo(): void;\n\tredo(): void;\n}\n"]}