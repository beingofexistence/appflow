{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/mergeEditor/browser/view/scrollSynchronizer.ts"],"names":[],"mappings":"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","file":"scrollSynchronizer.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { autorunWithStore, IObservable } from 'vs/base/common/observable';\nimport { CodeEditorWidget } from 'vs/editor/browser/widget/codeEditorWidget';\nimport { ScrollType } from 'vs/editor/common/editorCommon';\nimport { DocumentLineRangeMap } from 'vs/workbench/contrib/mergeEditor/browser/model/mapping';\nimport { ReentrancyBarrier } from 'vs/workbench/contrib/mergeEditor/browser/utils';\nimport { BaseCodeEditorView } from 'vs/workbench/contrib/mergeEditor/browser/view/editors/baseCodeEditorView';\nimport { IMergeEditorLayout } from 'vs/workbench/contrib/mergeEditor/browser/view/mergeEditor';\nimport { MergeEditorViewModel } from 'vs/workbench/contrib/mergeEditor/browser/view/viewModel';\nimport { InputCodeEditorView } from './editors/inputCodeEditorView';\nimport { ResultCodeEditorView } from './editors/resultCodeEditorView';\n\nexport class ScrollSynchronizer extends Disposable {\n\tprivate get model() { return this.viewModel.get()?.model; }\n\n\tprivate readonly reentrancyBarrier = new ReentrancyBarrier();\n\n\tpublic readonly updateScrolling: () => void;\n\n\tprivate get shouldAlignResult() { return this.layout.get().kind === 'columns'; }\n\tprivate get shouldAlignBase() { return this.layout.get().kind === 'mixed' && !this.layout.get().showBaseAtTop; }\n\n\tconstructor(\n\t\tprivate readonly viewModel: IObservable<MergeEditorViewModel | undefined>,\n\t\tprivate readonly input1View: InputCodeEditorView,\n\t\tprivate readonly input2View: InputCodeEditorView,\n\t\tprivate readonly baseView: IObservable<BaseCodeEditorView | undefined>,\n\t\tprivate readonly inputResultView: ResultCodeEditorView,\n\t\tprivate readonly layout: IObservable<IMergeEditorLayout>,\n\t) {\n\t\tsuper();\n\n\t\tconst handleInput1OnScroll = this.updateScrolling = () => {\n\t\t\tif (!this.model) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.input2View.editor.setScrollTop(this.input1View.editor.getScrollTop(), ScrollType.Immediate);\n\n\t\t\tif (this.shouldAlignResult) {\n\t\t\t\tthis.inputResultView.editor.setScrollTop(this.input1View.editor.getScrollTop(), ScrollType.Immediate);\n\t\t\t} else {\n\t\t\t\tconst mappingInput1Result = this.model!.input1ResultMapping.get();\n\t\t\t\tthis.synchronizeScrolling(this.input1View.editor, this.inputResultView.editor, mappingInput1Result);\n\t\t\t}\n\n\t\t\tconst baseView = this.baseView.get();\n\t\t\tif (baseView) {\n\t\t\t\tif (this.shouldAlignBase) {\n\t\t\t\t\tthis.baseView.get()?.editor.setScrollTop(this.input1View.editor.getScrollTop(), ScrollType.Immediate);\n\t\t\t\t} else {\n\t\t\t\t\tconst mapping = new DocumentLineRangeMap(this.model!.baseInput1Diffs.get(), -1).reverse();\n\t\t\t\t\tthis.synchronizeScrolling(this.input1View.editor, baseView.editor, mapping);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis._store.add(\n\t\t\tthis.input1View.editor.onDidScrollChange(\n\t\t\t\tthis.reentrancyBarrier.makeExclusive((c) => {\n\t\t\t\t\tif (c.scrollTopChanged) {\n\t\t\t\t\t\thandleInput1OnScroll();\n\t\t\t\t\t}\n\t\t\t\t\tif (c.scrollLeftChanged) {\n\t\t\t\t\t\tthis.baseView.get()?.editor.setScrollLeft(c.scrollLeft, ScrollType.Immediate);\n\t\t\t\t\t\tthis.input2View.editor.setScrollLeft(c.scrollLeft, ScrollType.Immediate);\n\t\t\t\t\t\tthis.inputResultView.editor.setScrollLeft(c.scrollLeft, ScrollType.Immediate);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t)\n\t\t);\n\n\t\tthis._store.add(\n\t\t\tthis.input2View.editor.onDidScrollChange(\n\t\t\t\tthis.reentrancyBarrier.makeExclusive((c) => {\n\t\t\t\t\tif (!this.model) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (c.scrollTopChanged) {\n\t\t\t\t\t\tthis.input1View.editor.setScrollTop(c.scrollTop, ScrollType.Immediate);\n\n\t\t\t\t\t\tif (this.shouldAlignResult) {\n\t\t\t\t\t\t\tthis.inputResultView.editor.setScrollTop(this.input2View.editor.getScrollTop(), ScrollType.Immediate);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst mappingInput2Result = this.model!.input2ResultMapping.get();\n\t\t\t\t\t\t\tthis.synchronizeScrolling(this.input2View.editor, this.inputResultView.editor, mappingInput2Result);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst baseView = this.baseView.get();\n\t\t\t\t\t\tif (baseView && this.model) {\n\t\t\t\t\t\t\tif (this.shouldAlignBase) {\n\t\t\t\t\t\t\t\tthis.baseView.get()?.editor.setScrollTop(c.scrollTop, ScrollType.Immediate);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconst mapping = new DocumentLineRangeMap(this.model!.baseInput2Diffs.get(), -1).reverse();\n\t\t\t\t\t\t\t\tthis.synchronizeScrolling(this.input2View.editor, baseView.editor, mapping);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (c.scrollLeftChanged) {\n\t\t\t\t\t\tthis.baseView.get()?.editor.setScrollLeft(c.scrollLeft, ScrollType.Immediate);\n\t\t\t\t\t\tthis.input1View.editor.setScrollLeft(c.scrollLeft, ScrollType.Immediate);\n\t\t\t\t\t\tthis.inputResultView.editor.setScrollLeft(c.scrollLeft, ScrollType.Immediate);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t)\n\t\t);\n\t\tthis._store.add(\n\t\t\tthis.inputResultView.editor.onDidScrollChange(\n\t\t\t\tthis.reentrancyBarrier.makeExclusive((c) => {\n\t\t\t\t\tif (c.scrollTopChanged) {\n\t\t\t\t\t\tif (this.shouldAlignResult) {\n\t\t\t\t\t\t\tthis.input1View.editor.setScrollTop(c.scrollTop, ScrollType.Immediate);\n\t\t\t\t\t\t\tthis.input2View.editor.setScrollTop(c.scrollTop, ScrollType.Immediate);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst mapping1 = this.model?.resultInput1Mapping.get();\n\t\t\t\t\t\t\tthis.synchronizeScrolling(this.inputResultView.editor, this.input1View.editor, mapping1);\n\n\t\t\t\t\t\t\tconst mapping2 = this.model?.resultInput2Mapping.get();\n\t\t\t\t\t\t\tthis.synchronizeScrolling(this.inputResultView.editor, this.input2View.editor, mapping2);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst baseMapping = this.model?.resultBaseMapping.get();\n\t\t\t\t\t\tconst baseView = this.baseView.get();\n\t\t\t\t\t\tif (baseView && this.model) {\n\t\t\t\t\t\t\tthis.synchronizeScrolling(this.inputResultView.editor, baseView.editor, baseMapping);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (c.scrollLeftChanged) {\n\t\t\t\t\t\tthis.baseView.get()?.editor?.setScrollLeft(c.scrollLeft, ScrollType.Immediate);\n\t\t\t\t\t\tthis.input1View.editor.setScrollLeft(c.scrollLeft, ScrollType.Immediate);\n\t\t\t\t\t\tthis.input2View.editor.setScrollLeft(c.scrollLeft, ScrollType.Immediate);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t)\n\t\t);\n\n\t\tthis._store.add(\n\t\t\tautorunWithStore((reader, store) => {\n\t\t\t\t/** @description set baseViewEditor.onDidScrollChange */\n\t\t\t\tconst baseView = this.baseView.read(reader);\n\t\t\t\tif (baseView) {\n\t\t\t\t\tstore.add(baseView.editor.onDidScrollChange(\n\t\t\t\t\t\tthis.reentrancyBarrier.makeExclusive((c) => {\n\t\t\t\t\t\t\tif (c.scrollTopChanged) {\n\t\t\t\t\t\t\t\tif (!this.model) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (this.shouldAlignBase) {\n\t\t\t\t\t\t\t\t\tthis.input1View.editor.setScrollTop(c.scrollTop, ScrollType.Immediate);\n\t\t\t\t\t\t\t\t\tthis.input2View.editor.setScrollTop(c.scrollTop, ScrollType.Immediate);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tconst baseInput1Mapping = new DocumentLineRangeMap(this.model!.baseInput1Diffs.get(), -1);\n\t\t\t\t\t\t\t\t\tthis.synchronizeScrolling(baseView.editor, this.input1View.editor, baseInput1Mapping);\n\n\t\t\t\t\t\t\t\t\tconst baseInput2Mapping = new DocumentLineRangeMap(this.model!.baseInput2Diffs.get(), -1);\n\t\t\t\t\t\t\t\t\tthis.synchronizeScrolling(baseView.editor, this.input2View.editor, baseInput2Mapping);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tconst baseMapping = this.model?.baseResultMapping.get();\n\t\t\t\t\t\t\t\tthis.synchronizeScrolling(baseView.editor, this.inputResultView.editor, baseMapping);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (c.scrollLeftChanged) {\n\t\t\t\t\t\t\t\tthis.inputResultView.editor.setScrollLeft(c.scrollLeft, ScrollType.Immediate);\n\t\t\t\t\t\t\t\tthis.input1View.editor.setScrollLeft(c.scrollLeft, ScrollType.Immediate);\n\t\t\t\t\t\t\t\tthis.input2View.editor.setScrollLeft(c.scrollLeft, ScrollType.Immediate);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t));\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t}\n\n\tprivate synchronizeScrolling(scrollingEditor: CodeEditorWidget, targetEditor: CodeEditorWidget, mapping: DocumentLineRangeMap | undefined) {\n\t\tif (!mapping) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst visibleRanges = scrollingEditor.getVisibleRanges();\n\t\tif (visibleRanges.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tconst topLineNumber = visibleRanges[0].startLineNumber - 1;\n\n\t\tconst result = mapping.project(topLineNumber);\n\t\tconst sourceRange = result.inputRange;\n\t\tconst targetRange = result.outputRange;\n\n\t\tconst resultStartTopPx = targetEditor.getTopForLineNumber(targetRange.startLineNumber);\n\t\tconst resultEndPx = targetEditor.getTopForLineNumber(targetRange.endLineNumberExclusive);\n\n\t\tconst sourceStartTopPx = scrollingEditor.getTopForLineNumber(sourceRange.startLineNumber);\n\t\tconst sourceEndPx = scrollingEditor.getTopForLineNumber(sourceRange.endLineNumberExclusive);\n\n\t\tconst factor = Math.min((scrollingEditor.getScrollTop() - sourceStartTopPx) / (sourceEndPx - sourceStartTopPx), 1);\n\t\tconst resultScrollPosition = resultStartTopPx + (resultEndPx - resultStartTopPx) * factor;\n\n\t\ttargetEditor.setScrollTop(resultScrollPosition, ScrollType.Immediate);\n\t}\n}\n"]}