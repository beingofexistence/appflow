{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/mergeEditor/browser/view/editors/codeEditorView.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAsBhG,MAAsB,IAAe,SAAQ,eAAG;QAmDxC,aAAa,CAAC,UAAoC;YACxD,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QACvC,CAAC;QAmBD,YACkB,CAAyB,EAC1B,SAAwD,EACvD,CAAyB;YAE1C,KAAK,EAAE,CAAC;YAJS,MAAC,GAAD,CAAC,CAAwB;YAC1B,cAAS,GAAT,SAAS,CAA+C;YACvD,MAAC,GAAD,CAAC,CAAwB;YA1ElC,UAAK,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,yBAAyB,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;YAE1D,MAAC,GAAc,IAAA,OAAC,EAAC,eAAe,EAAE;gBACpD,IAAA,OAAC,EAAC,mBAAmB,EAAE;oBACtB,IAAA,OAAC,EAAC,kBAAkB,CAAC;oBACrB,IAAA,OAAC,EAAC,8BAA8B,CAAC;oBACjC,IAAA,OAAC,EAAC,oBAAoB,CAAC;oBACvB,IAAA,OAAC,EAAC,sBAAsB,CAAC;iBACzB,CAAC;gBACF,IAAA,OAAC,EAAC,eAAe,EAAE;oBAClB,IAAA,OAAC,EAAC,sBAAsB,CAAC;oBACzB,IAAA,OAAC,EAAC,YAAY,CAAC;iBACf,CAAC;aACF,CAAC,CAAC;YAEc,MAAC,GAAkB,IAAI,WAAG,EAA6B,CAAC;YAEzD,SAAI,GAAU;gBAC7B,OAAO,EAAE,IAAI,CAAC,CAAC,CAAY,IAAI;gBAC/B,YAAY,EAAE,YAAG,CAA2B,KAAK;gBACjD,YAAY,EAAE,YAAG,CAA2B,KAAK;gBACjD,aAAa,EAAE,YAAG,CAA2B,MAAM;gBACnD,aAAa,EAAE,YAAG,CAA2B,MAAM;gBACnD,WAAW,EAAE,IAAI,CAAC,CAAC,CAAgB,KAAK;gBACxC,MAAM,EAAE,CAAC,KAAa,EAAE,MAAc,EAAE,GAAW,EAAE,IAAY,EAAE,EAAE;oBACpE,IAAA,YAAI,EAAK,IAAI,CAAC,CAAC,CAAY,IAAI,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;oBAC/D,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;wBAClB,KAAK,EAAE,KAAK,GAAG,IAAI,CAAC,CAAC,CAAY,SAAS,CAAC,WAAW;wBACtD,MAAM,EAAE,MAAM,GAAG,IAAI,CAAC,CAAC,CAAY,MAAM,CAAC,YAAY;qBACtD,CAAC,CAAC;gBACJ,CAAC;gBACD,uCAAuC;gBACvC,wCAAwC;gBACxC,yCAAyC;gBACzC,8BAA8B;aAC9B,CAAC;YAEiB,MAAC,GAAmB,IAAA,YAAI,EAA2B,4BAA4B,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,CAAoB,CAAC;YACnH,MAAC,GAAqB,IAAA,YAAI,EAA2B,iCAAiC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAoB,CAAC;YACzH,MAAC,GAA0B,IAAA,YAAI,EAA2B,sCAAsC,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,CAAoB,CAAC;YAEvI,WAAM,GAAG,IAAI,CAAC,CAAC,CAAoB,cAAc,CAChE,sBAAG,EACH,IAAI,CAAC,CAAC,CAAY,MAAM,EACxB,EAAE,EACF;gBACC,aAAa,EAAE,IAAI,CAAC,CAAC,EAAuB;aAC5C,CACD,CAAC;YAMc,cAAS,GAAG,IAAA,gCAAmB,EAC9C,aAAK,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,qBAAqB,EAAE,IAAI,CAAC,MAAM,CAAC,sBAAsB,CAAC,EAChF,GAAG,EAAE,CAAC,yCAAyC,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,CAC5E,CAAC;YAEc,mBAAc,GAAG,IAAA,gCAAmB,EACnD,IAAI,CAAC,MAAM,CAAC,yBAAyB,EACrC,GAAG,EAAE,CAAC,sCAAsC,CAAC,IAAI,CAAC,MAAM,CAAC,WAAW,EAAE,CACtE,CAAC;YAEc,cAAS,GAAG,IAAA,gCAAmB,EAC9C,IAAI,CAAC,MAAM,CAAC,0BAA0B,EACtC,GAAG,EAAE,CAAC,wCAAwC,CAAC,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,CAC1E,CAAC;YAEc,qBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,6CAA6C,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC;QAS7H,CAAC;QAES,CAAC;YACV,OAAO,2CAAwB,CAAC,sBAAsB,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,aAAG,CAAe,EAAE,IAAI,CAAC,CAAC,EAAE,KAAK,wBAAG,CAAkB,EAAE,CAAC,CAAC;QACzI,CAAC;KACD;IApFD,oBAoFC;IAED,SAAgB,IAAI,CACnB,cAAoB,EACpB,cAA0E;QAE1E,MAAM,UAAU,GAAG,IAAA,oBAAO,EAAC,MAAM,CAAC,EAAE;YACnC,8BAA8B;YAC9B,MAAM,SAAS,GAAG,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACxD,IAAI,CAAC,SAAS,EAAE;gBACf,OAAO,EAAE,CAAC;aACV;YACD,MAAM,SAAS,GAAG,SAAS,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACzD,IAAI,CAAC,SAAS,IAAI,SAAS,CAAC,YAAY,KAAK,cAAc,EAAE;gBAC5D,OAAO,EAAE,CAAC;aACV;YACD,OAAO,SAAS,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,cAAc,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC,CAAC;QACtE,CAAC,CAAC,CAAC;QAEH,OAAO,IAAA,oBAAO,EAAC,MAAM,CAAC,EAAE;YACvB,kCAAkC;YAClC,MAAM,MAAM,GAAG,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACvC,IAAI,MAAM,CAAC,MAAM,KAAK,CAAC,EAAE;gBACxB,OAAO;aACP;YACD,cAAc,CAAC,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,eAAG,CAAO,CAAC,CAAC,eAAe,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QACrI,CAAC,CAAC,CAAC;IACJ,CAAC;IAzBD,oBAyBC;IAEM,IAAM,IAAI,GAAV,MAAM,IAAU,SAAQ,eAAG;QACjC,YACC,MAAW,EACX,iBAA8B,EACP,oBAAyB;YAEhD,KAAK,EAAE,CAAC;YAER,MAAM,OAAO,GAAG,oBAAoB,CAAC,cAAc,CAAC,aAAG,EAAmB,iBAAiB,EAAE,MAAM,EAAE;gBACpG,WAAW,EAAE,EAAE,gBAAgB,EAAE,IAAI,EAAE;gBACvC,cAAc,EAAE,EAAE,YAAY,EAAE,GAAG,EAAE,CAAC,KAAK,EAAE;aAC7C,CAAC,CAAC;YACH,IAAI,CAAC,CAAC,CAAM,GAAG,CAAC,OAAO,CAAC,CAAC;QAC1B,CAAC;KACD,CAAA;IAdY,oBAAI;mBAAJ,IAAI;QAId,WAAA,mBAAG,CAAA;OAJO,IAAI,CAchB","file":"codeEditorView.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { h } from 'vs/base/browser/dom';\nimport { IView, IViewSize } from 'vs/base/browser/ui/grid/grid';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { IObservable, autorun, derived, observableFromEvent } from 'vs/base/common/observable';\nimport { EditorExtensionsRegistry, IEditorContributionDescription } from 'vs/editor/browser/editorExtensions';\nimport { CodeEditorWidget } from 'vs/editor/browser/widget/codeEditorWidget';\nimport { IEditorOptions } from 'vs/editor/common/config/editorOptions';\nimport { Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { CodeLensContribution } from 'vs/editor/contrib/codelens/browser/codelensController';\nimport { FoldingController } from 'vs/editor/contrib/folding/browser/folding';\nimport { MenuWorkbenchToolBar } from 'vs/platform/actions/browser/toolbar';\nimport { MenuId } from 'vs/platform/actions/common/actions';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { DEFAULT_EDITOR_MAX_DIMENSIONS, DEFAULT_EDITOR_MIN_DIMENSIONS } from 'vs/workbench/browser/parts/editor/editor';\nimport { observableConfigValue, setStyle } from 'vs/workbench/contrib/mergeEditor/browser/utils';\nimport { MergeEditorViewModel } from 'vs/workbench/contrib/mergeEditor/browser/view/viewModel';\n\nexport abstract class CodeEditorView extends Disposable {\n\treadonly model = this.viewModel.map(m => /** @description model */ m?.model);\n\n\tprotected readonly htmlElements = h('div.code-view', [\n\t\th('div.header@header', [\n\t\t\th('span.title@title'),\n\t\t\th('span.description@description'),\n\t\t\th('span.detail@detail'),\n\t\t\th('span.toolbar@toolbar'),\n\t\t]),\n\t\th('div.container', [\n\t\t\th('div.gutter@gutterDiv'),\n\t\t\th('div@editor'),\n\t\t]),\n\t]);\n\n\tprivate readonly _onDidViewChange = new Emitter<IViewSize | undefined>();\n\n\tpublic readonly view: IView = {\n\t\telement: this.htmlElements.root,\n\t\tminimumWidth: DEFAULT_EDITOR_MIN_DIMENSIONS.width,\n\t\tmaximumWidth: DEFAULT_EDITOR_MAX_DIMENSIONS.width,\n\t\tminimumHeight: DEFAULT_EDITOR_MIN_DIMENSIONS.height,\n\t\tmaximumHeight: DEFAULT_EDITOR_MAX_DIMENSIONS.height,\n\t\tonDidChange: this._onDidViewChange.event,\n\t\tlayout: (width: number, height: number, top: number, left: number) => {\n\t\t\tsetStyle(this.htmlElements.root, { width, height, top, left });\n\t\t\tthis.editor.layout({\n\t\t\t\twidth: width - this.htmlElements.gutterDiv.clientWidth,\n\t\t\t\theight: height - this.htmlElements.header.clientHeight,\n\t\t\t});\n\t\t}\n\t\t// preferredWidth?: number | undefined;\n\t\t// preferredHeight?: number | undefined;\n\t\t// priority?: LayoutPriority | undefined;\n\t\t// snap?: boolean | undefined;\n\t};\n\n\tprotected readonly checkboxesVisible = observableConfigValue<boolean>('mergeEditor.showCheckboxes', false, this.configurationService);\n\tprotected readonly showDeletionMarkers = observableConfigValue<boolean>('mergeEditor.showDeletionMarkers', true, this.configurationService);\n\tprotected readonly useSimplifiedDecorations = observableConfigValue<boolean>('mergeEditor.useSimplifiedDecorations', false, this.configurationService);\n\n\tpublic readonly editor = this.instantiationService.createInstance(\n\t\tCodeEditorWidget,\n\t\tthis.htmlElements.editor,\n\t\t{},\n\t\t{\n\t\t\tcontributions: this.getEditorContributions(),\n\t\t}\n\t);\n\n\tpublic updateOptions(newOptions: Readonly<IEditorOptions>): void {\n\t\tthis.editor.updateOptions(newOptions);\n\t}\n\n\tpublic readonly isFocused = observableFromEvent(\n\t\tEvent.any(this.editor.onDidBlurEditorWidget, this.editor.onDidFocusEditorWidget),\n\t\t() => /** @description editor.hasWidgetFocus */ this.editor.hasWidgetFocus()\n\t);\n\n\tpublic readonly cursorPosition = observableFromEvent(\n\t\tthis.editor.onDidChangeCursorPosition,\n\t\t() => /** @description editor.getPosition */ this.editor.getPosition()\n\t);\n\n\tpublic readonly selection = observableFromEvent(\n\t\tthis.editor.onDidChangeCursorSelection,\n\t\t() => /** @description editor.getSelections */ this.editor.getSelections()\n\t);\n\n\tpublic readonly cursorLineNumber = this.cursorPosition.map(p => /** @description cursorPosition.lineNumber */ p?.lineNumber);\n\n\tconstructor(\n\t\tprivate readonly instantiationService: IInstantiationService,\n\t\tpublic readonly viewModel: IObservable<undefined | MergeEditorViewModel>,\n\t\tprivate readonly configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\n\t}\n\n\tprotected getEditorContributions(): IEditorContributionDescription[] {\n\t\treturn EditorExtensionsRegistry.getEditorContributions().filter(c => c.id !== FoldingController.ID && c.id !== CodeLensContribution.ID);\n\t}\n}\n\nexport function createSelectionsAutorun(\n\tcodeEditorView: CodeEditorView,\n\ttranslateRange: (baseRange: Range, viewModel: MergeEditorViewModel) => Range\n): IDisposable {\n\tconst selections = derived(reader => {\n\t\t/** @description selections */\n\t\tconst viewModel = codeEditorView.viewModel.read(reader);\n\t\tif (!viewModel) {\n\t\t\treturn [];\n\t\t}\n\t\tconst baseRange = viewModel.selectionInBase.read(reader);\n\t\tif (!baseRange || baseRange.sourceEditor === codeEditorView) {\n\t\t\treturn [];\n\t\t}\n\t\treturn baseRange.rangesInBase.map(r => translateRange(r, viewModel));\n\t});\n\n\treturn autorun(reader => {\n\t\t/** @description set selections */\n\t\tconst ranges = selections.read(reader);\n\t\tif (ranges.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tcodeEditorView.editor.setSelections(ranges.map(r => new Selection(r.startLineNumber, r.startColumn, r.endLineNumber, r.endColumn)));\n\t});\n}\n\nexport class TitleMenu extends Disposable {\n\tconstructor(\n\t\tmenuId: MenuId,\n\t\ttargetHtmlElement: HTMLElement,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tconst toolbar = instantiationService.createInstance(MenuWorkbenchToolBar, targetHtmlElement, menuId, {\n\t\t\tmenuOptions: { renderShortTitle: true },\n\t\t\ttoolbarOptions: { primaryGroup: () => false }\n\t\t});\n\t\tthis._store.add(toolbar);\n\t}\n}\n"]}