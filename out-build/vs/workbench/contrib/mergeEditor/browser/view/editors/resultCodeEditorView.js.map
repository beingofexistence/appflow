{"version":3,"sources":["vs/workbench/contrib/mergeEditor/browser/view/editors/resultCodeEditorView.ts"],"names":[],"mappings":"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","file":"resultCodeEditorView.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { reset } from 'vs/base/browser/dom';\nimport { ActionBar } from 'vs/base/browser/ui/actionbar/actionbar';\nimport { renderLabelWithIcons } from 'vs/base/browser/ui/iconLabel/iconLabels';\nimport { CompareResult } from 'vs/base/common/arrays';\nimport { BugIndicatingError } from 'vs/base/common/errors';\nimport { toDisposable } from 'vs/base/common/lifecycle';\nimport { autorun, autorunWithStore, derived, IObservable } from 'vs/base/common/observable';\nimport { IModelDeltaDecoration, MinimapPosition, OverviewRulerLane } from 'vs/editor/common/model';\nimport { localize } from 'vs/nls';\nimport { MenuId } from 'vs/platform/actions/common/actions';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { LineRange } from 'vs/workbench/contrib/mergeEditor/browser/model/lineRange';\nimport { applyObservableDecorations, join } from 'vs/workbench/contrib/mergeEditor/browser/utils';\nimport { handledConflictMinimapOverViewRulerColor, unhandledConflictMinimapOverViewRulerColor } from 'vs/workbench/contrib/mergeEditor/browser/view/colors';\nimport { EditorGutter } from 'vs/workbench/contrib/mergeEditor/browser/view/editorGutter';\nimport { MergeEditorViewModel } from 'vs/workbench/contrib/mergeEditor/browser/view/viewModel';\nimport { ctxIsMergeResultEditor } from 'vs/workbench/contrib/mergeEditor/common/mergeEditor';\nimport { CodeEditorView, createSelectionsAutorun, TitleMenu } from './codeEditorView';\n\nexport class ResultCodeEditorView extends CodeEditorView {\n\tconstructor(\n\t\tviewModel: IObservable<MergeEditorViewModel | undefined>,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ILabelService private readonly _labelService: ILabelService,\n\t\t@IConfigurationService configurationService: IConfigurationService,\n\t) {\n\t\tsuper(instantiationService, viewModel, configurationService);\n\n\t\tthis.editor.invokeWithinContext(accessor => {\n\t\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\t\t\tconst isMergeResultEditor = ctxIsMergeResultEditor.bindTo(contextKeyService);\n\t\t\tisMergeResultEditor.set(true);\n\t\t\tthis._register(toDisposable(() => isMergeResultEditor.reset()));\n\t\t});\n\n\t\tthis.htmlElements.gutterDiv.style.width = '5px';\n\t\tthis.htmlElements.root.classList.add(`result`);\n\n\t\tthis._register(\n\t\t\tautorunWithStore((reader, store) => {\n\t\t\t\t/** @description update checkboxes */\n\t\t\t\tif (this.checkboxesVisible.read(reader)) {\n\t\t\t\t\tstore.add(new EditorGutter(this.editor, this.htmlElements.gutterDiv, {\n\t\t\t\t\t\tgetIntersectingGutterItems: (range, reader) => [],\n\t\t\t\t\t\tcreateView: (item, target) => { throw new BugIndicatingError(); },\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description update labels & text model */\n\t\t\tconst vm = this.viewModel.read(reader);\n\t\t\tif (!vm) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.editor.setModel(vm.model.resultTextModel);\n\t\t\treset(this.htmlElements.title, ...renderLabelWithIcons(localize('result', 'Result')));\n\t\t\treset(this.htmlElements.description, ...renderLabelWithIcons(this._labelService.getUriLabel(vm.model.resultTextModel.uri, { relative: true })));\n\t\t}));\n\n\n\t\tconst remainingConflictsActionBar = this._register(new ActionBar(this.htmlElements.detail));\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description update remainingConflicts label */\n\t\t\tconst vm = this.viewModel.read(reader);\n\t\t\tif (!vm) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst model = vm.model;\n\t\t\tif (!model) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst count = model.unhandledConflictsCount.read(reader);\n\n\t\t\tconst text = count === 1\n\t\t\t\t? localize(\n\t\t\t\t\t'mergeEditor.remainingConflicts',\n\t\t\t\t\t'{0} Conflict Remaining',\n\t\t\t\t\tcount\n\t\t\t\t)\n\t\t\t\t: localize(\n\t\t\t\t\t'mergeEditor.remainingConflict',\n\t\t\t\t\t'{0} Conflicts Remaining ',\n\t\t\t\t\tcount\n\t\t\t\t);\n\n\t\t\tremainingConflictsActionBar.clear();\n\t\t\tremainingConflictsActionBar.push({\n\t\t\t\tclass: undefined,\n\t\t\t\tenabled: count > 0,\n\t\t\t\tid: 'nextConflict',\n\t\t\t\tlabel: text,\n\t\t\t\trun() {\n\t\t\t\t\tvm.model.telemetry.reportConflictCounterClicked();\n\t\t\t\t\tvm.goToNextModifiedBaseRange(m => !model.isHandled(m).get());\n\t\t\t\t},\n\t\t\t\ttooltip: count > 0\n\t\t\t\t\t? localize('goToNextConflict', 'Go to next conflict')\n\t\t\t\t\t: localize('allConflictHandled', 'All conflicts handled, the merge can be completed now.'),\n\t\t\t});\n\t\t}));\n\n\n\t\tthis._register(applyObservableDecorations(this.editor, this.decorations));\n\n\t\tthis._register(\n\t\t\tcreateSelectionsAutorun(this, (baseRange, viewModel) =>\n\t\t\t\tviewModel.model.translateBaseRangeToResult(baseRange)\n\t\t\t)\n\t\t);\n\n\t\tthis._register(\n\t\t\tinstantiationService.createInstance(\n\t\t\t\tTitleMenu,\n\t\t\t\tMenuId.MergeInputResultToolbar,\n\t\t\t\tthis.htmlElements.toolbar\n\t\t\t)\n\t\t);\n\t}\n\n\tprivate readonly decorations = derived(this, reader => {\n\t\tconst viewModel = this.viewModel.read(reader);\n\t\tif (!viewModel) {\n\t\t\treturn [];\n\t\t}\n\t\tconst model = viewModel.model;\n\t\tconst textModel = model.resultTextModel;\n\t\tconst result = new Array<IModelDeltaDecoration>();\n\n\t\tconst baseRangeWithStoreAndTouchingDiffs = join(\n\t\t\tmodel.modifiedBaseRanges.read(reader),\n\t\t\tmodel.baseResultDiffs.read(reader),\n\t\t\t(baseRange, diff) => baseRange.baseRange.touches(diff.inputRange)\n\t\t\t\t? CompareResult.neitherLessOrGreaterThan\n\t\t\t\t: LineRange.compareByStart(\n\t\t\t\t\tbaseRange.baseRange,\n\t\t\t\t\tdiff.inputRange\n\t\t\t\t)\n\t\t);\n\n\t\tconst activeModifiedBaseRange = viewModel.activeModifiedBaseRange.read(reader);\n\n\t\tconst showNonConflictingChanges = viewModel.showNonConflictingChanges.read(reader);\n\n\t\tfor (const m of baseRangeWithStoreAndTouchingDiffs) {\n\t\t\tconst modifiedBaseRange = m.left;\n\n\t\t\tif (modifiedBaseRange) {\n\t\t\t\tconst blockClassNames = ['merge-editor-block'];\n\t\t\t\tlet blockPadding: [top: number, right: number, bottom: number, left: number] = [0, 0, 0, 0];\n\t\t\t\tconst isHandled = model.isHandled(modifiedBaseRange).read(reader);\n\t\t\t\tif (isHandled) {\n\t\t\t\t\tblockClassNames.push('handled');\n\t\t\t\t}\n\t\t\t\tif (modifiedBaseRange === activeModifiedBaseRange) {\n\t\t\t\t\tblockClassNames.push('focused');\n\t\t\t\t\tblockPadding = [0, 2, 0, 2];\n\t\t\t\t}\n\t\t\t\tif (modifiedBaseRange.isConflicting) {\n\t\t\t\t\tblockClassNames.push('conflicting');\n\t\t\t\t}\n\t\t\t\tblockClassNames.push('result');\n\n\t\t\t\tif (!modifiedBaseRange.isConflicting && !showNonConflictingChanges && isHandled) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst range = model.getLineRangeInResult(modifiedBaseRange.baseRange, reader);\n\t\t\t\tresult.push({\n\t\t\t\t\trange: range.toInclusiveRangeOrEmpty(),\n\t\t\t\t\toptions: {\n\t\t\t\t\t\tshowIfCollapsed: true,\n\t\t\t\t\t\tblockClassName: blockClassNames.join(' '),\n\t\t\t\t\t\tblockPadding,\n\t\t\t\t\t\tblockIsAfterEnd: range.startLineNumber > textModel.getLineCount(),\n\t\t\t\t\t\tdescription: 'Result Diff',\n\t\t\t\t\t\tminimap: {\n\t\t\t\t\t\t\tposition: MinimapPosition.Gutter,\n\t\t\t\t\t\t\tcolor: { id: isHandled ? handledConflictMinimapOverViewRulerColor : unhandledConflictMinimapOverViewRulerColor },\n\t\t\t\t\t\t},\n\t\t\t\t\t\toverviewRuler: modifiedBaseRange.isConflicting ? {\n\t\t\t\t\t\t\tposition: OverviewRulerLane.Center,\n\t\t\t\t\t\t\tcolor: { id: isHandled ? handledConflictMinimapOverViewRulerColor : unhandledConflictMinimapOverViewRulerColor },\n\t\t\t\t\t\t} : undefined\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (!modifiedBaseRange || modifiedBaseRange.isConflicting) {\n\t\t\t\tfor (const diff of m.rights) {\n\t\t\t\t\tconst range = diff.outputRange.toInclusiveRange();\n\t\t\t\t\tif (range) {\n\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\trange,\n\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\tclassName: `merge-editor-diff result`,\n\t\t\t\t\t\t\t\tdescription: 'Merge Editor',\n\t\t\t\t\t\t\t\tisWholeLine: true,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\n\t\t\t\t\tif (diff.rangeMappings) {\n\t\t\t\t\t\tfor (const d of diff.rangeMappings) {\n\t\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\t\trange: d.outputRange,\n\t\t\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\t\t\tclassName: `merge-editor-diff-word result`,\n\t\t\t\t\t\t\t\t\tdescription: 'Merge Editor'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t});\n}\n"]}