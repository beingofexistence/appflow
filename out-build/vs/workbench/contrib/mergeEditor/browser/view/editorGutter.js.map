{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/mergeEditor/browser/view/editorGutter.ts"],"names":[],"mappings":"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","file":"editorGutter.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { h, reset } from 'vs/base/browser/dom';\nimport { Disposable, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { autorun, IReader, observableFromEvent, observableSignal, observableSignalFromEvent, transaction } from 'vs/base/common/observable';\nimport { CodeEditorWidget } from 'vs/editor/browser/widget/codeEditorWidget';\nimport { LineRange } from 'vs/workbench/contrib/mergeEditor/browser/model/lineRange';\n\nexport class EditorGutter<T extends IGutterItemInfo = IGutterItemInfo> extends Disposable {\n\tprivate readonly scrollTop = observableFromEvent(\n\t\tthis._editor.onDidScrollChange,\n\t\t(e) => /** @description editor.onDidScrollChange */ this._editor.getScrollTop()\n\t);\n\tprivate readonly isScrollTopZero = this.scrollTop.map((scrollTop) => /** @description isScrollTopZero */ scrollTop === 0);\n\tprivate readonly modelAttached = observableFromEvent(\n\t\tthis._editor.onDidChangeModel,\n\t\t(e) => /** @description editor.onDidChangeModel */ this._editor.hasModel()\n\t);\n\n\tprivate readonly editorOnDidChangeViewZones = observableSignalFromEvent('onDidChangeViewZones', this._editor.onDidChangeViewZones);\n\tprivate readonly editorOnDidContentSizeChange = observableSignalFromEvent('onDidContentSizeChange', this._editor.onDidContentSizeChange);\n\tprivate readonly domNodeSizeChanged = observableSignal('domNodeSizeChanged');\n\n\tconstructor(\n\t\tprivate readonly _editor: CodeEditorWidget,\n\t\tprivate readonly _domNode: HTMLElement,\n\t\tprivate readonly itemProvider: IGutterItemProvider<T>\n\t) {\n\t\tsuper();\n\t\tthis._domNode.className = 'gutter monaco-editor';\n\t\tconst scrollDecoration = this._domNode.appendChild(\n\t\t\th('div.scroll-decoration', { role: 'presentation', ariaHidden: 'true', style: { width: '100%' } })\n\t\t\t\t.root\n\t\t);\n\n\t\tconst o = new ResizeObserver(() => {\n\t\t\ttransaction(tx => {\n\t\t\t\t/** @description ResizeObserver: size changed */\n\t\t\t\tthis.domNodeSizeChanged.trigger(tx);\n\t\t\t});\n\t\t});\n\t\to.observe(this._domNode);\n\t\tthis._register(toDisposable(() => o.disconnect()));\n\n\t\tthis._register(autorun(reader => {\n\t\t\t/** @description update scroll decoration */\n\t\t\tscrollDecoration.className = this.isScrollTopZero.read(reader) ? '' : 'scroll-decoration';\n\t\t}));\n\n\t\tthis._register(autorun(reader => /** @description EditorGutter.Render */ this.render(reader)));\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\n\t\treset(this._domNode);\n\t}\n\n\tprivate readonly views = new Map<string, ManagedGutterItemView>();\n\n\tprivate render(reader: IReader): void {\n\t\tif (!this.modelAttached.read(reader)) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.domNodeSizeChanged.read(reader);\n\t\tthis.editorOnDidChangeViewZones.read(reader);\n\t\tthis.editorOnDidContentSizeChange.read(reader);\n\n\t\tconst scrollTop = this.scrollTop.read(reader);\n\n\t\tconst visibleRanges = this._editor.getVisibleRanges();\n\t\tconst unusedIds = new Set(this.views.keys());\n\n\t\tif (visibleRanges.length > 0) {\n\t\t\tconst visibleRange = visibleRanges[0];\n\n\t\t\tconst visibleRange2 = new LineRange(\n\t\t\t\tvisibleRange.startLineNumber,\n\t\t\t\tvisibleRange.endLineNumber - visibleRange.startLineNumber\n\t\t\t).deltaEnd(1);\n\n\t\t\tconst gutterItems = this.itemProvider.getIntersectingGutterItems(\n\t\t\t\tvisibleRange2,\n\t\t\t\treader\n\t\t\t);\n\n\t\t\tfor (const gutterItem of gutterItems) {\n\t\t\t\tif (!gutterItem.range.touches(visibleRange2)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tunusedIds.delete(gutterItem.id);\n\t\t\t\tlet view = this.views.get(gutterItem.id);\n\t\t\t\tif (!view) {\n\t\t\t\t\tconst viewDomNode = document.createElement('div');\n\t\t\t\t\tthis._domNode.appendChild(viewDomNode);\n\t\t\t\t\tconst itemView = this.itemProvider.createView(\n\t\t\t\t\t\tgutterItem,\n\t\t\t\t\t\tviewDomNode\n\t\t\t\t\t);\n\t\t\t\t\tview = new ManagedGutterItemView(itemView, viewDomNode);\n\t\t\t\t\tthis.views.set(gutterItem.id, view);\n\t\t\t\t} else {\n\t\t\t\t\tview.gutterItemView.update(gutterItem);\n\t\t\t\t}\n\n\t\t\t\tconst top =\n\t\t\t\t\tgutterItem.range.startLineNumber <= this._editor.getModel()!.getLineCount()\n\t\t\t\t\t\t? this._editor.getTopForLineNumber(gutterItem.range.startLineNumber, true) - scrollTop\n\t\t\t\t\t\t: this._editor.getBottomForLineNumber(gutterItem.range.startLineNumber - 1, false) - scrollTop;\n\t\t\t\tconst bottom = this._editor.getBottomForLineNumber(gutterItem.range.endLineNumberExclusive - 1, true) - scrollTop;\n\n\t\t\t\tconst height = bottom - top;\n\n\t\t\t\tview.domNode.style.top = `${top}px`;\n\t\t\t\tview.domNode.style.height = `${height}px`;\n\n\t\t\t\tview.gutterItemView.layout(top, height, 0, this._domNode.clientHeight);\n\t\t\t}\n\t\t}\n\n\t\tfor (const id of unusedIds) {\n\t\t\tconst view = this.views.get(id)!;\n\t\t\tview.gutterItemView.dispose();\n\t\t\tthis._domNode.removeChild(view.domNode);\n\t\t\tthis.views.delete(id);\n\t\t}\n\t}\n}\n\nclass ManagedGutterItemView {\n\tconstructor(\n\t\tpublic readonly gutterItemView: IGutterItemView<any>,\n\t\tpublic readonly domNode: HTMLDivElement\n\t) { }\n}\n\nexport interface IGutterItemProvider<TItem extends IGutterItemInfo> {\n\tgetIntersectingGutterItems(range: LineRange, reader: IReader): TItem[];\n\n\tcreateView(item: TItem, target: HTMLElement): IGutterItemView<TItem>;\n}\n\nexport interface IGutterItemInfo {\n\tid: string;\n\trange: LineRange;\n}\n\nexport interface IGutterItemView<T extends IGutterItemInfo> extends IDisposable {\n\tupdate(item: T): void;\n\tlayout(top: number, height: number, viewTop: number, viewHeight: number): void;\n}\n\n"]}