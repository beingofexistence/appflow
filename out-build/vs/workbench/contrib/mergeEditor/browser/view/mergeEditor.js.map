{"version":3,"sources":["vs/workbench/contrib/mergeEditor/browser/view/mergeEditor.ts"],"names":[],"mappings":"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","file":"mergeEditor.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Dimension, reset } from 'vs/base/browser/dom';\nimport { Grid, GridNodeDescriptor, IView, SerializableGrid } from 'vs/base/browser/ui/grid/grid';\nimport { Orientation } from 'vs/base/browser/ui/splitview/splitview';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Color } from 'vs/base/common/color';\nimport { BugIndicatingError, onUnexpectedError } from 'vs/base/common/errors';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { Disposable, DisposableStore, IDisposable, MutableDisposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { autorun, autorunWithStore, IObservable, IReader, observableValue, transaction } from 'vs/base/common/observable';\nimport { basename, isEqual } from 'vs/base/common/resources';\nimport { isDefined } from 'vs/base/common/types';\nimport { URI } from 'vs/base/common/uri';\nimport 'vs/css!./media/mergeEditor';\nimport { ICodeEditor, IViewZoneChangeAccessor } from 'vs/editor/browser/editorBrowser';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { IEditorOptions as ICodeEditorOptions } from 'vs/editor/common/config/editorOptions';\nimport { ICodeEditorViewState, ScrollType } from 'vs/editor/common/editorCommon';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { ITextResourceConfigurationService } from 'vs/editor/common/services/textResourceConfiguration';\nimport { localize } from 'vs/nls';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IContextKey, IContextKeyService } from 'vs/platform/contextkey/common/contextkey';\nimport { IEditorOptions, ITextEditorOptions, ITextResourceEditorInput } from 'vs/platform/editor/common/editor';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { AbstractTextEditor } from 'vs/workbench/browser/parts/editor/textEditor';\nimport { DEFAULT_EDITOR_ASSOCIATION, EditorInputWithOptions, IEditorOpenContext, IResourceMergeEditorInput } from 'vs/workbench/common/editor';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport { applyTextEditorOptions } from 'vs/workbench/common/editor/editorOptions';\nimport { readTransientState, writeTransientState } from 'vs/workbench/contrib/codeEditor/browser/toggleWordWrap';\nimport { MergeEditorInput } from 'vs/workbench/contrib/mergeEditor/browser/mergeEditorInput';\nimport { IMergeEditorInputModel } from 'vs/workbench/contrib/mergeEditor/browser/mergeEditorInputModel';\nimport { MergeEditorModel } from 'vs/workbench/contrib/mergeEditor/browser/model/mergeEditorModel';\nimport { deepMerge, observableConfigValue, PersistentStore, thenIfNotDisposed } from 'vs/workbench/contrib/mergeEditor/browser/utils';\nimport { BaseCodeEditorView } from 'vs/workbench/contrib/mergeEditor/browser/view/editors/baseCodeEditorView';\nimport { ScrollSynchronizer } from 'vs/workbench/contrib/mergeEditor/browser/view/scrollSynchronizer';\nimport { MergeEditorViewModel } from 'vs/workbench/contrib/mergeEditor/browser/view/viewModel';\nimport { ViewZoneComputer } from 'vs/workbench/contrib/mergeEditor/browser/view/viewZones';\nimport { ctxIsMergeEditor, ctxMergeBaseUri, ctxMergeEditorLayout, ctxMergeEditorShowBase, ctxMergeEditorShowBaseAtTop, ctxMergeEditorShowNonConflictingChanges, ctxMergeResultUri, MergeEditorLayoutKind } from 'vs/workbench/contrib/mergeEditor/common/mergeEditor';\nimport { settingsSashBorder } from 'vs/workbench/contrib/preferences/common/settingsEditorColorRegistry';\nimport { IEditorGroup, IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IEditorResolverService, MergeEditorInputFactoryFunction, RegisteredEditorPriority } from 'vs/workbench/services/editor/common/editorResolverService';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport './colors';\nimport { InputCodeEditorView } from './editors/inputCodeEditorView';\nimport { ResultCodeEditorView } from './editors/resultCodeEditorView';\n\nexport class MergeEditor extends AbstractTextEditor<IMergeEditorViewState> {\n\n\tstatic readonly ID = 'mergeEditor';\n\n\tprivate readonly _sessionDisposables = new DisposableStore();\n\tprivate readonly _viewModel = observableValue<MergeEditorViewModel | undefined>(this, undefined);\n\n\tpublic get viewModel(): IObservable<MergeEditorViewModel | undefined> {\n\t\treturn this._viewModel;\n\t}\n\n\tprivate rootHtmlElement: HTMLElement | undefined;\n\tprivate readonly _grid = this._register(new MutableDisposable<Grid<IView>>());\n\tprivate readonly input1View = this._register(this.instantiationService.createInstance(InputCodeEditorView, 1, this._viewModel));\n\tprivate readonly baseView = observableValue<BaseCodeEditorView | undefined>(this, undefined);\n\tprivate readonly baseViewOptions = observableValue<Readonly<ICodeEditorOptions> | undefined>(this, undefined);\n\tprivate readonly input2View = this._register(this.instantiationService.createInstance(InputCodeEditorView, 2, this._viewModel));\n\n\tprivate readonly inputResultView = this._register(this.instantiationService.createInstance(ResultCodeEditorView, this._viewModel));\n\tprivate readonly _layoutMode = this.instantiationService.createInstance(MergeEditorLayoutStore);\n\tprivate readonly _layoutModeObs = observableValue(this, this._layoutMode.value);\n\tprivate readonly _ctxIsMergeEditor: IContextKey<boolean> = ctxIsMergeEditor.bindTo(this.contextKeyService);\n\tprivate readonly _ctxUsesColumnLayout: IContextKey<string> = ctxMergeEditorLayout.bindTo(this.contextKeyService);\n\tprivate readonly _ctxShowBase: IContextKey<boolean> = ctxMergeEditorShowBase.bindTo(this.contextKeyService);\n\tprivate readonly _ctxShowBaseAtTop = ctxMergeEditorShowBaseAtTop.bindTo(this.contextKeyService);\n\tprivate readonly _ctxResultUri: IContextKey<string> = ctxMergeResultUri.bindTo(this.contextKeyService);\n\tprivate readonly _ctxBaseUri: IContextKey<string> = ctxMergeBaseUri.bindTo(this.contextKeyService);\n\tprivate readonly _ctxShowNonConflictingChanges: IContextKey<boolean> = ctxMergeEditorShowNonConflictingChanges.bindTo(this.contextKeyService);\n\tprivate readonly _inputModel = observableValue<IMergeEditorInputModel | undefined>(this, undefined);\n\tpublic get inputModel(): IObservable<IMergeEditorInputModel | undefined> {\n\t\treturn this._inputModel;\n\t}\n\tpublic get model(): MergeEditorModel | undefined {\n\t\treturn this.inputModel.get()?.model;\n\t}\n\n\tprivate get inputsWritable(): boolean {\n\t\treturn !!this._configurationService.getValue<boolean>('mergeEditor.writableInputs');\n\t}\n\n\tprivate readonly viewZoneComputer = new ViewZoneComputer(\n\t\tthis.input1View.editor,\n\t\tthis.input2View.editor,\n\t\tthis.inputResultView.editor,\n\t);\n\n\tprotected readonly codeLensesVisible = observableConfigValue<boolean>(\n\t\t'mergeEditor.showCodeLenses',\n\t\ttrue,\n\t\tthis.configurationService,\n\t);\n\n\tprivate readonly scrollSynchronizer = this._register(new ScrollSynchronizer(this._viewModel, this.input1View, this.input2View, this.baseView, this.inputResultView, this._layoutModeObs));\n\n\tconstructor(\n\t\t@IInstantiationService instantiation: IInstantiationService,\n\t\t@IContextKeyService private readonly contextKeyService: IContextKeyService,\n\t\t@ITelemetryService telemetryService: ITelemetryService,\n\t\t@IStorageService storageService: IStorageService,\n\t\t@IThemeService themeService: IThemeService,\n\t\t@ITextResourceConfigurationService textResourceConfigurationService: ITextResourceConfigurationService,\n\t\t@IConfigurationService private readonly _configurationService: IConfigurationService,\n\t\t@IEditorService editorService: IEditorService,\n\t\t@IEditorGroupsService editorGroupService: IEditorGroupsService,\n\t\t@IFileService fileService: IFileService,\n\t\t@ICodeEditorService private readonly _codeEditorService: ICodeEditorService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService\n\t) {\n\t\tsuper(MergeEditor.ID, telemetryService, instantiation, storageService, textResourceConfigurationService, themeService, editorService, editorGroupService, fileService);\n\t}\n\n\toverride dispose(): void {\n\t\tthis._sessionDisposables.dispose();\n\t\tthis._ctxIsMergeEditor.reset();\n\t\tthis._ctxUsesColumnLayout.reset();\n\t\tthis._ctxShowNonConflictingChanges.reset();\n\t\tsuper.dispose();\n\t}\n\n\t// #region layout constraints\n\n\tprivate readonly _onDidChangeSizeConstraints = new Emitter<void>();\n\toverride readonly onDidChangeSizeConstraints: Event<void> = this._onDidChangeSizeConstraints.event;\n\n\toverride get minimumWidth() {\n\t\treturn this._layoutMode.value.kind === 'mixed'\n\t\t\t? this.input1View.view.minimumWidth + this.input2View.view.minimumWidth\n\t\t\t: this.input1View.view.minimumWidth + this.input2View.view.minimumWidth + this.inputResultView.view.minimumWidth;\n\t}\n\n\t// #endregion\n\n\toverride getTitle(): string {\n\t\tif (this.input) {\n\t\t\treturn this.input.getName();\n\t\t}\n\n\t\treturn localize('mergeEditor', \"Text Merge Editor\");\n\t}\n\n\tprotected createEditorControl(parent: HTMLElement, initialOptions: ICodeEditorOptions): void {\n\t\tthis.rootHtmlElement = parent;\n\t\tparent.classList.add('merge-editor');\n\t\tthis.applyLayout(this._layoutMode.value);\n\t\tthis.applyOptions(initialOptions);\n\t}\n\n\tprotected updateEditorControlOptions(options: ICodeEditorOptions): void {\n\t\tthis.applyOptions(options);\n\t}\n\n\tprivate applyOptions(options: ICodeEditorOptions): void {\n\t\tconst inputOptions: ICodeEditorOptions = deepMerge<ICodeEditorOptions>(options, {\n\t\t\tminimap: { enabled: false },\n\t\t\tglyphMargin: false,\n\t\t\tlineNumbersMinChars: 2,\n\t\t\treadOnly: !this.inputsWritable\n\t\t});\n\n\t\tthis.input1View.updateOptions(inputOptions);\n\t\tthis.input2View.updateOptions(inputOptions);\n\t\tthis.baseViewOptions.set({ ...this.input2View.editor.getRawOptions() }, undefined);\n\t\tthis.inputResultView.updateOptions(options);\n\t}\n\n\tprotected getMainControl(): ICodeEditor | undefined {\n\t\treturn this.inputResultView.editor;\n\t}\n\n\tlayout(dimension: Dimension): void {\n\t\tthis._grid.value?.layout(dimension.width, dimension.height);\n\t}\n\n\toverride async setInput(input: EditorInput, options: IEditorOptions | undefined, context: IEditorOpenContext, token: CancellationToken): Promise<void> {\n\t\tif (!(input instanceof MergeEditorInput)) {\n\t\t\tthrow new BugIndicatingError('ONLY MergeEditorInput is supported');\n\t\t}\n\t\tawait super.setInput(input, options, context, token);\n\n\t\tthis._sessionDisposables.clear();\n\t\ttransaction(tx => {\n\t\t\tthis._viewModel.set(undefined, tx);\n\t\t\tthis._inputModel.set(undefined, tx);\n\t\t});\n\n\t\tconst inputModel = await input.resolve();\n\t\tconst model = inputModel.model;\n\n\t\tconst viewModel = this.instantiationService.createInstance(\n\t\t\tMergeEditorViewModel,\n\t\t\tmodel,\n\t\t\tthis.input1View,\n\t\t\tthis.input2View,\n\t\t\tthis.inputResultView,\n\t\t\tthis.baseView,\n\t\t\tthis.showNonConflictingChanges,\n\t\t);\n\n\n\t\tmodel.telemetry.reportMergeEditorOpened({\n\t\t\tcombinableConflictCount: model.combinableConflictCount,\n\t\t\tconflictCount: model.conflictCount,\n\n\t\t\tbaseTop: this._layoutModeObs.get().showBaseAtTop,\n\t\t\tbaseVisible: this._layoutModeObs.get().showBase,\n\t\t\tisColumnView: this._layoutModeObs.get().kind === 'columns',\n\t\t});\n\n\t\ttransaction(tx => {\n\t\t\tthis._viewModel.set(viewModel, tx);\n\t\t\tthis._inputModel.set(inputModel, tx);\n\t\t});\n\t\tthis._sessionDisposables.add(viewModel);\n\n\t\t// Set/unset context keys based on input\n\t\tthis._ctxResultUri.set(inputModel.resultUri.toString());\n\t\tthis._ctxBaseUri.set(model.base.uri.toString());\n\t\tthis._sessionDisposables.add(toDisposable(() => {\n\t\t\tthis._ctxBaseUri.reset();\n\t\t\tthis._ctxResultUri.reset();\n\t\t}));\n\n\t\t// Set the view zones before restoring view state!\n\t\t// Otherwise scrolling will be off\n\t\tthis._sessionDisposables.add(autorunWithStore((reader, store) => {\n\t\t\t/** @description update alignment view zones */\n\t\t\tconst baseView = this.baseView.read(reader);\n\n\t\t\tthis.inputResultView.editor.changeViewZones(resultViewZoneAccessor => {\n\t\t\t\tconst layout = this._layoutModeObs.read(reader);\n\t\t\t\tconst shouldAlignResult = layout.kind === 'columns';\n\t\t\t\tconst shouldAlignBase = layout.kind === 'mixed' && !layout.showBaseAtTop;\n\n\t\t\t\tthis.input1View.editor.changeViewZones(input1ViewZoneAccessor => {\n\t\t\t\t\tthis.input2View.editor.changeViewZones(input2ViewZoneAccessor => {\n\t\t\t\t\t\tif (baseView) {\n\t\t\t\t\t\t\tbaseView.editor.changeViewZones(baseViewZoneAccessor => {\n\t\t\t\t\t\t\t\tstore.add(this.setViewZones(reader,\n\t\t\t\t\t\t\t\t\tviewModel,\n\t\t\t\t\t\t\t\t\tthis.input1View.editor,\n\t\t\t\t\t\t\t\t\tinput1ViewZoneAccessor,\n\t\t\t\t\t\t\t\t\tthis.input2View.editor,\n\t\t\t\t\t\t\t\t\tinput2ViewZoneAccessor,\n\t\t\t\t\t\t\t\t\tbaseView.editor,\n\t\t\t\t\t\t\t\t\tbaseViewZoneAccessor,\n\t\t\t\t\t\t\t\t\tshouldAlignBase,\n\t\t\t\t\t\t\t\t\tthis.inputResultView.editor,\n\t\t\t\t\t\t\t\t\tresultViewZoneAccessor,\n\t\t\t\t\t\t\t\t\tshouldAlignResult\n\t\t\t\t\t\t\t\t));\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstore.add(this.setViewZones(reader,\n\t\t\t\t\t\t\t\tviewModel,\n\t\t\t\t\t\t\t\tthis.input1View.editor,\n\t\t\t\t\t\t\t\tinput1ViewZoneAccessor,\n\t\t\t\t\t\t\t\tthis.input2View.editor,\n\t\t\t\t\t\t\t\tinput2ViewZoneAccessor,\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\tundefined,\n\t\t\t\t\t\t\t\tfalse,\n\t\t\t\t\t\t\t\tthis.inputResultView.editor,\n\t\t\t\t\t\t\t\tresultViewZoneAccessor,\n\t\t\t\t\t\t\t\tshouldAlignResult\n\t\t\t\t\t\t\t));\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tthis.scrollSynchronizer.updateScrolling();\n\t\t}));\n\n\t\tconst viewState = this.loadEditorViewState(input, context);\n\t\tif (viewState) {\n\t\t\tthis._applyViewState(viewState);\n\t\t} else {\n\t\t\tthis._sessionDisposables.add(thenIfNotDisposed(model.onInitialized, () => {\n\t\t\t\tconst firstConflict = model.modifiedBaseRanges.get().find(r => r.isConflicting);\n\t\t\t\tif (!firstConflict) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.input1View.editor.revealLineInCenter(firstConflict.input1Range.startLineNumber);\n\t\t\t\ttransaction(tx => {\n\t\t\t\t\t/** @description setActiveModifiedBaseRange */\n\t\t\t\t\tviewModel.setActiveModifiedBaseRange(firstConflict, tx);\n\t\t\t\t});\n\t\t\t}));\n\t\t}\n\n\t\t// word wrap special case - sync transient state from result model to input[1|2] models\n\t\tconst mirrorWordWrapTransientState = (candidate: ITextModel) => {\n\t\t\tconst candidateState = readTransientState(candidate, this._codeEditorService);\n\n\t\t\twriteTransientState(model.input2.textModel, candidateState, this._codeEditorService);\n\t\t\twriteTransientState(model.input1.textModel, candidateState, this._codeEditorService);\n\t\t\twriteTransientState(model.resultTextModel, candidateState, this._codeEditorService);\n\n\t\t\tconst baseTextModel = this.baseView.get()?.editor.getModel();\n\t\t\tif (baseTextModel) {\n\t\t\t\twriteTransientState(baseTextModel, candidateState, this._codeEditorService);\n\t\t\t}\n\t\t};\n\t\tthis._sessionDisposables.add(this._codeEditorService.onDidChangeTransientModelProperty(candidate => {\n\t\t\tmirrorWordWrapTransientState(candidate);\n\t\t}));\n\t\tmirrorWordWrapTransientState(this.inputResultView.editor.getModel()!);\n\n\t\t// detect when base, input1, and input2 become empty and replace THIS editor with its result editor\n\t\t// TODO@jrieken@hediet this needs a better/cleaner solution\n\t\t// https://github.com/microsoft/vscode/issues/155940\n\t\tconst that = this;\n\t\tthis._sessionDisposables.add(new class {\n\n\t\t\tprivate readonly _disposable = new DisposableStore();\n\n\t\t\tconstructor() {\n\t\t\t\tfor (const model of this.baseInput1Input2()) {\n\t\t\t\t\tthis._disposable.add(model.onDidChangeContent(() => this._checkBaseInput1Input2AllEmpty()));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdispose() {\n\t\t\t\tthis._disposable.dispose();\n\t\t\t}\n\n\t\t\tprivate *baseInput1Input2() {\n\t\t\t\tyield model.base;\n\t\t\t\tyield model.input1.textModel;\n\t\t\t\tyield model.input2.textModel;\n\t\t\t}\n\n\t\t\tprivate _checkBaseInput1Input2AllEmpty() {\n\t\t\t\tfor (const model of this.baseInput1Input2()) {\n\t\t\t\t\tif (model.getValueLength() > 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// all empty -> replace this editor with a normal editor for result\n\t\t\t\tthat.editorService.replaceEditors(\n\t\t\t\t\t[{ editor: input, replacement: { resource: input.result, options: { preserveFocus: true } }, forceReplaceDirty: true }],\n\t\t\t\t\tthat.group ?? that.editorGroupService.activeGroup\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate setViewZones(\n\t\treader: IReader,\n\t\tviewModel: MergeEditorViewModel,\n\t\tinput1Editor: ICodeEditor,\n\t\tinput1ViewZoneAccessor: IViewZoneChangeAccessor,\n\t\tinput2Editor: ICodeEditor,\n\t\tinput2ViewZoneAccessor: IViewZoneChangeAccessor,\n\t\tbaseEditor: ICodeEditor | undefined,\n\t\tbaseViewZoneAccessor: IViewZoneChangeAccessor | undefined,\n\t\tshouldAlignBase: boolean,\n\t\tresultEditor: ICodeEditor,\n\t\tresultViewZoneAccessor: IViewZoneChangeAccessor,\n\t\tshouldAlignResult: boolean,\n\t): IDisposable {\n\t\tconst input1ViewZoneIds: string[] = [];\n\t\tconst input2ViewZoneIds: string[] = [];\n\t\tconst baseViewZoneIds: string[] = [];\n\t\tconst resultViewZoneIds: string[] = [];\n\n\t\tconst viewZones = this.viewZoneComputer.computeViewZones(reader, viewModel, {\n\t\t\tcodeLensesVisible: this.codeLensesVisible.read(reader),\n\t\t\tshowNonConflictingChanges: this.showNonConflictingChanges.read(reader),\n\t\t\tshouldAlignBase,\n\t\t\tshouldAlignResult,\n\t\t});\n\n\t\tconst disposableStore = new DisposableStore();\n\n\t\tif (baseViewZoneAccessor) {\n\t\t\tfor (const v of viewZones.baseViewZones) {\n\t\t\t\tv.create(baseViewZoneAccessor, baseViewZoneIds, disposableStore);\n\t\t\t}\n\t\t}\n\n\t\tfor (const v of viewZones.resultViewZones) {\n\t\t\tv.create(resultViewZoneAccessor, resultViewZoneIds, disposableStore);\n\t\t}\n\n\t\tfor (const v of viewZones.input1ViewZones) {\n\t\t\tv.create(input1ViewZoneAccessor, input1ViewZoneIds, disposableStore);\n\t\t}\n\n\t\tfor (const v of viewZones.input2ViewZones) {\n\t\t\tv.create(input2ViewZoneAccessor, input2ViewZoneIds, disposableStore);\n\t\t}\n\n\t\tdisposableStore.add({\n\t\t\tdispose: () => {\n\t\t\t\tinput1Editor.changeViewZones(a => {\n\t\t\t\t\tfor (const zone of input1ViewZoneIds) {\n\t\t\t\t\t\ta.removeZone(zone);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tinput2Editor.changeViewZones(a => {\n\t\t\t\t\tfor (const zone of input2ViewZoneIds) {\n\t\t\t\t\t\ta.removeZone(zone);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tbaseEditor?.changeViewZones(a => {\n\t\t\t\t\tfor (const zone of baseViewZoneIds) {\n\t\t\t\t\t\ta.removeZone(zone);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tresultEditor.changeViewZones(a => {\n\t\t\t\t\tfor (const zone of resultViewZoneIds) {\n\t\t\t\t\t\ta.removeZone(zone);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn disposableStore;\n\t}\n\n\toverride setOptions(options: ITextEditorOptions | undefined): void {\n\t\tsuper.setOptions(options);\n\n\t\tif (options) {\n\t\t\tapplyTextEditorOptions(options, this.inputResultView.editor, ScrollType.Smooth);\n\t\t}\n\t}\n\n\toverride clearInput(): void {\n\t\tsuper.clearInput();\n\n\t\tthis._sessionDisposables.clear();\n\n\t\tfor (const { editor } of [this.input1View, this.input2View, this.inputResultView]) {\n\t\t\teditor.setModel(null);\n\t\t}\n\t}\n\n\toverride focus(): void {\n\t\t(this.getControl() ?? this.inputResultView.editor).focus();\n\t}\n\n\toverride hasFocus(): boolean {\n\t\tfor (const { editor } of [this.input1View, this.input2View, this.inputResultView]) {\n\t\t\tif (editor.hasTextFocus()) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn super.hasFocus();\n\t}\n\n\tprotected override setEditorVisible(visible: boolean, group: IEditorGroup | undefined): void {\n\t\tsuper.setEditorVisible(visible, group);\n\n\t\tfor (const { editor } of [this.input1View, this.input2View, this.inputResultView]) {\n\t\t\tif (visible) {\n\t\t\t\teditor.onVisible();\n\t\t\t} else {\n\t\t\t\teditor.onHide();\n\t\t\t}\n\t\t}\n\n\t\tthis._ctxIsMergeEditor.set(visible);\n\t}\n\n\t// ---- interact with \"outside world\" via`getControl`, `scopedContextKeyService`: we only expose the result-editor keep the others internal\n\n\toverride getControl(): ICodeEditor | undefined {\n\t\treturn this.inputResultView.editor;\n\t}\n\n\toverride get scopedContextKeyService(): IContextKeyService | undefined {\n\t\tconst control = this.getControl();\n\t\treturn control?.invokeWithinContext(accessor => accessor.get(IContextKeyService));\n\t}\n\n\t// --- layout\n\n\tpublic toggleBase(): void {\n\t\tthis.setLayout({\n\t\t\t...this._layoutMode.value,\n\t\t\tshowBase: !this._layoutMode.value.showBase\n\t\t});\n\t}\n\n\tpublic toggleShowBaseTop(): void {\n\t\tconst showBaseTop = this._layoutMode.value.showBase && this._layoutMode.value.showBaseAtTop;\n\t\tthis.setLayout({\n\t\t\t...this._layoutMode.value,\n\t\t\tshowBaseAtTop: true,\n\t\t\tshowBase: !showBaseTop,\n\t\t});\n\t}\n\n\tpublic toggleShowBaseCenter(): void {\n\t\tconst showBaseCenter = this._layoutMode.value.showBase && !this._layoutMode.value.showBaseAtTop;\n\t\tthis.setLayout({\n\t\t\t...this._layoutMode.value,\n\t\t\tshowBaseAtTop: false,\n\t\t\tshowBase: !showBaseCenter,\n\t\t});\n\t}\n\n\tpublic setLayoutKind(kind: MergeEditorLayoutKind): void {\n\t\tthis.setLayout({\n\t\t\t...this._layoutMode.value,\n\t\t\tkind\n\t\t});\n\t}\n\n\tpublic setLayout(newLayout: IMergeEditorLayout): void {\n\t\tconst value = this._layoutMode.value;\n\t\tif (JSON.stringify(value) === JSON.stringify(newLayout)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.model?.telemetry.reportLayoutChange({\n\t\t\tbaseTop: newLayout.showBaseAtTop,\n\t\t\tbaseVisible: newLayout.showBase,\n\t\t\tisColumnView: newLayout.kind === 'columns',\n\t\t});\n\t\tthis.applyLayout(newLayout);\n\t}\n\n\tprivate readonly baseViewDisposables = this._register(new DisposableStore());\n\n\tprivate applyLayout(layout: IMergeEditorLayout): void {\n\t\ttransaction(tx => {\n\t\t\t/** @description applyLayout */\n\n\t\t\tif (layout.showBase && !this.baseView.get()) {\n\t\t\t\tthis.baseViewDisposables.clear();\n\t\t\t\tconst baseView = this.baseViewDisposables.add(\n\t\t\t\t\tthis.instantiationService.createInstance(\n\t\t\t\t\t\tBaseCodeEditorView,\n\t\t\t\t\t\tthis.viewModel\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tthis.baseViewDisposables.add(autorun(reader => {\n\t\t\t\t\t/** @description Update base view options */\n\t\t\t\t\tconst options = this.baseViewOptions.read(reader);\n\t\t\t\t\tif (options) {\n\t\t\t\t\t\tbaseView.updateOptions(options);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t\tthis.baseView.set(baseView, tx);\n\t\t\t} else if (!layout.showBase && this.baseView.get()) {\n\t\t\t\tthis.baseView.set(undefined, tx);\n\t\t\t\tthis.baseViewDisposables.clear();\n\t\t\t}\n\n\t\t\tif (layout.kind === 'mixed') {\n\t\t\t\tthis.setGrid([\n\t\t\t\t\tlayout.showBaseAtTop && layout.showBase ? {\n\t\t\t\t\t\tsize: 38,\n\t\t\t\t\t\tdata: this.baseView.get()!.view\n\t\t\t\t\t} : undefined,\n\t\t\t\t\t{\n\t\t\t\t\t\tsize: 38,\n\t\t\t\t\t\tgroups: [\n\t\t\t\t\t\t\t{ data: this.input1View.view },\n\t\t\t\t\t\t\t!layout.showBaseAtTop && layout.showBase ? { data: this.baseView.get()!.view } : undefined,\n\t\t\t\t\t\t\t{ data: this.input2View.view }\n\t\t\t\t\t\t].filter(isDefined)\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tsize: 62,\n\t\t\t\t\t\tdata: this.inputResultView.view\n\t\t\t\t\t},\n\t\t\t\t].filter(isDefined));\n\t\t\t} else if (layout.kind === 'columns') {\n\t\t\t\tthis.setGrid([\n\t\t\t\t\tlayout.showBase ? {\n\t\t\t\t\t\tsize: 40,\n\t\t\t\t\t\tdata: this.baseView.get()!.view\n\t\t\t\t\t} : undefined,\n\t\t\t\t\t{\n\t\t\t\t\t\tsize: 60,\n\t\t\t\t\t\tgroups: [{ data: this.input1View.view }, { data: this.inputResultView.view }, { data: this.input2View.view }]\n\t\t\t\t\t},\n\t\t\t\t].filter(isDefined));\n\t\t\t}\n\n\t\t\tthis._layoutMode.value = layout;\n\t\t\tthis._ctxUsesColumnLayout.set(layout.kind);\n\t\t\tthis._ctxShowBase.set(layout.showBase);\n\t\t\tthis._ctxShowBaseAtTop.set(layout.showBaseAtTop);\n\t\t\tthis._onDidChangeSizeConstraints.fire();\n\t\t\tthis._layoutModeObs.set(layout, tx);\n\t\t});\n\t}\n\n\tprivate setGrid(descriptor: GridNodeDescriptor<any>[]) {\n\t\tlet width = -1;\n\t\tlet height = -1;\n\t\tif (this._grid.value) {\n\t\t\twidth = this._grid.value.width;\n\t\t\theight = this._grid.value.height;\n\t\t}\n\t\tthis._grid.value = SerializableGrid.from<any>({\n\t\t\torientation: Orientation.VERTICAL,\n\t\t\tsize: 100,\n\t\t\tgroups: descriptor,\n\t\t}, {\n\t\t\tstyles: { separatorBorder: this.theme.getColor(settingsSashBorder) ?? Color.transparent },\n\t\t\tproportionalLayout: true\n\t\t});\n\n\t\treset(this.rootHtmlElement!, this._grid.value.element);\n\t\t// Only call layout after the elements have been added to the DOM,\n\t\t// so that they have a defined size.\n\t\tif (width !== -1) {\n\t\t\tthis._grid.value.layout(width, height);\n\t\t}\n\t}\n\n\tprivate _applyViewState(state: IMergeEditorViewState | undefined) {\n\t\tif (!state) {\n\t\t\treturn;\n\t\t}\n\t\tthis.inputResultView.editor.restoreViewState(state);\n\t\tif (state.input1State) {\n\t\t\tthis.input1View.editor.restoreViewState(state.input1State);\n\t\t}\n\t\tif (state.input2State) {\n\t\t\tthis.input2View.editor.restoreViewState(state.input2State);\n\t\t}\n\t\tif (state.focusIndex >= 0) {\n\t\t\t[this.input1View.editor, this.input2View.editor, this.inputResultView.editor][state.focusIndex].focus();\n\t\t}\n\t}\n\n\tprotected computeEditorViewState(resource: URI): IMergeEditorViewState | undefined {\n\t\tif (!isEqual(this.inputModel.get()?.resultUri, resource)) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst result = this.inputResultView.editor.saveViewState();\n\t\tif (!result) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst input1State = this.input1View.editor.saveViewState() ?? undefined;\n\t\tconst input2State = this.input2View.editor.saveViewState() ?? undefined;\n\t\tconst focusIndex = [this.input1View.editor, this.input2View.editor, this.inputResultView.editor].findIndex(editor => editor.hasWidgetFocus());\n\t\treturn { ...result, input1State, input2State, focusIndex };\n\t}\n\n\n\tprotected tracksEditorViewState(input: EditorInput): boolean {\n\t\treturn input instanceof MergeEditorInput;\n\t}\n\n\tprivate readonly showNonConflictingChangesStore = this.instantiationService.createInstance(PersistentStore<boolean>, 'mergeEditor/showNonConflictingChanges');\n\tprivate readonly showNonConflictingChanges = observableValue(this, this.showNonConflictingChangesStore.get() ?? false);\n\n\tpublic toggleShowNonConflictingChanges(): void {\n\t\tthis.showNonConflictingChanges.set(!this.showNonConflictingChanges.get(), undefined);\n\t\tthis.showNonConflictingChangesStore.set(this.showNonConflictingChanges.get());\n\t\tthis._ctxShowNonConflictingChanges.set(this.showNonConflictingChanges.get());\n\t}\n}\n\nexport interface IMergeEditorLayout {\n\treadonly kind: MergeEditorLayoutKind;\n\treadonly showBase: boolean;\n\treadonly showBaseAtTop: boolean;\n}\n\n// TODO use PersistentStore\nclass MergeEditorLayoutStore {\n\tprivate static readonly _key = 'mergeEditor/layout';\n\tprivate _value: IMergeEditorLayout = { kind: 'mixed', showBase: false, showBaseAtTop: true };\n\n\tconstructor(@IStorageService private _storageService: IStorageService) {\n\t\tconst value = _storageService.get(MergeEditorLayoutStore._key, StorageScope.PROFILE, 'mixed');\n\n\t\tif (value === 'mixed' || value === 'columns') {\n\t\t\tthis._value = { kind: value, showBase: false, showBaseAtTop: true };\n\t\t} else if (value) {\n\t\t\ttry {\n\t\t\t\tthis._value = JSON.parse(value);\n\t\t\t} catch (e) {\n\t\t\t\tonUnexpectedError(e);\n\t\t\t}\n\t\t}\n\t}\n\n\tget value() {\n\t\treturn this._value;\n\t}\n\n\tset value(value: IMergeEditorLayout) {\n\t\tif (this._value !== value) {\n\t\t\tthis._value = value;\n\t\t\tthis._storageService.store(MergeEditorLayoutStore._key, JSON.stringify(this._value), StorageScope.PROFILE, StorageTarget.USER);\n\t\t}\n\t}\n}\n\nexport class MergeEditorOpenHandlerContribution extends Disposable {\n\n\tconstructor(\n\t\t@IEditorService private readonly _editorService: IEditorService,\n\t\t@ICodeEditorService codeEditorService: ICodeEditorService,\n\t) {\n\t\tsuper();\n\t\tthis._store.add(codeEditorService.registerCodeEditorOpenHandler(this.openCodeEditorFromMergeEditor.bind(this)));\n\t}\n\n\tprivate async openCodeEditorFromMergeEditor(input: ITextResourceEditorInput, _source: ICodeEditor | null, sideBySide?: boolean | undefined): Promise<ICodeEditor | null> {\n\t\tconst activePane = this._editorService.activeEditorPane;\n\t\tif (!sideBySide\n\t\t\t&& input.options\n\t\t\t&& activePane instanceof MergeEditor\n\t\t\t&& activePane.getControl()\n\t\t\t&& activePane.input instanceof MergeEditorInput\n\t\t\t&& isEqual(input.resource, activePane.input.result)\n\t\t) {\n\t\t\t// Special: stay inside the merge editor when it is active and when the input\n\t\t\t// targets the result editor of the merge editor.\n\t\t\tconst targetEditor = <ICodeEditor>activePane.getControl()!;\n\t\t\tapplyTextEditorOptions(input.options, targetEditor, ScrollType.Smooth);\n\t\t\treturn targetEditor;\n\t\t}\n\n\t\t// cannot handle this\n\t\treturn null;\n\t}\n}\n\nexport class MergeEditorResolverContribution extends Disposable {\n\n\tconstructor(\n\t\t@IEditorResolverService editorResolverService: IEditorResolverService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\tconst mergeEditorInputFactory: MergeEditorInputFactoryFunction = (mergeEditor: IResourceMergeEditorInput): EditorInputWithOptions => {\n\t\t\treturn {\n\t\t\t\teditor: instantiationService.createInstance(\n\t\t\t\t\tMergeEditorInput,\n\t\t\t\t\tmergeEditor.base.resource,\n\t\t\t\t\t{\n\t\t\t\t\t\turi: mergeEditor.input1.resource,\n\t\t\t\t\t\ttitle: mergeEditor.input1.label ?? basename(mergeEditor.input1.resource),\n\t\t\t\t\t\tdescription: mergeEditor.input1.description ?? '',\n\t\t\t\t\t\tdetail: mergeEditor.input1.detail\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\turi: mergeEditor.input2.resource,\n\t\t\t\t\t\ttitle: mergeEditor.input2.label ?? basename(mergeEditor.input2.resource),\n\t\t\t\t\t\tdescription: mergeEditor.input2.description ?? '',\n\t\t\t\t\t\tdetail: mergeEditor.input2.detail\n\t\t\t\t\t},\n\t\t\t\t\tmergeEditor.result.resource\n\t\t\t\t)\n\t\t\t};\n\t\t};\n\n\t\tthis._register(editorResolverService.registerEditor(\n\t\t\t`*`,\n\t\t\t{\n\t\t\t\tid: DEFAULT_EDITOR_ASSOCIATION.id,\n\t\t\t\tlabel: DEFAULT_EDITOR_ASSOCIATION.displayName,\n\t\t\t\tdetail: DEFAULT_EDITOR_ASSOCIATION.providerDisplayName,\n\t\t\t\tpriority: RegisteredEditorPriority.builtin\n\t\t\t},\n\t\t\t{},\n\t\t\t{\n\t\t\t\tcreateMergeEditorInput: mergeEditorInputFactory\n\t\t\t}\n\t\t));\n\t}\n}\n\ntype IMergeEditorViewState = ICodeEditorViewState & {\n\treadonly input1State?: ICodeEditorViewState;\n\treadonly input2State?: ICodeEditorViewState;\n\treadonly focusIndex: number;\n};\n"]}