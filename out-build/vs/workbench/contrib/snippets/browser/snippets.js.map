{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/snippets/browser/snippets.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAKnF,QAAA,IAAI,GAAe,IAAA,mBAAG,EAA+B,gBAAgB,CAAC,CAAC","file":"snippets.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createDecorator } from 'vs/platform/instantiation/common/instantiation';\nimport { SnippetFile, Snippet } from 'vs/workbench/contrib/snippets/browser/snippetsFile';\n\nexport const ISnippetsService = createDecorator<ISnippetsService>('snippetService');\n\nexport interface ISnippetGetOptions {\n\tincludeDisabledSnippets?: boolean;\n\tincludeNoPrefixSnippets?: boolean;\n\tnoRecencySort?: boolean;\n\tfileTemplateSnippets?: boolean;\n}\n\nexport interface ISnippetsService {\n\n\treadonly _serviceBrand: undefined;\n\n\tgetSnippetFiles(): Promise<Iterable<SnippetFile>>;\n\n\tisEnabled(snippet: Snippet): boolean;\n\n\tupdateEnablement(snippet: Snippet, enabled: boolean): void;\n\n\tupdateUsageTimestamp(snippet: Snippet): void;\n\n\tgetSnippets(languageId: string | undefined, opt?: ISnippetGetOptions): Promise<Snippet[]>;\n\n\tgetSnippetsSync(languageId: string, opt?: ISnippetGetOptions): Snippet[];\n}\n"]}