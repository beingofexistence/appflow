{"version":3,"sources":["vs/workbench/contrib/snippets/browser/snippetCodeActionProvider.ts"],"names":[],"mappings":"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","file":"snippetCodeActionProvider.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DisposableStore } from 'vs/base/common/lifecycle';\nimport { IRange, Range } from 'vs/editor/common/core/range';\nimport { Selection } from 'vs/editor/common/core/selection';\nimport { CodeAction, CodeActionList, CodeActionProvider, WorkspaceEdit } from 'vs/editor/common/languages';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { ILanguageFeaturesService } from 'vs/editor/common/services/languageFeatures';\nimport { CodeActionKind } from 'vs/editor/contrib/codeAction/common/types';\nimport { localize } from 'vs/nls';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { ApplyFileSnippetAction } from 'vs/workbench/contrib/snippets/browser/commands/fileTemplateSnippets';\nimport { getSurroundableSnippets, SurroundWithSnippetEditorAction } from 'vs/workbench/contrib/snippets/browser/commands/surroundWithSnippet';\nimport { Snippet } from 'vs/workbench/contrib/snippets/browser/snippetsFile';\nimport { ISnippetsService } from './snippets';\n\nclass SurroundWithSnippetCodeActionProvider implements CodeActionProvider {\n\n\tprivate static readonly _MAX_CODE_ACTIONS = 4;\n\n\tprivate static readonly _overflowCommandCodeAction: CodeAction = {\n\t\tkind: CodeActionKind.SurroundWith.value,\n\t\ttitle: SurroundWithSnippetEditorAction.options.title.value,\n\t\tcommand: {\n\t\t\tid: SurroundWithSnippetEditorAction.options.id,\n\t\t\ttitle: SurroundWithSnippetEditorAction.options.title.value,\n\t\t},\n\t};\n\n\tconstructor(@ISnippetsService private readonly _snippetService: ISnippetsService) { }\n\n\tasync provideCodeActions(model: ITextModel, range: Range | Selection): Promise<CodeActionList | undefined> {\n\n\t\tif (range.isEmpty()) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst position = Selection.isISelection(range) ? range.getPosition() : range.getStartPosition();\n\t\tconst snippets = await getSurroundableSnippets(this._snippetService, model, position, false);\n\t\tif (!snippets.length) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst actions: CodeAction[] = [];\n\t\tfor (const snippet of snippets) {\n\t\t\tif (actions.length >= SurroundWithSnippetCodeActionProvider._MAX_CODE_ACTIONS) {\n\t\t\t\tactions.push(SurroundWithSnippetCodeActionProvider._overflowCommandCodeAction);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tactions.push({\n\t\t\t\ttitle: localize('codeAction', \"Surround With: {0}\", snippet.name),\n\t\t\t\tkind: CodeActionKind.SurroundWith.value,\n\t\t\t\tedit: asWorkspaceEdit(model, range, snippet)\n\t\t\t});\n\t\t}\n\n\t\treturn {\n\t\t\tactions,\n\t\t\tdispose() { }\n\t\t};\n\t}\n}\n\nclass FileTemplateCodeActionProvider implements CodeActionProvider {\n\n\tprivate static readonly _MAX_CODE_ACTIONS = 4;\n\n\tprivate static readonly _overflowCommandCodeAction: CodeAction = {\n\t\ttitle: localize('overflow.start.title', 'Start with Snippet'),\n\t\tkind: CodeActionKind.SurroundWith.value,\n\t\tcommand: {\n\t\t\tid: ApplyFileSnippetAction.Id,\n\t\t\ttitle: ''\n\t\t}\n\t};\n\n\treadonly providedCodeActionKinds?: readonly string[] = [CodeActionKind.SurroundWith.value];\n\n\tconstructor(@ISnippetsService private readonly _snippetService: ISnippetsService) { }\n\n\tasync provideCodeActions(model: ITextModel) {\n\t\tif (model.getValueLength() !== 0) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst snippets = await this._snippetService.getSnippets(model.getLanguageId(), { fileTemplateSnippets: true, includeNoPrefixSnippets: true });\n\t\tconst actions: CodeAction[] = [];\n\t\tfor (const snippet of snippets) {\n\t\t\tif (actions.length >= FileTemplateCodeActionProvider._MAX_CODE_ACTIONS) {\n\t\t\t\tactions.push(FileTemplateCodeActionProvider._overflowCommandCodeAction);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tactions.push({\n\t\t\t\ttitle: localize('title', 'Start with: {0}', snippet.name),\n\t\t\t\tkind: CodeActionKind.SurroundWith.value,\n\t\t\t\tedit: asWorkspaceEdit(model, model.getFullModelRange(), snippet)\n\t\t\t});\n\t\t}\n\t\treturn {\n\t\t\tactions,\n\t\t\tdispose() { }\n\t\t};\n\t}\n}\n\nfunction asWorkspaceEdit(model: ITextModel, range: IRange, snippet: Snippet): WorkspaceEdit {\n\treturn {\n\t\tedits: [{\n\t\t\tversionId: model.getVersionId(),\n\t\t\tresource: model.uri,\n\t\t\ttextEdit: {\n\t\t\t\trange,\n\t\t\t\ttext: snippet.body,\n\t\t\t\tinsertAsSnippet: true,\n\t\t\t}\n\t\t}]\n\t};\n}\n\nexport class SnippetCodeActions implements IWorkbenchContribution {\n\n\tprivate readonly _store = new DisposableStore();\n\n\tconstructor(\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ILanguageFeaturesService languageFeaturesService: ILanguageFeaturesService,\n\t\t@IConfigurationService configService: IConfigurationService,\n\t) {\n\n\t\tconst setting = 'editor.snippets.codeActions.enabled';\n\t\tconst sessionStore = new DisposableStore();\n\t\tconst update = () => {\n\t\t\tsessionStore.clear();\n\t\t\tif (configService.getValue(setting)) {\n\t\t\t\tsessionStore.add(languageFeaturesService.codeActionProvider.register('*', instantiationService.createInstance(SurroundWithSnippetCodeActionProvider)));\n\t\t\t\tsessionStore.add(languageFeaturesService.codeActionProvider.register('*', instantiationService.createInstance(FileTemplateCodeActionProvider)));\n\t\t\t}\n\t\t};\n\n\t\tupdate();\n\t\tthis._store.add(configService.onDidChangeConfiguration(e => e.affectsConfiguration(setting) && update()));\n\t\tthis._store.add(sessionStore);\n\t}\n\n\tdispose(): void {\n\t\tthis._store.dispose();\n\t}\n}\n"]}