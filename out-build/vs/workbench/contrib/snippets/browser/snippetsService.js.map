{"version":3,"sources":["vs/workbench/contrib/snippets/browser/snippetsService.ts"],"names":[],"mappings":"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","file":"snippetsService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IJSONSchema } from 'vs/base/common/jsonSchema';\nimport { combinedDisposable, IDisposable, DisposableStore } from 'vs/base/common/lifecycle';\nimport * as resources from 'vs/base/common/resources';\nimport { isFalsyOrWhitespace } from 'vs/base/common/strings';\nimport { URI } from 'vs/base/common/uri';\nimport { Position } from 'vs/editor/common/core/position';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\nimport { setSnippetSuggestSupport } from 'vs/editor/contrib/suggest/browser/suggest';\nimport { localize } from 'vs/nls';\nimport { IEnvironmentService } from 'vs/platform/environment/common/environment';\nimport { FileChangeType, IFileService } from 'vs/platform/files/common/files';\nimport { ILifecycleService, LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IWorkspace, IWorkspaceContextService } from 'vs/platform/workspace/common/workspace';\nimport { ISnippetGetOptions, ISnippetsService } from 'vs/workbench/contrib/snippets/browser/snippets';\nimport { Snippet, SnippetFile, SnippetSource } from 'vs/workbench/contrib/snippets/browser/snippetsFile';\nimport { ExtensionsRegistry, IExtensionPointUser } from 'vs/workbench/services/extensions/common/extensionsRegistry';\nimport { languagesExtPoint } from 'vs/workbench/services/language/common/languageService';\nimport { SnippetCompletionProvider } from './snippetCompletionProvider';\nimport { IExtensionResourceLoaderService } from 'vs/platform/extensionResourceLoader/common/extensionResourceLoader';\nimport { ResourceMap } from 'vs/base/common/map';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { isStringArray } from 'vs/base/common/types';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ITextFileService } from 'vs/workbench/services/textfile/common/textfiles';\nimport { ILanguageConfigurationService } from 'vs/editor/common/languages/languageConfigurationRegistry';\nimport { IUserDataProfileService } from 'vs/workbench/services/userDataProfile/common/userDataProfile';\nimport { insertInto } from 'vs/base/common/arrays';\n\nnamespace snippetExt {\n\n\texport interface ISnippetsExtensionPoint {\n\t\tlanguage: string;\n\t\tpath: string;\n\t}\n\n\texport interface IValidSnippetsExtensionPoint {\n\t\tlanguage: string;\n\t\tlocation: URI;\n\t}\n\n\texport function toValidSnippet(extension: IExtensionPointUser<ISnippetsExtensionPoint[]>, snippet: ISnippetsExtensionPoint, languageService: ILanguageService): IValidSnippetsExtensionPoint | null {\n\n\t\tif (isFalsyOrWhitespace(snippet.path)) {\n\t\t\textension.collector.error(localize(\n\t\t\t\t'invalid.path.0',\n\t\t\t\t\"Expected string in `contributes.{0}.path`. Provided value: {1}\",\n\t\t\t\textension.description.name, String(snippet.path)\n\t\t\t));\n\t\t\treturn null;\n\t\t}\n\n\t\tif (isFalsyOrWhitespace(snippet.language) && !snippet.path.endsWith('.code-snippets')) {\n\t\t\textension.collector.error(localize(\n\t\t\t\t'invalid.language.0',\n\t\t\t\t\"When omitting the language, the value of `contributes.{0}.path` must be a `.code-snippets`-file. Provided value: {1}\",\n\t\t\t\textension.description.name, String(snippet.path)\n\t\t\t));\n\t\t\treturn null;\n\t\t}\n\n\t\tif (!isFalsyOrWhitespace(snippet.language) && !languageService.isRegisteredLanguageId(snippet.language)) {\n\t\t\textension.collector.error(localize(\n\t\t\t\t'invalid.language',\n\t\t\t\t\"Unknown language in `contributes.{0}.language`. Provided value: {1}\",\n\t\t\t\textension.description.name, String(snippet.language)\n\t\t\t));\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst extensionLocation = extension.description.extensionLocation;\n\t\tconst snippetLocation = resources.joinPath(extensionLocation, snippet.path);\n\t\tif (!resources.isEqualOrParent(snippetLocation, extensionLocation)) {\n\t\t\textension.collector.error(localize(\n\t\t\t\t'invalid.path.1',\n\t\t\t\t\"Expected `contributes.{0}.path` ({1}) to be included inside extension's folder ({2}). This might make the extension non-portable.\",\n\t\t\t\textension.description.name, snippetLocation.path, extensionLocation.path\n\t\t\t));\n\t\t\treturn null;\n\t\t}\n\n\t\treturn {\n\t\t\tlanguage: snippet.language,\n\t\t\tlocation: snippetLocation\n\t\t};\n\t}\n\n\texport const snippetsContribution: IJSONSchema = {\n\t\tdescription: localize('vscode.extension.contributes.snippets', 'Contributes snippets.'),\n\t\ttype: 'array',\n\t\tdefaultSnippets: [{ body: [{ language: '', path: '' }] }],\n\t\titems: {\n\t\t\ttype: 'object',\n\t\t\tdefaultSnippets: [{ body: { language: '${1:id}', path: './snippets/${2:id}.json.' } }],\n\t\t\tproperties: {\n\t\t\t\tlanguage: {\n\t\t\t\t\tdescription: localize('vscode.extension.contributes.snippets-language', 'Language identifier for which this snippet is contributed to.'),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t},\n\t\t\t\tpath: {\n\t\t\t\t\tdescription: localize('vscode.extension.contributes.snippets-path', 'Path of the snippets file. The path is relative to the extension folder and typically starts with \\'./snippets/\\'.'),\n\t\t\t\t\ttype: 'string'\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\texport const point = ExtensionsRegistry.registerExtensionPoint<snippetExt.ISnippetsExtensionPoint[]>({\n\t\textensionPoint: 'snippets',\n\t\tdeps: [languagesExtPoint],\n\t\tjsonSchema: snippetExt.snippetsContribution\n\t});\n}\n\nfunction watch(service: IFileService, resource: URI, callback: () => any): IDisposable {\n\treturn combinedDisposable(\n\t\tservice.watch(resource),\n\t\tservice.onDidFilesChange(e => {\n\t\t\tif (e.affects(resource)) {\n\t\t\t\tcallback();\n\t\t\t}\n\t\t})\n\t);\n}\n\nclass SnippetEnablement {\n\n\tprivate static _key = 'snippets.ignoredSnippets';\n\n\tprivate readonly _ignored: Set<string>;\n\n\tconstructor(\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t) {\n\n\t\tconst raw = _storageService.get(SnippetEnablement._key, StorageScope.PROFILE, '');\n\t\tlet data: string[] | undefined;\n\t\ttry {\n\t\t\tdata = JSON.parse(raw);\n\t\t} catch { }\n\n\t\tthis._ignored = isStringArray(data) ? new Set(data) : new Set();\n\t}\n\n\tisIgnored(id: string): boolean {\n\t\treturn this._ignored.has(id);\n\t}\n\n\tupdateIgnored(id: string, value: boolean): void {\n\t\tlet changed = false;\n\t\tif (this._ignored.has(id) && !value) {\n\t\t\tthis._ignored.delete(id);\n\t\t\tchanged = true;\n\t\t} else if (!this._ignored.has(id) && value) {\n\t\t\tthis._ignored.add(id);\n\t\t\tchanged = true;\n\t\t}\n\t\tif (changed) {\n\t\t\tthis._storageService.store(SnippetEnablement._key, JSON.stringify(Array.from(this._ignored)), StorageScope.PROFILE, StorageTarget.USER);\n\t\t}\n\t}\n}\n\nclass SnippetUsageTimestamps {\n\n\tprivate static _key = 'snippets.usageTimestamps';\n\n\tprivate readonly _usages: Map<string, number>;\n\n\tconstructor(\n\t\t@IStorageService private readonly _storageService: IStorageService,\n\t) {\n\n\t\tconst raw = _storageService.get(SnippetUsageTimestamps._key, StorageScope.PROFILE, '');\n\t\tlet data: [string, number][] | undefined;\n\t\ttry {\n\t\t\tdata = JSON.parse(raw);\n\t\t} catch {\n\t\t\tdata = [];\n\t\t}\n\n\t\tthis._usages = Array.isArray(data) ? new Map(data) : new Map();\n\t}\n\n\tgetUsageTimestamp(id: string): number | undefined {\n\t\treturn this._usages.get(id);\n\t}\n\n\tupdateUsageTimestamp(id: string): void {\n\t\t// map uses insertion order, we want most recent at the end\n\t\tthis._usages.delete(id);\n\t\tthis._usages.set(id, Date.now());\n\n\t\t// persist last 100 item\n\t\tconst all = [...this._usages].slice(-100);\n\t\tthis._storageService.store(SnippetUsageTimestamps._key, JSON.stringify(all), StorageScope.PROFILE, StorageTarget.USER);\n\t}\n}\n\nexport class SnippetsService implements ISnippetsService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate readonly _disposables = new DisposableStore();\n\tprivate readonly _pendingWork: Promise<any>[] = [];\n\tprivate readonly _files = new ResourceMap<SnippetFile>();\n\tprivate readonly _enablement: SnippetEnablement;\n\tprivate readonly _usageTimestamps: SnippetUsageTimestamps;\n\n\tconstructor(\n\t\t@IEnvironmentService private readonly _environmentService: IEnvironmentService,\n\t\t@IUserDataProfileService private readonly _userDataProfileService: IUserDataProfileService,\n\t\t@IWorkspaceContextService private readonly _contextService: IWorkspaceContextService,\n\t\t@ILanguageService private readonly _languageService: ILanguageService,\n\t\t@ILogService private readonly _logService: ILogService,\n\t\t@IFileService private readonly _fileService: IFileService,\n\t\t@ITextFileService private readonly _textfileService: ITextFileService,\n\t\t@IExtensionResourceLoaderService private readonly _extensionResourceLoaderService: IExtensionResourceLoaderService,\n\t\t@ILifecycleService lifecycleService: ILifecycleService,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ILanguageConfigurationService languageConfigurationService: ILanguageConfigurationService,\n\t) {\n\t\tthis._pendingWork.push(Promise.resolve(lifecycleService.when(LifecyclePhase.Restored).then(() => {\n\t\t\tthis._initExtensionSnippets();\n\t\t\tthis._initUserSnippets();\n\t\t\tthis._initWorkspaceSnippets();\n\t\t})));\n\n\t\tsetSnippetSuggestSupport(new SnippetCompletionProvider(this._languageService, this, languageConfigurationService));\n\n\t\tthis._enablement = instantiationService.createInstance(SnippetEnablement);\n\t\tthis._usageTimestamps = instantiationService.createInstance(SnippetUsageTimestamps);\n\t}\n\n\tdispose(): void {\n\t\tthis._disposables.dispose();\n\t}\n\n\tisEnabled(snippet: Snippet): boolean {\n\t\treturn !this._enablement.isIgnored(snippet.snippetIdentifier);\n\t}\n\n\tupdateEnablement(snippet: Snippet, enabled: boolean): void {\n\t\tthis._enablement.updateIgnored(snippet.snippetIdentifier, !enabled);\n\t}\n\n\tupdateUsageTimestamp(snippet: Snippet): void {\n\t\tthis._usageTimestamps.updateUsageTimestamp(snippet.snippetIdentifier);\n\t}\n\n\tprivate _joinSnippets(): Promise<any> {\n\t\tconst promises = this._pendingWork.slice(0);\n\t\tthis._pendingWork.length = 0;\n\t\treturn Promise.all(promises);\n\t}\n\n\tasync getSnippetFiles(): Promise<Iterable<SnippetFile>> {\n\t\tawait this._joinSnippets();\n\t\treturn this._files.values();\n\t}\n\n\tasync getSnippets(languageId: string | undefined, opts?: ISnippetGetOptions): Promise<Snippet[]> {\n\t\tawait this._joinSnippets();\n\n\t\tconst result: Snippet[] = [];\n\t\tconst promises: Promise<any>[] = [];\n\n\t\tif (languageId) {\n\t\t\tif (this._languageService.isRegisteredLanguageId(languageId)) {\n\t\t\t\tfor (const file of this._files.values()) {\n\t\t\t\t\tpromises.push(file.load()\n\t\t\t\t\t\t.then(file => file.select(languageId, result))\n\t\t\t\t\t\t.catch(err => this._logService.error(err, file.location.toString()))\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (const file of this._files.values()) {\n\t\t\t\tpromises.push(file.load()\n\t\t\t\t\t.then(file => insertInto(result, result.length, file.data))\n\t\t\t\t\t.catch(err => this._logService.error(err, file.location.toString()))\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tawait Promise.all(promises);\n\t\treturn this._filterAndSortSnippets(result, opts);\n\t}\n\n\tgetSnippetsSync(languageId: string, opts?: ISnippetGetOptions): Snippet[] {\n\t\tconst result: Snippet[] = [];\n\t\tif (this._languageService.isRegisteredLanguageId(languageId)) {\n\t\t\tfor (const file of this._files.values()) {\n\t\t\t\t// kick off loading (which is a noop in case it's already loaded)\n\t\t\t\t// and optimistically collect snippets\n\t\t\t\tfile.load().catch(_err => { /*ignore*/ });\n\t\t\t\tfile.select(languageId, result);\n\t\t\t}\n\t\t}\n\t\treturn this._filterAndSortSnippets(result, opts);\n\t}\n\n\tprivate _filterAndSortSnippets(snippets: Snippet[], opts?: ISnippetGetOptions): Snippet[] {\n\n\t\tconst result: Snippet[] = [];\n\n\t\tfor (const snippet of snippets) {\n\t\t\tif (!snippet.prefix && !opts?.includeNoPrefixSnippets) {\n\t\t\t\t// prefix or no-prefix wanted\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (!this.isEnabled(snippet) && !opts?.includeDisabledSnippets) {\n\t\t\t\t// enabled or disabled wanted\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (typeof opts?.fileTemplateSnippets === 'boolean' && opts.fileTemplateSnippets !== snippet.isFileTemplate) {\n\t\t\t\t// isTopLevel requested but mismatching\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tresult.push(snippet);\n\t\t}\n\n\n\t\treturn result.sort((a, b) => {\n\t\t\tlet result = 0;\n\t\t\tif (!opts?.noRecencySort) {\n\t\t\t\tconst val1 = this._usageTimestamps.getUsageTimestamp(a.snippetIdentifier) ?? -1;\n\t\t\t\tconst val2 = this._usageTimestamps.getUsageTimestamp(b.snippetIdentifier) ?? -1;\n\t\t\t\tresult = val2 - val1;\n\t\t\t}\n\t\t\tif (result === 0) {\n\t\t\t\tresult = this._compareSnippet(a, b);\n\t\t\t}\n\t\t\treturn result;\n\t\t});\n\t}\n\n\tprivate _compareSnippet(a: Snippet, b: Snippet): number {\n\t\tif (a.snippetSource < b.snippetSource) {\n\t\t\treturn -1;\n\t\t} else if (a.snippetSource > b.snippetSource) {\n\t\t\treturn 1;\n\t\t} else if (a.source < b.source) {\n\t\t\treturn -1;\n\t\t} else if (a.source > b.source) {\n\t\t\treturn 1;\n\t\t} else if (a.name > b.name) {\n\t\t\treturn 1;\n\t\t} else if (a.name < b.name) {\n\t\t\treturn -1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t// --- loading, watching\n\n\tprivate _initExtensionSnippets(): void {\n\t\tsnippetExt.point.setHandler(extensions => {\n\n\t\t\tfor (const [key, value] of this._files) {\n\t\t\t\tif (value.source === SnippetSource.Extension) {\n\t\t\t\t\tthis._files.delete(key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (const extension of extensions) {\n\t\t\t\tfor (const contribution of extension.value) {\n\t\t\t\t\tconst validContribution = snippetExt.toValidSnippet(extension, contribution, this._languageService);\n\t\t\t\t\tif (!validContribution) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst file = this._files.get(validContribution.location);\n\t\t\t\t\tif (file) {\n\t\t\t\t\t\tif (file.defaultScopes) {\n\t\t\t\t\t\t\tfile.defaultScopes.push(validContribution.language);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfile.defaultScopes = [];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst file = new SnippetFile(SnippetSource.Extension, validContribution.location, validContribution.language ? [validContribution.language] : undefined, extension.description, this._fileService, this._extensionResourceLoaderService);\n\t\t\t\t\t\tthis._files.set(file.location, file);\n\n\t\t\t\t\t\tif (this._environmentService.isExtensionDevelopment) {\n\t\t\t\t\t\t\tfile.load().then(file => {\n\t\t\t\t\t\t\t\t// warn about bad tabstop/variable usage\n\t\t\t\t\t\t\t\tif (file.data.some(snippet => snippet.isBogous)) {\n\t\t\t\t\t\t\t\t\textension.collector.warn(localize(\n\t\t\t\t\t\t\t\t\t\t'badVariableUse',\n\t\t\t\t\t\t\t\t\t\t\"One or more snippets from the extension '{0}' very likely confuse snippet-variables and snippet-placeholders (see https://code.visualstudio.com/docs/editor/userdefinedsnippets#_snippet-syntax for more details)\",\n\t\t\t\t\t\t\t\t\t\textension.description.name\n\t\t\t\t\t\t\t\t\t));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, err => {\n\t\t\t\t\t\t\t\t// generic error\n\t\t\t\t\t\t\t\textension.collector.warn(localize(\n\t\t\t\t\t\t\t\t\t'badFile',\n\t\t\t\t\t\t\t\t\t\"The snippet file \\\"{0}\\\" could not be read.\",\n\t\t\t\t\t\t\t\t\tfile.location.toString()\n\t\t\t\t\t\t\t\t));\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate _initWorkspaceSnippets(): void {\n\t\t// workspace stuff\n\t\tconst disposables = new DisposableStore();\n\t\tconst updateWorkspaceSnippets = () => {\n\t\t\tdisposables.clear();\n\t\t\tthis._pendingWork.push(this._initWorkspaceFolderSnippets(this._contextService.getWorkspace(), disposables));\n\t\t};\n\t\tthis._disposables.add(disposables);\n\t\tthis._disposables.add(this._contextService.onDidChangeWorkspaceFolders(updateWorkspaceSnippets));\n\t\tthis._disposables.add(this._contextService.onDidChangeWorkbenchState(updateWorkspaceSnippets));\n\t\tupdateWorkspaceSnippets();\n\t}\n\n\tprivate async _initWorkspaceFolderSnippets(workspace: IWorkspace, bucket: DisposableStore): Promise<any> {\n\t\tconst promises = workspace.folders.map(async folder => {\n\t\t\tconst snippetFolder = folder.toResource('.vscode');\n\t\t\tconst value = await this._fileService.exists(snippetFolder);\n\t\t\tif (value) {\n\t\t\t\tthis._initFolderSnippets(SnippetSource.Workspace, snippetFolder, bucket);\n\t\t\t} else {\n\t\t\t\t// watch\n\t\t\t\tbucket.add(this._fileService.onDidFilesChange(e => {\n\t\t\t\t\tif (e.contains(snippetFolder, FileChangeType.ADDED)) {\n\t\t\t\t\t\tthis._initFolderSnippets(SnippetSource.Workspace, snippetFolder, bucket);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t});\n\t\tawait Promise.all(promises);\n\t}\n\n\tprivate async _initUserSnippets(): Promise<any> {\n\t\tconst disposables = new DisposableStore();\n\t\tconst updateUserSnippets = async () => {\n\t\t\tdisposables.clear();\n\t\t\tconst userSnippetsFolder = this._userDataProfileService.currentProfile.snippetsHome;\n\t\t\tawait this._fileService.createFolder(userSnippetsFolder);\n\t\t\tawait this._initFolderSnippets(SnippetSource.User, userSnippetsFolder, disposables);\n\t\t};\n\t\tthis._disposables.add(disposables);\n\t\tthis._disposables.add(this._userDataProfileService.onDidChangeCurrentProfile(e => e.join((async () => {\n\t\t\tthis._pendingWork.push(updateUserSnippets());\n\t\t})())));\n\t\tawait updateUserSnippets();\n\t}\n\n\tprivate _initFolderSnippets(source: SnippetSource, folder: URI, bucket: DisposableStore): Promise<any> {\n\t\tconst disposables = new DisposableStore();\n\t\tconst addFolderSnippets = async () => {\n\t\t\tdisposables.clear();\n\t\t\tif (!await this._fileService.exists(folder)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tconst stat = await this._fileService.resolve(folder);\n\t\t\t\tfor (const entry of stat.children || []) {\n\t\t\t\t\tdisposables.add(this._addSnippetFile(entry.resource, source));\n\t\t\t\t}\n\t\t\t} catch (err) {\n\t\t\t\tthis._logService.error(`Failed snippets from folder '${folder.toString()}'`, err);\n\t\t\t}\n\t\t};\n\n\t\tbucket.add(this._textfileService.files.onDidSave(e => {\n\t\t\tif (resources.isEqualOrParent(e.model.resource, folder)) {\n\t\t\t\taddFolderSnippets();\n\t\t\t}\n\t\t}));\n\t\tbucket.add(watch(this._fileService, folder, addFolderSnippets));\n\t\tbucket.add(disposables);\n\t\treturn addFolderSnippets();\n\t}\n\n\tprivate _addSnippetFile(uri: URI, source: SnippetSource): IDisposable {\n\t\tconst ext = resources.extname(uri);\n\t\tif (source === SnippetSource.User && ext === '.json') {\n\t\t\tconst langName = resources.basename(uri).replace(/\\.json/, '');\n\t\t\tthis._files.set(uri, new SnippetFile(source, uri, [langName], undefined, this._fileService, this._extensionResourceLoaderService));\n\t\t} else if (ext === '.code-snippets') {\n\t\t\tthis._files.set(uri, new SnippetFile(source, uri, undefined, undefined, this._fileService, this._extensionResourceLoaderService));\n\t\t}\n\t\treturn {\n\t\t\tdispose: () => this._files.delete(uri)\n\t\t};\n\t}\n}\n\n\nexport interface ISimpleModel {\n\tgetLineContent(lineNumber: number): string;\n}\n\nexport function getNonWhitespacePrefix(model: ISimpleModel, position: Position): string {\n\t/**\n\t * Do not analyze more characters\n\t */\n\tconst MAX_PREFIX_LENGTH = 100;\n\n\tconst line = model.getLineContent(position.lineNumber).substr(0, position.column - 1);\n\n\tconst minChIndex = Math.max(0, line.length - MAX_PREFIX_LENGTH);\n\tfor (let chIndex = line.length - 1; chIndex >= minChIndex; chIndex--) {\n\t\tconst ch = line.charAt(chIndex);\n\n\t\tif (/\\s/.test(ch)) {\n\t\t\treturn line.substr(chIndex + 1);\n\t\t}\n\t}\n\n\tif (minChIndex === 0) {\n\t\treturn line;\n\t}\n\n\treturn '';\n}\n"]}