{"version":3,"sources":["vs/workbench/contrib/output/browser/output.contribution.ts"],"names":[],"mappings":"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","file":"output.contribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as nls from 'vs/nls';\nimport * as aria from 'vs/base/browser/ui/aria/aria';\nimport { KeyMod, KeyChord, KeyCode } from 'vs/base/common/keyCodes';\nimport { ModesRegistry } from 'vs/editor/common/languages/modesRegistry';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { MenuId, registerAction2, Action2, MenuRegistry } from 'vs/platform/actions/common/actions';\nimport { InstantiationType, registerSingleton } from 'vs/platform/instantiation/common/extensions';\nimport { OutputService, LogContentProvider } from 'vs/workbench/contrib/output/browser/outputServices';\nimport { OUTPUT_MODE_ID, OUTPUT_MIME, OUTPUT_VIEW_ID, IOutputService, CONTEXT_IN_OUTPUT, LOG_SCHEME, LOG_MODE_ID, LOG_MIME, CONTEXT_ACTIVE_LOG_OUTPUT, CONTEXT_OUTPUT_SCROLL_LOCK, IOutputChannelDescriptor, IFileOutputChannelDescriptor, ACTIVE_OUTPUT_CHANNEL_CONTEXT, IOutputChannelRegistry, Extensions } from 'vs/workbench/services/output/common/output';\nimport { OutputViewPane } from 'vs/workbench/contrib/output/browser/outputView';\nimport { IEditorPaneRegistry, EditorPaneDescriptor } from 'vs/workbench/browser/editor';\nimport { LogViewer, LogViewerInput } from 'vs/workbench/contrib/output/browser/logViewer';\nimport { SyncDescriptor } from 'vs/platform/instantiation/common/descriptors';\nimport { IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions, IWorkbenchContribution } from 'vs/workbench/common/contributions';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { ITextModelService } from 'vs/editor/common/services/resolverService';\nimport { ViewContainer, IViewContainersRegistry, ViewContainerLocation, Extensions as ViewContainerExtensions, IViewsRegistry, IViewsService } from 'vs/workbench/common/views';\nimport { ViewPaneContainer } from 'vs/workbench/browser/parts/views/viewPaneContainer';\nimport { IConfigurationRegistry, Extensions as ConfigurationExtensions, ConfigurationScope } from 'vs/platform/configuration/common/configurationRegistry';\nimport { IQuickPickItem, IQuickInputService, IQuickPickSeparator } from 'vs/platform/quickinput/common/quickInput';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { assertIsDefined } from 'vs/base/common/types';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { Codicon } from 'vs/base/common/codicons';\nimport { registerIcon } from 'vs/platform/theme/common/iconRegistry';\nimport { Categories } from 'vs/platform/action/common/actionCommonCategories';\nimport { EditorExtensions } from 'vs/workbench/common/editor';\nimport { Disposable, dispose, IDisposable, toDisposable } from 'vs/base/common/lifecycle';\n\n// Register Service\nregisterSingleton(IOutputService, OutputService, InstantiationType.Delayed);\n\n// Register Output Mode\nModesRegistry.registerLanguage({\n\tid: OUTPUT_MODE_ID,\n\textensions: [],\n\tmimetypes: [OUTPUT_MIME]\n});\n\n// Register Log Output Mode\nModesRegistry.registerLanguage({\n\tid: LOG_MODE_ID,\n\textensions: [],\n\tmimetypes: [LOG_MIME]\n});\n\n// register output container\nconst outputViewIcon = registerIcon('output-view-icon', Codicon.output, nls.localize('outputViewIcon', 'View icon of the output view.'));\nconst VIEW_CONTAINER: ViewContainer = Registry.as<IViewContainersRegistry>(ViewContainerExtensions.ViewContainersRegistry).registerViewContainer({\n\tid: OUTPUT_VIEW_ID,\n\ttitle: { value: nls.localize('output', \"Output\"), original: 'Output' },\n\ticon: outputViewIcon,\n\torder: 1,\n\tctorDescriptor: new SyncDescriptor(ViewPaneContainer, [OUTPUT_VIEW_ID, { mergeViewWithContainerWhenSingleView: true }]),\n\tstorageId: OUTPUT_VIEW_ID,\n\thideIfEmpty: true,\n}, ViewContainerLocation.Panel, { doNotRegisterOpenCommand: true });\n\nRegistry.as<IViewsRegistry>(ViewContainerExtensions.ViewsRegistry).registerViews([{\n\tid: OUTPUT_VIEW_ID,\n\tname: nls.localize('output', \"Output\"),\n\tcontainerIcon: outputViewIcon,\n\tcanMoveView: true,\n\tcanToggleVisibility: false,\n\tctorDescriptor: new SyncDescriptor(OutputViewPane),\n\topenCommandActionDescriptor: {\n\t\tid: 'workbench.action.output.toggleOutput',\n\t\tmnemonicTitle: nls.localize({ key: 'miToggleOutput', comment: ['&& denotes a mnemonic'] }, \"&&Output\"),\n\t\tkeybindings: {\n\t\t\tprimary: KeyMod.CtrlCmd | KeyMod.Shift | KeyCode.KeyU,\n\t\t\tlinux: {\n\t\t\t\tprimary: KeyChord(KeyMod.CtrlCmd | KeyCode.KeyK, KeyMod.CtrlCmd | KeyCode.KeyH)  // On Ubuntu Ctrl+Shift+U is taken by some global OS command\n\t\t\t}\n\t\t},\n\t\torder: 1,\n\t}\n}], VIEW_CONTAINER);\n\nRegistry.as<IEditorPaneRegistry>(EditorExtensions.EditorPane).registerEditorPane(\n\tEditorPaneDescriptor.create(\n\t\tLogViewer,\n\t\tLogViewer.LOG_VIEWER_EDITOR_ID,\n\t\tnls.localize('logViewer', \"Log Viewer\")\n\t),\n\t[\n\t\tnew SyncDescriptor(LogViewerInput)\n\t]\n);\n\nclass OutputContribution extends Disposable implements IWorkbenchContribution {\n\tconstructor(\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@ITextModelService textModelService: ITextModelService,\n\t\t@IOutputService private readonly outputService: IOutputService,\n\t) {\n\t\tsuper();\n\t\ttextModelService.registerTextModelContentProvider(LOG_SCHEME, instantiationService.createInstance(LogContentProvider));\n\t\tthis.registerActions();\n\t}\n\n\tprivate registerActions(): void {\n\t\tthis.registerSwitchOutputAction();\n\t\tthis.registerShowOutputChannelsAction();\n\t\tthis.registerClearOutputAction();\n\t\tthis.registerToggleAutoScrollAction();\n\t\tthis.registerOpenActiveLogOutputFileAction();\n\t\tthis.registerShowLogsAction();\n\t\tthis.registerOpenLogFileAction();\n\t}\n\n\tprivate registerSwitchOutputAction(): void {\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: `workbench.output.action.switchBetweenOutputs`,\n\t\t\t\t\ttitle: nls.localize('switchBetweenOutputs.label', \"Switch Output\"),\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(accessor: ServicesAccessor, channelId: string): Promise<void> {\n\t\t\t\tif (channelId) {\n\t\t\t\t\taccessor.get(IOutputService).showChannel(channelId, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t\tconst switchOutputMenu = new MenuId('workbench.output.menu.switchOutput');\n\t\tthis._register(MenuRegistry.appendMenuItem(MenuId.ViewTitle, {\n\t\t\tsubmenu: switchOutputMenu,\n\t\t\ttitle: nls.localize('switchToOutput.label', \"Switch Output\"),\n\t\t\tgroup: 'navigation',\n\t\t\twhen: ContextKeyExpr.equals('view', OUTPUT_VIEW_ID),\n\t\t\torder: 1,\n\t\t\tisSelection: true\n\t\t}));\n\t\tconst registeredChannels = new Map<string, IDisposable>();\n\t\tthis._register(toDisposable(() => dispose(registeredChannels.values())));\n\t\tconst registerOutputChannels = (channels: IOutputChannelDescriptor[]) => {\n\t\t\tfor (const channel of channels) {\n\t\t\t\tconst title = channel.label;\n\t\t\t\tconst group = channel.extensionId ? '0_ext_outputchannels' : '1_core_outputchannels';\n\t\t\t\tregisteredChannels.set(channel.id, registerAction2(class extends Action2 {\n\t\t\t\t\tconstructor() {\n\t\t\t\t\t\tsuper({\n\t\t\t\t\t\t\tid: `workbench.action.output.show.${channel.id}`,\n\t\t\t\t\t\t\ttitle,\n\t\t\t\t\t\t\ttoggled: ACTIVE_OUTPUT_CHANNEL_CONTEXT.isEqualTo(channel.id),\n\t\t\t\t\t\t\tmenu: {\n\t\t\t\t\t\t\t\tid: switchOutputMenu,\n\t\t\t\t\t\t\t\tgroup,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\t\t\treturn accessor.get(IOutputService).showChannel(channel.id, true);\n\t\t\t\t\t}\n\t\t\t\t}));\n\t\t\t}\n\t\t};\n\t\tregisterOutputChannels(this.outputService.getChannelDescriptors());\n\t\tconst outputChannelRegistry = Registry.as<IOutputChannelRegistry>(Extensions.OutputChannels);\n\t\tthis._register(outputChannelRegistry.onDidRegisterChannel(e => {\n\t\t\tconst channel = this.outputService.getChannelDescriptor(e);\n\t\t\tif (channel) {\n\t\t\t\tregisterOutputChannels([channel]);\n\t\t\t}\n\t\t}));\n\t\tthis._register(outputChannelRegistry.onDidRemoveChannel(e => {\n\t\t\tregisteredChannels.get(e)?.dispose();\n\t\t\tregisteredChannels.delete(e);\n\t\t}));\n\t}\n\n\tprivate registerShowOutputChannelsAction(): void {\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.action.showOutputChannels',\n\t\t\t\t\ttitle: { value: nls.localize('showOutputChannels', \"Show Output Channels...\"), original: 'Show Output Channels...' },\n\t\t\t\t\tcategory: { value: nls.localize('output', \"Output\"), original: 'Output' },\n\t\t\t\t\tf1: true\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\tconst outputService = accessor.get(IOutputService);\n\t\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\t\t\tconst extensionChannels = [], coreChannels = [];\n\t\t\t\tfor (const channel of outputService.getChannelDescriptors()) {\n\t\t\t\t\tif (channel.extensionId) {\n\t\t\t\t\t\textensionChannels.push(channel);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcoreChannels.push(channel);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst entries: ({ id: string; label: string } | IQuickPickSeparator)[] = [];\n\t\t\t\tfor (const { id, label } of extensionChannels) {\n\t\t\t\t\tentries.push({ id, label });\n\t\t\t\t}\n\t\t\t\tif (extensionChannels.length && coreChannels.length) {\n\t\t\t\t\tentries.push({ type: 'separator' });\n\t\t\t\t}\n\t\t\t\tfor (const { id, label } of coreChannels) {\n\t\t\t\t\tentries.push({ id, label });\n\t\t\t\t}\n\t\t\t\tconst entry = await quickInputService.pick(entries, { placeHolder: nls.localize('selectOutput', \"Select Output Channel\") });\n\t\t\t\tif (entry) {\n\t\t\t\t\treturn outputService.showChannel(entry.id);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate registerClearOutputAction(): void {\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: `workbench.output.action.clearOutput`,\n\t\t\t\t\ttitle: { value: nls.localize('clearOutput.label', \"Clear Output\"), original: 'Clear Output' },\n\t\t\t\t\tcategory: Categories.View,\n\t\t\t\t\tmenu: [{\n\t\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\t\twhen: ContextKeyExpr.equals('view', OUTPUT_VIEW_ID),\n\t\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\t\torder: 2\n\t\t\t\t\t}, {\n\t\t\t\t\t\tid: MenuId.CommandPalette\n\t\t\t\t\t}, {\n\t\t\t\t\t\tid: MenuId.EditorContext,\n\t\t\t\t\t\twhen: CONTEXT_IN_OUTPUT\n\t\t\t\t\t}],\n\t\t\t\t\ticon: Codicon.clearAll\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\tconst outputService = accessor.get(IOutputService);\n\t\t\t\tconst activeChannel = outputService.getActiveChannel();\n\t\t\t\tif (activeChannel) {\n\t\t\t\t\tactiveChannel.clear();\n\t\t\t\t\taria.status(nls.localize('outputCleared', \"Output was cleared\"));\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate registerToggleAutoScrollAction(): void {\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: `workbench.output.action.toggleAutoScroll`,\n\t\t\t\t\ttitle: { value: nls.localize('toggleAutoScroll', \"Toggle Auto Scrolling\"), original: 'Toggle Auto Scrolling' },\n\t\t\t\t\ttooltip: nls.localize('outputScrollOff', \"Turn Auto Scrolling Off\"),\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\t\twhen: ContextKeyExpr.and(ContextKeyExpr.equals('view', OUTPUT_VIEW_ID)),\n\t\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\t\torder: 3,\n\t\t\t\t\t},\n\t\t\t\t\ticon: Codicon.lock,\n\t\t\t\t\ttoggled: {\n\t\t\t\t\t\tcondition: CONTEXT_OUTPUT_SCROLL_LOCK,\n\t\t\t\t\t\ticon: Codicon.unlock,\n\t\t\t\t\t\ttooltip: nls.localize('outputScrollOn', \"Turn Auto Scrolling On\")\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\tconst outputView = accessor.get(IViewsService).getActiveViewWithId<OutputViewPane>(OUTPUT_VIEW_ID)!;\n\t\t\t\toutputView.scrollLock = !outputView.scrollLock;\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate registerOpenActiveLogOutputFileAction(): void {\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: `workbench.action.openActiveLogOutputFile`,\n\t\t\t\t\ttitle: { value: nls.localize('openActiveLogOutputFile', \"Open Log Output File\"), original: 'Open Log Output File' },\n\t\t\t\t\tmenu: [{\n\t\t\t\t\t\tid: MenuId.ViewTitle,\n\t\t\t\t\t\twhen: ContextKeyExpr.equals('view', OUTPUT_VIEW_ID),\n\t\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\t\torder: 4\n\t\t\t\t\t}],\n\t\t\t\t\ticon: Codicon.goToFile,\n\t\t\t\t\tprecondition: CONTEXT_ACTIVE_LOG_OUTPUT\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\tconst outputService = accessor.get(IOutputService);\n\t\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\t\t\tconst logFileOutputChannelDescriptor = this.getLogFileOutputChannelDescriptor(outputService);\n\t\t\t\tif (logFileOutputChannelDescriptor) {\n\t\t\t\t\tawait editorService.openEditor(instantiationService.createInstance(LogViewerInput, logFileOutputChannelDescriptor), { pinned: true });\n\t\t\t\t}\n\t\t\t}\n\t\t\tprivate getLogFileOutputChannelDescriptor(outputService: IOutputService): IFileOutputChannelDescriptor | null {\n\t\t\t\tconst channel = outputService.getActiveChannel();\n\t\t\t\tif (channel) {\n\t\t\t\t\tconst descriptor = outputService.getChannelDescriptors().filter(c => c.id === channel.id)[0];\n\t\t\t\t\tif (descriptor && descriptor.file && descriptor.log) {\n\t\t\t\t\t\treturn <IFileOutputChannelDescriptor>descriptor;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate registerShowLogsAction(): void {\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.action.showLogs',\n\t\t\t\t\ttitle: { value: nls.localize('showLogs', \"Show Logs...\"), original: 'Show Logs...' },\n\t\t\t\t\tcategory: Categories.Developer,\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\t\t\tconst outputService = accessor.get(IOutputService);\n\t\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\t\t\tconst extensionLogs = [], logs = [];\n\t\t\t\tfor (const channel of outputService.getChannelDescriptors()) {\n\t\t\t\t\tif (channel.log) {\n\t\t\t\t\t\tif (channel.extensionId) {\n\t\t\t\t\t\t\textensionLogs.push(channel);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlogs.push(channel);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tconst entries: ({ id: string; label: string } | IQuickPickSeparator)[] = [];\n\t\t\t\tfor (const { id, label } of logs) {\n\t\t\t\t\tentries.push({ id, label });\n\t\t\t\t}\n\t\t\t\tif (extensionLogs.length && logs.length) {\n\t\t\t\t\tentries.push({ type: 'separator', label: nls.localize('extensionLogs', \"Extension Logs\") });\n\t\t\t\t}\n\t\t\t\tfor (const { id, label } of extensionLogs) {\n\t\t\t\t\tentries.push({ id, label });\n\t\t\t\t}\n\t\t\t\tconst entry = await quickInputService.pick(entries, { placeHolder: nls.localize('selectlog', \"Select Log\") });\n\t\t\t\tif (entry) {\n\t\t\t\t\treturn outputService.showChannel(entry.id);\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate registerOpenLogFileAction(): void {\n\t\tinterface IOutputChannelQuickPickItem extends IQuickPickItem {\n\t\t\tchannel: IOutputChannelDescriptor;\n\t\t}\n\t\tthis._register(registerAction2(class extends Action2 {\n\t\t\tconstructor() {\n\t\t\t\tsuper({\n\t\t\t\t\tid: 'workbench.action.openLogFile',\n\t\t\t\t\ttitle: { value: nls.localize('openLogFile', \"Open Log File...\"), original: 'Open Log File...' },\n\t\t\t\t\tcategory: Categories.Developer,\n\t\t\t\t\tmenu: {\n\t\t\t\t\t\tid: MenuId.CommandPalette,\n\t\t\t\t\t},\n\t\t\t\t\tdescription: {\n\t\t\t\t\t\tdescription: 'workbench.action.openLogFile',\n\t\t\t\t\t\targs: [{\n\t\t\t\t\t\t\tname: 'logFile',\n\t\t\t\t\t\t\tschema: {\n\t\t\t\t\t\t\t\tmarkdownDescription: nls.localize('logFile', \"The id of the log file to open, for example `\\\"window\\\"`. Currently the best way to get this is to get the ID by checking the `workbench.action.output.show.<id>` commands\"),\n\t\t\t\t\t\t\t\ttype: 'string'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}]\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t}\n\t\t\tasync run(accessor: ServicesAccessor, args?: unknown): Promise<void> {\n\t\t\t\tconst outputService = accessor.get(IOutputService);\n\t\t\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\t\t\tconst instantiationService = accessor.get(IInstantiationService);\n\t\t\t\tconst editorService = accessor.get(IEditorService);\n\n\t\t\t\tconst entries: IOutputChannelQuickPickItem[] = outputService.getChannelDescriptors().filter(c => c.file && c.log)\n\t\t\t\t\t.map(channel => (<IOutputChannelQuickPickItem>{ id: channel.id, label: channel.label, channel }));\n\n\t\t\t\tconst argName = args && typeof args === 'string' ? args : undefined;\n\t\t\t\tlet entry: IOutputChannelQuickPickItem | undefined;\n\t\t\t\tif (argName) {\n\t\t\t\t\tentry = entries.find(e => e.id === argName);\n\t\t\t\t}\n\t\t\t\tif (!entry) {\n\t\t\t\t\tentry = await quickInputService.pick(entries, { placeHolder: nls.localize('selectlogFile', \"Select Log File\") });\n\t\t\t\t}\n\t\t\t\tif (entry) {\n\t\t\t\t\tassertIsDefined(entry.channel.file);\n\t\t\t\t\tawait editorService.openEditor(instantiationService.createInstance(LogViewerInput, (entry.channel as IFileOutputChannelDescriptor)), { pinned: true });\n\t\t\t\t}\n\t\t\t}\n\t\t}));\n\t}\n\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(OutputContribution, LifecyclePhase.Restored);\n\nRegistry.as<IConfigurationRegistry>(ConfigurationExtensions.Configuration).registerConfiguration({\n\tid: 'output',\n\torder: 30,\n\ttitle: nls.localize('output', \"Output\"),\n\ttype: 'object',\n\tproperties: {\n\t\t'output.smartScroll.enabled': {\n\t\t\ttype: 'boolean',\n\t\t\tdescription: nls.localize('output.smartScroll.enabled', \"Enable/disable the ability of smart scrolling in the output view. Smart scrolling allows you to lock scrolling automatically when you click in the output view and unlocks when you click in the last line.\"),\n\t\t\tdefault: true,\n\t\t\tscope: ConfigurationScope.WINDOW,\n\t\t\ttags: ['output']\n\t\t}\n\t}\n});\n"]}