{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/output/common/outputChannelModel.ts"],"names":[],"mappings":"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","file":"outputChannelModel.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport * as resources from 'vs/base/common/resources';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { IEditorWorkerService } from 'vs/editor/common/services/editorWorker';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { URI } from 'vs/base/common/uri';\nimport { Promises, ThrottledDelayer } from 'vs/base/common/async';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IModelService } from 'vs/editor/common/services/model';\nimport { ILanguageSelection } from 'vs/editor/common/languages/language';\nimport { Disposable, toDisposable, IDisposable, dispose, MutableDisposable } from 'vs/base/common/lifecycle';\nimport { isNumber } from 'vs/base/common/types';\nimport { EditOperation, ISingleEditOperation } from 'vs/editor/common/core/editOperation';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { VSBuffer } from 'vs/base/common/buffer';\nimport { ILogger, ILoggerService, ILogService } from 'vs/platform/log/common/log';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { OutputChannelUpdateMode } from 'vs/workbench/services/output/common/output';\nimport { isCancellationError } from 'vs/base/common/errors';\n\nexport interface IOutputChannelModel extends IDisposable {\n\treadonly onDispose: Event<void>;\n\tappend(output: string): void;\n\tupdate(mode: OutputChannelUpdateMode, till: number | undefined, immediate: boolean): void;\n\tloadModel(): Promise<ITextModel>;\n\tclear(): void;\n\treplace(value: string): void;\n}\n\nclass OutputFileListener extends Disposable {\n\n\tprivate readonly _onDidContentChange = new Emitter<number | undefined>();\n\treadonly onDidContentChange: Event<number | undefined> = this._onDidContentChange.event;\n\n\tprivate watching: boolean = false;\n\tprivate syncDelayer: ThrottledDelayer<void>;\n\tprivate etag: string | undefined;\n\n\tconstructor(\n\t\tprivate readonly file: URI,\n\t\tprivate readonly fileService: IFileService,\n\t\tprivate readonly logService: ILogService\n\t) {\n\t\tsuper();\n\t\tthis.syncDelayer = new ThrottledDelayer<void>(500);\n\t}\n\n\twatch(eTag: string | undefined): void {\n\t\tif (!this.watching) {\n\t\t\tthis.etag = eTag;\n\t\t\tthis.poll();\n\t\t\tthis.logService.trace('Started polling', this.file.toString());\n\t\t\tthis.watching = true;\n\t\t}\n\t}\n\n\tprivate poll(): void {\n\t\tconst loop = () => this.doWatch().then(() => this.poll());\n\t\tthis.syncDelayer.trigger(loop).catch(error => {\n\t\t\tif (!isCancellationError(error)) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async doWatch(): Promise<void> {\n\t\tconst stat = await this.fileService.stat(this.file);\n\t\tif (stat.etag !== this.etag) {\n\t\t\tthis.etag = stat.etag;\n\t\t\tthis._onDidContentChange.fire(stat.size);\n\t\t}\n\t}\n\n\tunwatch(): void {\n\t\tif (this.watching) {\n\t\t\tthis.syncDelayer.cancel();\n\t\t\tthis.watching = false;\n\t\t\tthis.logService.trace('Stopped polling', this.file.toString());\n\t\t}\n\t}\n\n\toverride dispose(): void {\n\t\tthis.unwatch();\n\t\tsuper.dispose();\n\t}\n}\n\nexport class FileOutputChannelModel extends Disposable implements IOutputChannelModel {\n\n\tprivate readonly _onDispose = this._register(new Emitter<void>());\n\treadonly onDispose: Event<void> = this._onDispose.event;\n\n\tprivate readonly fileHandler: OutputFileListener;\n\tprivate etag: string | undefined = '';\n\n\tprivate loadModelPromise: Promise<ITextModel> | null = null;\n\tprivate model: ITextModel | null = null;\n\tprivate modelUpdateInProgress: boolean = false;\n\tprivate readonly modelUpdateCancellationSource = this._register(new MutableDisposable<CancellationTokenSource>());\n\tprivate readonly appendThrottler = this._register(new ThrottledDelayer(300));\n\tprivate replacePromise: Promise<void> | undefined;\n\n\tprivate startOffset: number = 0;\n\tprivate endOffset: number = 0;\n\n\tconstructor(\n\t\tprivate readonly modelUri: URI,\n\t\tprivate readonly language: ILanguageSelection,\n\t\tprivate readonly file: URI,\n\t\t@IFileService private readonly fileService: IFileService,\n\t\t@IModelService private readonly modelService: IModelService,\n\t\t@ILogService logService: ILogService,\n\t\t@IEditorWorkerService private readonly editorWorkerService: IEditorWorkerService,\n\t) {\n\t\tsuper();\n\n\t\tthis.fileHandler = this._register(new OutputFileListener(this.file, this.fileService, logService));\n\t\tthis._register(this.fileHandler.onDidContentChange(size => this.onDidContentChange(size)));\n\t\tthis._register(toDisposable(() => this.fileHandler.unwatch()));\n\t}\n\n\tappend(message: string): void {\n\t\tthrow new Error('Not supported');\n\t}\n\n\treplace(message: string): void {\n\t\tthrow new Error('Not supported');\n\t}\n\n\tclear(): void {\n\t\tthis.update(OutputChannelUpdateMode.Clear, this.endOffset, true);\n\t}\n\n\tupdate(mode: OutputChannelUpdateMode, till: number | undefined, immediate: boolean): void {\n\t\tconst loadModelPromise: Promise<any> = this.loadModelPromise ? this.loadModelPromise : Promise.resolve();\n\t\tloadModelPromise.then(() => this.doUpdate(mode, till, immediate));\n\t}\n\n\tloadModel(): Promise<ITextModel> {\n\t\tthis.loadModelPromise = Promises.withAsyncBody<ITextModel>(async (c, e) => {\n\t\t\ttry {\n\t\t\t\tlet content = '';\n\t\t\t\tif (await this.fileService.exists(this.file)) {\n\t\t\t\t\tconst fileContent = await this.fileService.readFile(this.file, { position: this.startOffset });\n\t\t\t\t\tthis.endOffset = this.startOffset + fileContent.value.byteLength;\n\t\t\t\t\tthis.etag = fileContent.etag;\n\t\t\t\t\tcontent = fileContent.value.toString();\n\t\t\t\t} else {\n\t\t\t\t\tthis.startOffset = 0;\n\t\t\t\t\tthis.endOffset = 0;\n\t\t\t\t}\n\t\t\t\tc(this.createModel(content));\n\t\t\t} catch (error) {\n\t\t\t\te(error);\n\t\t\t}\n\t\t});\n\t\treturn this.loadModelPromise;\n\t}\n\n\tprivate createModel(content: string): ITextModel {\n\t\tif (this.model) {\n\t\t\tthis.model.setValue(content);\n\t\t} else {\n\t\t\tthis.model = this.modelService.createModel(content, this.language, this.modelUri);\n\t\t\tthis.fileHandler.watch(this.etag);\n\t\t\tconst disposable = this.model.onWillDispose(() => {\n\t\t\t\tthis.cancelModelUpdate();\n\t\t\t\tthis.fileHandler.unwatch();\n\t\t\t\tthis.model = null;\n\t\t\t\tdispose(disposable);\n\t\t\t});\n\t\t}\n\t\treturn this.model;\n\t}\n\n\tprivate doUpdate(mode: OutputChannelUpdateMode, till: number | undefined, immediate: boolean): void {\n\t\tif (mode === OutputChannelUpdateMode.Clear || mode === OutputChannelUpdateMode.Replace) {\n\t\t\tthis.startOffset = this.endOffset = isNumber(till) ? till : this.endOffset;\n\t\t\tthis.cancelModelUpdate();\n\t\t}\n\t\tif (!this.model) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.modelUpdateInProgress = true;\n\t\tif (!this.modelUpdateCancellationSource.value) {\n\t\t\tthis.modelUpdateCancellationSource.value = new CancellationTokenSource();\n\t\t}\n\t\tconst token = this.modelUpdateCancellationSource.value.token;\n\n\t\tif (mode === OutputChannelUpdateMode.Clear) {\n\t\t\tthis.clearContent(this.model);\n\t\t}\n\n\t\telse if (mode === OutputChannelUpdateMode.Replace) {\n\t\t\tthis.replacePromise = this.replaceContent(this.model, token).finally(() => this.replacePromise = undefined);\n\t\t}\n\n\t\telse {\n\t\t\tthis.appendContent(this.model, immediate, token);\n\t\t}\n\t}\n\n\tprivate clearContent(model: ITextModel): void {\n\t\tthis.doUpdateModel(model, [EditOperation.delete(model.getFullModelRange())], VSBuffer.fromString(''));\n\t}\n\n\tprivate appendContent(model: ITextModel, immediate: boolean, token: CancellationToken): void {\n\t\tthis.appendThrottler.trigger(async () => {\n\t\t\t/* Abort if operation is cancelled */\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/* Wait for replace to finish */\n\t\t\tif (this.replacePromise) {\n\t\t\t\ttry { await this.replacePromise; } catch (e) { /* Ignore */ }\n\t\t\t\t/* Abort if operation is cancelled */\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/* Get content to append */\n\t\t\tconst contentToAppend = await this.getContentToUpdate();\n\t\t\t/* Abort if operation is cancelled */\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t/* Appned Content */\n\t\t\tconst lastLine = model.getLineCount();\n\t\t\tconst lastLineMaxColumn = model.getLineMaxColumn(lastLine);\n\t\t\tconst edits = [EditOperation.insert(new Position(lastLine, lastLineMaxColumn), contentToAppend.toString())];\n\t\t\tthis.doUpdateModel(model, edits, contentToAppend);\n\t\t}, immediate ? 0 : undefined).catch(error => {\n\t\t\tif (!isCancellationError(error)) {\n\t\t\t\tthrow error;\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate async replaceContent(model: ITextModel, token: CancellationToken): Promise<void> {\n\t\t/* Get content to replace */\n\t\tconst contentToReplace = await this.getContentToUpdate();\n\t\t/* Abort if operation is cancelled */\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\t/* Compute Edits */\n\t\tconst edits = await this.getReplaceEdits(model, contentToReplace.toString());\n\t\t/* Abort if operation is cancelled */\n\t\tif (token.isCancellationRequested) {\n\t\t\treturn;\n\t\t}\n\n\t\t/* Apply Edits */\n\t\tthis.doUpdateModel(model, edits, contentToReplace);\n\t}\n\n\tprivate async getReplaceEdits(model: ITextModel, contentToReplace: string): Promise<ISingleEditOperation[]> {\n\t\tif (!contentToReplace) {\n\t\t\treturn [EditOperation.delete(model.getFullModelRange())];\n\t\t}\n\t\tif (contentToReplace !== model.getValue()) {\n\t\t\tconst edits = await this.editorWorkerService.computeMoreMinimalEdits(model.uri, [{ text: contentToReplace.toString(), range: model.getFullModelRange() }]);\n\t\t\tif (edits?.length) {\n\t\t\t\treturn edits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text));\n\t\t\t}\n\t\t}\n\t\treturn [];\n\t}\n\n\tprivate doUpdateModel(model: ITextModel, edits: ISingleEditOperation[], content: VSBuffer): void {\n\t\tif (edits.length) {\n\t\t\tmodel.applyEdits(edits);\n\t\t}\n\t\tthis.endOffset = this.endOffset + content.byteLength;\n\t\tthis.modelUpdateInProgress = false;\n\t}\n\n\tprotected cancelModelUpdate(): void {\n\t\tthis.modelUpdateCancellationSource.value?.cancel();\n\t\tthis.modelUpdateCancellationSource.value = undefined;\n\t\tthis.appendThrottler.cancel();\n\t\tthis.replacePromise = undefined;\n\t\tthis.modelUpdateInProgress = false;\n\t}\n\n\tprivate async getContentToUpdate(): Promise<VSBuffer> {\n\t\tconst content = await this.fileService.readFile(this.file, { position: this.endOffset });\n\t\tthis.etag = content.etag;\n\t\treturn content.value;\n\t}\n\n\tprivate onDidContentChange(size: number | undefined): void {\n\t\tif (this.model) {\n\t\t\tif (!this.modelUpdateInProgress) {\n\t\t\t\tif (isNumber(size) && this.endOffset > size) {\n\t\t\t\t\t// Reset - Content is removed\n\t\t\t\t\tthis.update(OutputChannelUpdateMode.Clear, 0, true);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.update(OutputChannelUpdateMode.Append, undefined, false /* Not needed to update immediately. Wait to collect more changes and update. */);\n\t\t}\n\t}\n\n\tprotected isVisible(): boolean {\n\t\treturn !!this.model;\n\t}\n\n\toverride dispose(): void {\n\t\tthis._onDispose.fire();\n\t\tsuper.dispose();\n\t}\n}\n\nclass OutputChannelBackedByFile extends FileOutputChannelModel implements IOutputChannelModel {\n\n\tprivate logger: ILogger;\n\tprivate _offset: number;\n\n\tconstructor(\n\t\tid: string,\n\t\tmodelUri: URI,\n\t\tlanguage: ILanguageSelection,\n\t\tfile: URI,\n\t\t@IFileService fileService: IFileService,\n\t\t@IModelService modelService: IModelService,\n\t\t@ILoggerService loggerService: ILoggerService,\n\t\t@ILogService logService: ILogService,\n\t\t@IEditorWorkerService editorWorkerService: IEditorWorkerService\n\t) {\n\t\tsuper(modelUri, language, file, fileService, modelService, logService, editorWorkerService);\n\n\t\t// Donot rotate to check for the file reset\n\t\tthis.logger = loggerService.createLogger(file, { logLevel: 'always', donotRotate: true, donotUseFormatters: true, hidden: true });\n\t\tthis._offset = 0;\n\t}\n\n\toverride append(message: string): void {\n\t\tthis.write(message);\n\t\tthis.update(OutputChannelUpdateMode.Append, undefined, this.isVisible());\n\t}\n\n\toverride replace(message: string): void {\n\t\tconst till = this._offset;\n\t\tthis.write(message);\n\t\tthis.update(OutputChannelUpdateMode.Replace, till, true);\n\t}\n\n\tprivate write(content: string): void {\n\t\tthis._offset += VSBuffer.fromString(content).byteLength;\n\t\tthis.logger.info(content);\n\t\tif (this.isVisible()) {\n\t\t\tthis.logger.flush();\n\t\t}\n\t}\n\n}\n\nexport class DelegatedOutputChannelModel extends Disposable implements IOutputChannelModel {\n\n\tprivate readonly _onDispose: Emitter<void> = this._register(new Emitter<void>());\n\treadonly onDispose: Event<void> = this._onDispose.event;\n\n\tprivate readonly outputChannelModel: Promise<IOutputChannelModel>;\n\n\tconstructor(\n\t\tid: string,\n\t\tmodelUri: URI,\n\t\tlanguage: ILanguageSelection,\n\t\toutputDir: Promise<URI>,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t\t@IFileService private readonly fileService: IFileService,\n\t) {\n\t\tsuper();\n\t\tthis.outputChannelModel = this.createOutputChannelModel(id, modelUri, language, outputDir);\n\t}\n\n\tprivate async createOutputChannelModel(id: string, modelUri: URI, language: ILanguageSelection, outputDirPromise: Promise<URI>): Promise<IOutputChannelModel> {\n\t\tconst outputDir = await outputDirPromise;\n\t\tconst file = resources.joinPath(outputDir, `${id.replace(/[\\\\/:\\*\\?\"<>\\|]/g, '')}.log`);\n\t\tawait this.fileService.createFile(file);\n\t\tconst outputChannelModel = this._register(this.instantiationService.createInstance(OutputChannelBackedByFile, id, modelUri, language, file));\n\t\tthis._register(outputChannelModel.onDispose(() => this._onDispose.fire()));\n\t\treturn outputChannelModel;\n\t}\n\n\tappend(output: string): void {\n\t\tthis.outputChannelModel.then(outputChannelModel => outputChannelModel.append(output));\n\t}\n\n\tupdate(mode: OutputChannelUpdateMode, till: number | undefined, immediate: boolean): void {\n\t\tthis.outputChannelModel.then(outputChannelModel => outputChannelModel.update(mode, till, immediate));\n\t}\n\n\tloadModel(): Promise<ITextModel> {\n\t\treturn this.outputChannelModel.then(outputChannelModel => outputChannelModel.loadModel());\n\t}\n\n\tclear(): void {\n\t\tthis.outputChannelModel.then(outputChannelModel => outputChannelModel.clear());\n\t}\n\n\treplace(value: string): void {\n\t\tthis.outputChannelModel.then(outputChannelModel => outputChannelModel.replace(value));\n\t}\n}\n"]}