{"version":3,"sources":["vs/workbench/contrib/chat/browser/actions/chatMoveActions.ts"],"names":[],"mappings":"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","file":"chatMoveActions.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Action2, IAction2Options, MenuId, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { ViewAction } from 'vs/workbench/browser/parts/views/viewPane';\nimport { ActiveEditorContext } from 'vs/workbench/common/contextkeys';\nimport { IViewsService } from 'vs/workbench/common/views';\nimport { CHAT_CATEGORY } from 'vs/workbench/contrib/chat/browser/actions/chatActions';\nimport { IChatWidgetService } from 'vs/workbench/contrib/chat/browser/chat';\nimport { IChatEditorOptions } from 'vs/workbench/contrib/chat/browser/chatEditor';\nimport { ChatEditorInput } from 'vs/workbench/contrib/chat/browser/chatEditorInput';\nimport { ChatViewPane } from 'vs/workbench/contrib/chat/browser/chatViewPane';\nimport { CONTEXT_PROVIDER_EXISTS } from 'vs/workbench/contrib/chat/common/chatContextKeys';\nimport { IChatContributionService } from 'vs/workbench/contrib/chat/common/chatContributionService';\nimport { IChatService } from 'vs/workbench/contrib/chat/common/chatService';\nimport { IEditorGroupsService } from 'vs/workbench/services/editor/common/editorGroupsService';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\n\nconst getMoveToEditorChatActionDescriptorForViewTitle = (viewId: string, providerId: string): Readonly<IAction2Options> & { viewId: string } => ({\n\tid: `workbench.action.chat.${providerId}.openInEditor`,\n\ttitle: {\n\t\tvalue: localize('chat.openInEditor.label', \"Open Session In Editor\"),\n\t\toriginal: 'Open Session In Editor'\n\t},\n\tcategory: CHAT_CATEGORY,\n\tprecondition: CONTEXT_PROVIDER_EXISTS,\n\tf1: false,\n\tviewId,\n\tmenu: {\n\t\tid: MenuId.ViewTitle,\n\t\twhen: ContextKeyExpr.equals('view', viewId),\n\t\torder: 0\n\t},\n});\n\nexport function getMoveToEditorAction(viewId: string, providerId: string) {\n\treturn class MoveToEditorAction extends ViewAction<ChatViewPane> {\n\t\tconstructor() {\n\t\t\tsuper(getMoveToEditorChatActionDescriptorForViewTitle(viewId, providerId));\n\t\t}\n\n\t\tasync runInView(accessor: ServicesAccessor, view: ChatViewPane) {\n\t\t\tconst viewModel = view.widget.viewModel;\n\t\t\tif (!viewModel) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tview.clear();\n\t\t\tawait editorService.openEditor({ resource: ChatEditorInput.getNewEditorUri(), options: <IChatEditorOptions>{ target: { sessionId: viewModel.sessionId }, pinned: true } });\n\t\t}\n\t};\n}\n\nasync function moveToSidebar(accessor: ServicesAccessor): Promise<void> {\n\tconst viewsService = accessor.get(IViewsService);\n\tconst editorService = accessor.get(IEditorService);\n\tconst chatContribService = accessor.get(IChatContributionService);\n\tconst editorGroupService = accessor.get(IEditorGroupsService);\n\n\tconst chatEditorInput = editorService.activeEditor;\n\tif (chatEditorInput instanceof ChatEditorInput && chatEditorInput.sessionId && chatEditorInput.providerId) {\n\t\tawait editorService.closeEditor({ editor: chatEditorInput, groupId: editorGroupService.activeGroup.id });\n\t\tconst viewId = chatContribService.getViewIdForProvider(chatEditorInput.providerId);\n\t\tconst view = await viewsService.openView(viewId) as ChatViewPane;\n\t\tview.loadSession(chatEditorInput.sessionId);\n\t} else {\n\t\tconst chatService = accessor.get(IChatService);\n\t\tconst providerId = chatService.getProviderInfos()[0].id;\n\t\tconst viewId = chatContribService.getViewIdForProvider(providerId);\n\t\tawait viewsService.openView(viewId);\n\t}\n}\n\nexport function registerMoveActions() {\n\tregisterAction2(class GlobalMoveToEditorAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: `workbench.action.chat.openInEditor`,\n\t\t\t\ttitle: {\n\t\t\t\t\tvalue: localize('interactiveSession.openInEditor.label', \"Open Session In Editor\"),\n\t\t\t\t\toriginal: 'Open Session In Editor'\n\t\t\t\t},\n\t\t\t\tcategory: CHAT_CATEGORY,\n\t\t\t\tprecondition: CONTEXT_PROVIDER_EXISTS,\n\t\t\t\tf1: true\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor, ...args: any[]) {\n\t\t\tconst widgetService = accessor.get(IChatWidgetService);\n\t\t\tconst viewService = accessor.get(IViewsService);\n\t\t\tconst editorService = accessor.get(IEditorService);\n\t\t\tconst chatService = accessor.get(IChatService);\n\n\t\t\tconst widget = widgetService.lastFocusedWidget;\n\t\t\tif (!widget || !('viewId' in widget.viewContext)) {\n\t\t\t\tconst providerId = chatService.getProviderInfos()[0].id;\n\t\t\t\tawait editorService.openEditor({ resource: ChatEditorInput.getNewEditorUri(), options: <IChatEditorOptions>{ target: { providerId }, pinned: true } });\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst viewModel = widget.viewModel;\n\t\t\tif (!viewModel) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst sessionId = viewModel.sessionId;\n\t\t\tconst view = await viewService.openView(widget.viewContext.viewId) as ChatViewPane;\n\t\t\tview.clear();\n\t\t\tawait editorService.openEditor({ resource: ChatEditorInput.getNewEditorUri(), options: <IChatEditorOptions>{ target: { sessionId: sessionId }, pinned: true } });\n\t\t}\n\t});\n\n\tregisterAction2(class GlobalMoveToSidebarAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: `workbench.action.chat.openInSidebar`,\n\t\t\t\ttitle: {\n\t\t\t\t\tvalue: localize('interactiveSession.openInSidebar.label', \"Open Session In Sidebar\"),\n\t\t\t\t\toriginal: 'Open Session In Sidebar'\n\t\t\t\t},\n\t\t\t\tcategory: CHAT_CATEGORY,\n\t\t\t\tprecondition: CONTEXT_PROVIDER_EXISTS,\n\t\t\t\tf1: true,\n\t\t\t\tmenu: [{\n\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\torder: 0,\n\t\t\t\t\twhen: ActiveEditorContext.isEqualTo(ChatEditorInput.EditorID),\n\t\t\t\t}]\n\t\t\t});\n\t\t}\n\n\t\tasync run(accessor: ServicesAccessor, ...args: any[]) {\n\t\t\treturn moveToSidebar(accessor);\n\t\t}\n\t});\n}\n"]}