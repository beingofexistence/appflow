{"version":3,"sources":["vs/workbench/contrib/chat/browser/actions/chatClearActions.ts"],"names":[],"mappings":"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","file":"chatClearActions.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Codicon } from 'vs/base/common/codicons';\nimport { KeyCode, KeyMod } from 'vs/base/common/keyCodes';\nimport { ServicesAccessor } from 'vs/editor/browser/editorExtensions';\nimport { localize } from 'vs/nls';\nimport { Action2, IAction2Options, MenuId, registerAction2 } from 'vs/platform/actions/common/actions';\nimport { ContextKeyExpr } from 'vs/platform/contextkey/common/contextkey';\nimport { KeybindingWeight } from 'vs/platform/keybinding/common/keybindingsRegistry';\nimport { ViewAction } from 'vs/workbench/browser/parts/views/viewPane';\nimport { ActiveEditorContext } from 'vs/workbench/common/contextkeys';\nimport { CHAT_CATEGORY } from 'vs/workbench/contrib/chat/browser/actions/chatActions';\nimport { clearChatEditor } from 'vs/workbench/contrib/chat/browser/actions/chatClear';\nimport { IChatWidgetService } from 'vs/workbench/contrib/chat/browser/chat';\nimport { ChatEditorInput } from 'vs/workbench/contrib/chat/browser/chatEditorInput';\nimport { ChatViewPane } from 'vs/workbench/contrib/chat/browser/chatViewPane';\nimport { CONTEXT_IN_CHAT_SESSION, CONTEXT_PROVIDER_EXISTS } from 'vs/workbench/contrib/chat/common/chatContextKeys';\n\nexport const ACTION_ID_CLEAR_CHAT = `workbench.action.chat.clear`;\n\nexport function registerClearActions() {\n\n\tregisterAction2(class ClearEditorAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: 'workbench.action.chatEditor.clear',\n\t\t\t\ttitle: {\n\t\t\t\t\tvalue: localize('interactiveSession.clear.label', \"Clear\"),\n\t\t\t\t\toriginal: 'Clear'\n\t\t\t\t},\n\t\t\t\ticon: Codicon.clearAll,\n\t\t\t\tf1: false,\n\t\t\t\tmenu: [{\n\t\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\t\tgroup: 'navigation',\n\t\t\t\t\torder: 0,\n\t\t\t\t\twhen: ActiveEditorContext.isEqualTo(ChatEditorInput.EditorID),\n\t\t\t\t}]\n\t\t\t});\n\t\t}\n\t\tasync run(accessor: ServicesAccessor, ...args: any[]) {\n\t\t\tawait clearChatEditor(accessor);\n\t\t}\n\t});\n\n\n\tregisterAction2(class GlobalClearChatAction extends Action2 {\n\t\tconstructor() {\n\t\t\tsuper({\n\t\t\t\tid: ACTION_ID_CLEAR_CHAT,\n\t\t\t\ttitle: {\n\t\t\t\t\tvalue: localize('interactiveSession.clear.label', \"Clear\"),\n\t\t\t\t\toriginal: 'Clear'\n\t\t\t\t},\n\t\t\t\tcategory: CHAT_CATEGORY,\n\t\t\t\ticon: Codicon.clearAll,\n\t\t\t\tprecondition: CONTEXT_PROVIDER_EXISTS,\n\t\t\t\tf1: true,\n\t\t\t\tkeybinding: {\n\t\t\t\t\tweight: KeybindingWeight.WorkbenchContrib,\n\t\t\t\t\tprimary: KeyMod.CtrlCmd | KeyCode.KeyL,\n\t\t\t\t\tmac: {\n\t\t\t\t\t\tprimary: KeyMod.WinCtrl | KeyCode.KeyL\n\t\t\t\t\t},\n\t\t\t\t\twhen: CONTEXT_IN_CHAT_SESSION\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\trun(accessor: ServicesAccessor, ...args: any[]) {\n\t\t\tconst widgetService = accessor.get(IChatWidgetService);\n\n\t\t\tconst widget = widgetService.lastFocusedWidget;\n\t\t\tif (!widget) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\twidget.clear();\n\t\t}\n\t});\n}\n\nconst getClearChatActionDescriptorForViewTitle = (viewId: string, providerId: string): Readonly<IAction2Options> & { viewId: string } => ({\n\tviewId,\n\tid: `workbench.action.chat.${providerId}.clear`,\n\ttitle: {\n\t\tvalue: localize('interactiveSession.clear.label', \"Clear\"),\n\t\toriginal: 'Clear'\n\t},\n\tmenu: {\n\t\tid: MenuId.ViewTitle,\n\t\twhen: ContextKeyExpr.equals('view', viewId),\n\t\tgroup: 'navigation',\n\t\torder: 0\n\t},\n\tcategory: CHAT_CATEGORY,\n\ticon: Codicon.clearAll,\n\tf1: false\n});\n\nexport function getClearAction(viewId: string, providerId: string) {\n\treturn class ClearAction extends ViewAction<ChatViewPane> {\n\t\tconstructor() {\n\t\t\tsuper(getClearChatActionDescriptorForViewTitle(viewId, providerId));\n\t\t}\n\n\t\tasync runInView(accessor: ServicesAccessor, view: ChatViewPane) {\n\t\t\tawait view.clear();\n\t\t}\n\t};\n}\n"]}