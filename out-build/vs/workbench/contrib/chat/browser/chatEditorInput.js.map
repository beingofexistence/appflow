{"version":3,"sources":["vs/workbench/contrib/chat/browser/chatEditorInput.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;;IAgBzF,IAAM,IAAI,GAAV,MAAM,IAAgB,SAAQ,iBAAG;;iBACvB,gBAAW,GAAG,IAAI,GAAG,EAAV,AAAoB,CAAC;iBAEhC,WAAM,GAAW,6BAAX,AAAwC,CAAC;iBAC/C,aAAQ,GAAW,8BAAX,AAAyC,CAAC;QAQlE,MAAM,CAAC,eAAe;YACrB,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,GAAG,CAAC,CAAC;YAC/C,OAAO,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACjC,CAAC;QAED,MAAM,CAAC,YAAY;YAClB,IAAI,KAAK,GAAG,CAAC,CAAC;YACd,OAAO,MAAI,CAAY,WAAW,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;gBAC9C,KAAK,EAAE,CAAC;aACR;YAED,OAAO,KAAK,CAAC;QACd,CAAC;QAED,YACU,QAAa,EACb,OAA2B,EACL,CAAgB;YAE/C,KAAK,EAAE,CAAC;YAJC,aAAQ,GAAR,QAAQ,CAAK;YACb,YAAO,GAAP,OAAO,CAAoB;YACL,MAAC,GAAD,CAAC,CAAe;YAI/C,MAAM,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YACvC,IAAI,OAAO,MAAM,EAAE,MAAM,KAAK,QAAQ,EAAE;gBACvC,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC;aACpC;YAED,IAAI,CAAC,SAAS,GAAG,WAAW,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC;YACtF,IAAI,CAAC,UAAU,GAAG,YAAY,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC;YACzF,IAAI,CAAC,CAAC,GAAY,MAAI,CAAY,YAAY,EAAE,CAAC;YACjD,MAAI,CAAY,WAAW,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAU,CAAC;YACjD,IAAI,CAAC,CAAC,CAAS,IAAA,eAAG,EAAU,GAAG,EAAE,CAAC,MAAI,CAAY,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAU,CAAC,CAAC,CAAC;QACzF,CAAC;QAED,IAAa,QAAQ;YACpB,OAAO,MAAI,CAAY,QAAQ,CAAC;QACjC,CAAC;QAED,IAAa,YAAY;YACxB,OAAO,KAAK,CAAC,YAAY,4CAAoC,CAAC;QAC/D,CAAC;QAEQ,OAAO,CAAC,UAA6C;YAC7D,OAAO,UAAU,YAAY,MAAI,IAAe,UAAU,CAAC,QAAQ,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;QAC7G,CAAC;QAED,IAAa,MAAM;YAClB,OAAO,MAAI,CAAY,MAAM,CAAC;QAC/B,CAAC;QAEQ,OAAO;YACf,OAAO,IAAI,CAAC,CAAC,EAAM,KAAK,IAAI,GAAG,CAAC,QAAQ,CAAC,CAAgB,EAAE,IAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAY,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAY,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAC7H,CAAC;QAEQ,oBAAoB;YAC5B,OAAO,CAAC,mBAAmB,CAAC,CAAC;QAC9B,CAAC;QAEQ,KAAK,CAAC,OAAO;YACrB,IAAI,OAAO,IAAI,CAAC,SAAS,KAAK,QAAQ,EAAE;gBACvC,IAAI,CAAC,CAAC,GAAO,IAAI,CAAC,CAAC,CAAW,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aAClE;iBAAM,IAAI,OAAO,IAAI,CAAC,UAAU,KAAK,QAAQ,EAAE;gBAC/C,IAAI,CAAC,CAAC,GAAO,IAAI,CAAC,CAAC,CAAW,YAAY,CAAC,IAAI,CAAC,UAAU,EAAE,gCAAiB,CAAC,IAAI,CAAC,CAAC;aACpF;iBAAM,IAAI,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;gBACzC,IAAI,CAAC,CAAC,GAAO,IAAI,CAAC,CAAC,CAAW,sBAAsB,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aAC/E;YAED,IAAI,CAAC,IAAI,CAAC,CAAC,EAAM;gBAChB,OAAO,IAAI,CAAC;aACZ;YAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAK,SAAS,CAAC;YACtC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,CAAK,UAAU,CAAC;YACxC,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,CAAK,WAAW,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,CAAC,CAAiB,IAAI,EAAE,CAAC,CAAC,CAAC;YAE5E,OAAO,IAAI,CAAC,CAAC,CAAS,IAAI,IAAI,CAAY,IAAI,CAAC,CAAC,CAAK,CAAC,CAAC;QACxD,CAAC;QAEQ,OAAO;YACf,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,IAAI,IAAI,CAAC,SAAS,EAAE;gBACnB,IAAI,CAAC,CAAC,CAAW,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;aAC9C;QACF,CAAC;;IA9FW,oBAAI;mBAAJ,IAAI;QA6Bd,WAAA,iBAAG,CAAA;OA7BO,IAAI,CA+FhB;IAED,MAAa,IAAgB,SAAQ,eAAG;QAOvC,YACU,KAAiB;YACvB,KAAK,EAAE,CAAC;YADF,UAAK,GAAL,KAAK,CAAY;YAPnB,MAAC,GAAgB,IAAI,CAAC,CAAC,CAAS,IAAI,WAAG,EAAY,CAAC,CAAC;YACpD,kBAAa,GAAG,IAAI,CAAC,CAAC,CAAc,KAAK,CAAC;YAE3C,MAAC,GAAa,KAAK,CAAC;YACpB,MAAC,GAAa,KAAK,CAAC;QAIf,CAAC;QAEd,KAAK,CAAC,OAAO;YACZ,IAAI,CAAC,CAAC,GAAa,IAAI,CAAC;QACzB,CAAC;QAED,UAAU;YACT,OAAO,IAAI,CAAC,CAAC,CAAW;QACzB,CAAC;QAED,UAAU;YACT,OAAO,IAAI,CAAC,CAAC,CAAW;QACzB,CAAC;QAEQ,OAAO;YACf,KAAK,CAAC,OAAO,EAAE,CAAC;YAChB,IAAI,CAAC,CAAC,GAAa,IAAI,CAAC;QACzB,CAAC;KACD;IA3BD,oBA2BC;IAED,IAAiB,OAAO,CA2BvB;IA3BD,WAAiB,OAAO;QAEV,cAAM,GAAG,iBAAO,CAAC,kBAAkB,CAAC;QAGjD,SAAgB,QAAQ,CAAC,MAAc;YACtC,OAAO,SAAG,CAAC,IAAI,CAAC,EAAE,MAAM,EAAN,QAAA,MAAM,EAAE,IAAI,EAAE,QAAQ,MAAM,EAAE,EAAE,CAAC,CAAC;QACrD,CAAC;QAFe,gBAAQ,WAEvB,CAAA;QAED,SAAgB,KAAK,CAAC,QAAa;YAClC,IAAI,QAAQ,CAAC,MAAM,KAAK,QAAA,MAAM,EAAE;gBAC/B,OAAO,SAAS,CAAC;aACjB;YAED,MAAM,KAAK,GAAG,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;YAChD,MAAM,SAAS,GAAG,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;YAC7B,IAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;gBAClC,OAAO,SAAS,CAAC;aACjB;YAED,MAAM,MAAM,GAAG,QAAQ,CAAC,SAAS,CAAC,CAAC;YACnC,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE;gBAClB,OAAO,SAAS,CAAC;aACjB;YAED,OAAO,EAAE,MAAM,EAAE,CAAC;QACnB,CAAC;QAjBe,aAAK,QAiBpB,CAAA;IACF,CAAC,EA3BgB,OAAO,uBAAP,OAAO,QA2BvB;IAQD,MAAa,IAAI;QAChB,YAAY,CAAC,KAAU;YACtB,OAAO,KAAK,YAAY,IAAI,CAAY;QACzC,CAAC;QAED,SAAS,CAAC,KAAU;YACnB,IAAI,CAAC,CAAC,KAAK,YAAY,IAAI,CAAY,EAAE;gBACxC,OAAO,SAAS,CAAC;aACjB;YAED,IAAI,OAAO,KAAK,CAAC,SAAS,KAAK,QAAQ,EAAE;gBACxC,OAAO,SAAS,CAAC;aACjB;YAED,MAAM,GAAG,GAA+B;gBACvC,OAAO,EAAE,KAAK,CAAC,OAAO;gBACtB,SAAS,EAAE,KAAK,CAAC,SAAS;gBAC1B,QAAQ,EAAE,KAAK,CAAC,QAAQ;aACxB,CAAC;YACF,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QAC5B,CAAC;QAED,WAAW,CAAC,oBAAyB,EAAoB,gBAAwB;YAChF,IAAI;gBACH,MAAM,MAAM,GAA+B,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;gBACxE,MAAM,QAAQ,GAAG,SAAG,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBAC7C,OAAO,oBAAoB,CAAC,cAAc,CAAC,IAAI,EAAa,QAAQ,EAAE,EAAE,GAAG,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE,SAAS,EAAE,MAAM,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;aACtI;YAAC,OAAO,GAAG,EAAE;gBACb,OAAO,SAAS,CAAC;aACjB;QACF,CAAC;KACD;IA/BD,oBA+BC","file":"chatEditorInput.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable, toDisposable } from 'vs/base/common/lifecycle';\nimport { Schemas } from 'vs/base/common/network';\nimport { URI } from 'vs/base/common/uri';\nimport * as nls from 'vs/nls';\nimport { IEditorModel } from 'vs/platform/editor/common/editor';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { EditorInputCapabilities, IEditorSerializer, IUntypedEditorInput } from 'vs/workbench/common/editor';\nimport { EditorInput } from 'vs/workbench/common/editor/editorInput';\nimport type { IChatEditorOptions } from 'vs/workbench/contrib/chat/browser/chatEditor';\nimport { IChatModel } from 'vs/workbench/contrib/chat/common/chatModel';\nimport { IChatService } from 'vs/workbench/contrib/chat/common/chatService';\n\nexport class ChatEditorInput extends EditorInput {\n\tstatic readonly countsInUse = new Set<number>();\n\n\tstatic readonly TypeID: string = 'workbench.input.chatSession';\n\tstatic readonly EditorID: string = 'workbench.editor.chatSession';\n\n\tprivate readonly inputCount: number;\n\tpublic sessionId: string | undefined;\n\tpublic providerId: string | undefined;\n\n\tprivate model: IChatModel | undefined;\n\n\tstatic getNewEditorUri(): URI {\n\t\tconst handle = Math.floor(Math.random() * 1e9);\n\t\treturn ChatUri.generate(handle);\n\t}\n\n\tstatic getNextCount(): number {\n\t\tlet count = 0;\n\t\twhile (ChatEditorInput.countsInUse.has(count)) {\n\t\t\tcount++;\n\t\t}\n\n\t\treturn count;\n\t}\n\n\tconstructor(\n\t\treadonly resource: URI,\n\t\treadonly options: IChatEditorOptions,\n\t\t@IChatService private readonly chatService: IChatService\n\t) {\n\t\tsuper();\n\n\t\tconst parsed = ChatUri.parse(resource);\n\t\tif (typeof parsed?.handle !== 'number') {\n\t\t\tthrow new Error('Invalid chat URI');\n\t\t}\n\n\t\tthis.sessionId = 'sessionId' in options.target ? options.target.sessionId : undefined;\n\t\tthis.providerId = 'providerId' in options.target ? options.target.providerId : undefined;\n\t\tthis.inputCount = ChatEditorInput.getNextCount();\n\t\tChatEditorInput.countsInUse.add(this.inputCount);\n\t\tthis._register(toDisposable(() => ChatEditorInput.countsInUse.delete(this.inputCount)));\n\t}\n\n\toverride get editorId(): string | undefined {\n\t\treturn ChatEditorInput.EditorID;\n\t}\n\n\toverride get capabilities(): EditorInputCapabilities {\n\t\treturn super.capabilities | EditorInputCapabilities.Singleton;\n\t}\n\n\toverride matches(otherInput: EditorInput | IUntypedEditorInput): boolean {\n\t\treturn otherInput instanceof ChatEditorInput && otherInput.resource.toString() === this.resource.toString();\n\t}\n\n\toverride get typeId(): string {\n\t\treturn ChatEditorInput.TypeID;\n\t}\n\n\toverride getName(): string {\n\t\treturn this.model?.title || nls.localize('chatEditorName', \"Chat\") + (this.inputCount > 0 ? ` ${this.inputCount + 1}` : '');\n\t}\n\n\toverride getLabelExtraClasses(): string[] {\n\t\treturn ['chat-editor-label'];\n\t}\n\n\toverride async resolve(): Promise<ChatEditorModel | null> {\n\t\tif (typeof this.sessionId === 'string') {\n\t\t\tthis.model = this.chatService.getOrRestoreSession(this.sessionId);\n\t\t} else if (typeof this.providerId === 'string') {\n\t\t\tthis.model = this.chatService.startSession(this.providerId, CancellationToken.None);\n\t\t} else if ('data' in this.options.target) {\n\t\t\tthis.model = this.chatService.loadSessionFromContent(this.options.target.data);\n\t\t}\n\n\t\tif (!this.model) {\n\t\t\treturn null;\n\t\t}\n\n\t\tthis.sessionId = this.model.sessionId;\n\t\tthis.providerId = this.model.providerId;\n\t\tthis._register(this.model.onDidChange(() => this._onDidChangeLabel.fire()));\n\n\t\treturn this._register(new ChatEditorModel(this.model));\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tif (this.sessionId) {\n\t\t\tthis.chatService.clearSession(this.sessionId);\n\t\t}\n\t}\n}\n\nexport class ChatEditorModel extends Disposable implements IEditorModel {\n\tprivate _onWillDispose = this._register(new Emitter<void>());\n\treadonly onWillDispose = this._onWillDispose.event;\n\n\tprivate _isDisposed = false;\n\tprivate _isResolved = false;\n\n\tconstructor(\n\t\treadonly model: IChatModel\n\t) { super(); }\n\n\tasync resolve(): Promise<void> {\n\t\tthis._isResolved = true;\n\t}\n\n\tisResolved(): boolean {\n\t\treturn this._isResolved;\n\t}\n\n\tisDisposed(): boolean {\n\t\treturn this._isDisposed;\n\t}\n\n\toverride dispose(): void {\n\t\tsuper.dispose();\n\t\tthis._isDisposed = true;\n\t}\n}\n\nexport namespace ChatUri {\n\n\texport const scheme = Schemas.vscodeChatSesssion;\n\n\n\texport function generate(handle: number): URI {\n\t\treturn URI.from({ scheme, path: `chat-${handle}` });\n\t}\n\n\texport function parse(resource: URI): { handle: number } | undefined {\n\t\tif (resource.scheme !== scheme) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst match = resource.path.match(/chat-(\\d+)/);\n\t\tconst handleStr = match?.[1];\n\t\tif (typeof handleStr !== 'string') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst handle = parseInt(handleStr);\n\t\tif (isNaN(handle)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\treturn { handle };\n\t}\n}\n\ninterface ISerializedChatEditorInput {\n\toptions: IChatEditorOptions;\n\tsessionId: string;\n\tresource: URI;\n}\n\nexport class ChatEditorInputSerializer implements IEditorSerializer {\n\tcanSerialize(input: EditorInput): boolean {\n\t\treturn input instanceof ChatEditorInput;\n\t}\n\n\tserialize(input: EditorInput): string | undefined {\n\t\tif (!(input instanceof ChatEditorInput)) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tif (typeof input.sessionId !== 'string') {\n\t\t\treturn undefined;\n\t\t}\n\n\t\tconst obj: ISerializedChatEditorInput = {\n\t\t\toptions: input.options,\n\t\t\tsessionId: input.sessionId,\n\t\t\tresource: input.resource\n\t\t};\n\t\treturn JSON.stringify(obj);\n\t}\n\n\tdeserialize(instantiationService: IInstantiationService, serializedEditor: string): EditorInput | undefined {\n\t\ttry {\n\t\t\tconst parsed: ISerializedChatEditorInput = JSON.parse(serializedEditor);\n\t\t\tconst resource = URI.revive(parsed.resource);\n\t\t\treturn instantiationService.createInstance(ChatEditorInput, resource, { ...parsed.options, target: { sessionId: parsed.sessionId } });\n\t\t} catch (err) {\n\t\t\treturn undefined;\n\t\t}\n\t}\n}\n"]}