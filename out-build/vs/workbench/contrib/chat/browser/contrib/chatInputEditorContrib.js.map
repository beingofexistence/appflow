{"version":3,"sources":["vs/workbench/contrib/chat/browser/contrib/chatInputEditorContrib.ts"],"names":[],"mappings":"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","file":"chatInputEditorContrib.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { Iterable } from 'vs/base/common/iterator';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { ICodeEditorService } from 'vs/editor/browser/services/codeEditorService';\nimport { Position } from 'vs/editor/common/core/position';\nimport { Range } from 'vs/editor/common/core/range';\nimport { getWordAtText } from 'vs/editor/common/core/wordHelper';\nimport { IDecorationOptions } from 'vs/editor/common/editorCommon';\nimport { CompletionContext, CompletionItem, CompletionItemKind, CompletionList } from 'vs/editor/common/languages';\nimport { ITextModel } from 'vs/editor/common/model';\nimport { ILanguageFeaturesService } from 'vs/editor/common/services/languageFeatures';\nimport { localize } from 'vs/nls';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { inputPlaceholderForeground } from 'vs/platform/theme/common/colorRegistry';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { IWorkbenchContributionsRegistry, Extensions as WorkbenchExtensions } from 'vs/workbench/common/contributions';\nimport { SubmitAction } from 'vs/workbench/contrib/chat/browser/actions/chatExecuteActions';\nimport { IChatWidget, IChatWidgetService } from 'vs/workbench/contrib/chat/browser/chat';\nimport { ChatInputPart } from 'vs/workbench/contrib/chat/browser/chatInputPart';\nimport { ChatWidget } from 'vs/workbench/contrib/chat/browser/chatWidget';\nimport { IChatAgentService } from 'vs/workbench/contrib/chat/common/chatAgents';\nimport { chatSlashCommandBackground, chatSlashCommandForeground } from 'vs/workbench/contrib/chat/common/chatColors';\nimport { IChatService, ISlashCommand } from 'vs/workbench/contrib/chat/common/chatService';\nimport { IChatVariablesService } from 'vs/workbench/contrib/chat/common/chatVariables';\nimport { isResponseVM } from 'vs/workbench/contrib/chat/common/chatViewModel';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\n\nconst decorationDescription = 'chat';\nconst placeholderDecorationType = 'chat-session-detail';\nconst slashCommandTextDecorationType = 'chat-session-text';\nconst variableTextDecorationType = 'chat-variable-text';\n\nclass InputEditorDecorations extends Disposable {\n\n\tprivate _previouslyUsedSlashCommands = new Set<string>();\n\n\tconstructor(\n\t\tprivate readonly widget: IChatWidget,\n\t\t@ICodeEditorService private readonly codeEditorService: ICodeEditorService,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@IChatService private readonly chatService: IChatService,\n\t\t@IChatVariablesService private readonly chatVariablesService: IChatVariablesService,\n\t\t@IChatAgentService private readonly chatAgentService: IChatAgentService\n\t) {\n\t\tsuper();\n\n\t\tthis.codeEditorService.registerDecorationType(decorationDescription, placeholderDecorationType, {});\n\n\t\tthis._register(this.themeService.onDidColorThemeChange(() => this.updateRegisteredDecorationTypes()));\n\t\tthis.updateRegisteredDecorationTypes();\n\n\t\tthis.updateInputEditorDecorations();\n\t\tthis._register(this.widget.inputEditor.onDidChangeModelContent(() => this.updateInputEditorDecorations()));\n\t\tthis._register(this.widget.onDidChangeViewModel(() => {\n\t\t\tthis._previouslyUsedSlashCommands.clear();\n\t\t\tthis.updateInputEditorDecorations();\n\t\t}));\n\t\tthis._register(this.chatService.onDidSubmitSlashCommand((e) => {\n\t\t\tif (e.sessionId === this.widget.viewModel?.sessionId && !this._previouslyUsedSlashCommands.has(e.slashCommand)) {\n\t\t\t\tthis._previouslyUsedSlashCommands.add(e.slashCommand);\n\t\t\t}\n\t\t}));\n\t}\n\n\tprivate updateRegisteredDecorationTypes() {\n\t\tthis.codeEditorService.removeDecorationType(variableTextDecorationType);\n\t\tthis.codeEditorService.removeDecorationType(slashCommandTextDecorationType);\n\n\t\tconst theme = this.themeService.getColorTheme();\n\t\tthis.codeEditorService.registerDecorationType(decorationDescription, slashCommandTextDecorationType, {\n\t\t\tcolor: theme.getColor(chatSlashCommandForeground)?.toString(),\n\t\t\tbackgroundColor: theme.getColor(chatSlashCommandBackground)?.toString()\n\t\t});\n\t\tthis.codeEditorService.registerDecorationType(decorationDescription, variableTextDecorationType, {\n\t\t\tcolor: theme.getColor(chatSlashCommandForeground)?.toString(),\n\t\t\tbackgroundColor: theme.getColor(chatSlashCommandBackground)?.toString(),\n\t\t\tborderRadius: '3px'\n\t\t});\n\t\tthis.updateInputEditorDecorations();\n\t}\n\n\tprivate getPlaceholderColor(): string | undefined {\n\t\tconst theme = this.themeService.getColorTheme();\n\t\tconst transparentForeground = theme.getColor(inputPlaceholderForeground);\n\t\treturn transparentForeground?.toString();\n\t}\n\n\tprivate async updateInputEditorDecorations() {\n\t\tconst inputValue = this.widget.inputEditor.getValue();\n\t\tconst slashCommands = await this.widget.getSlashCommands(); // TODO this async call can lead to a flicker of the placeholder text when switching editor tabs\n\t\tconst agents = this.chatAgentService.getAgents();\n\n\t\tif (!inputValue) {\n\t\t\tconst extensionPlaceholder = this.widget.viewModel?.inputPlaceholder;\n\t\t\tconst defaultPlaceholder = slashCommands?.length ?\n\t\t\t\tlocalize('interactive.input.placeholderWithCommands', \"Ask a question or type '@' or '/'\") :\n\t\t\t\tlocalize('interactive.input.placeholderNoCommands', \"Ask a question\");\n\t\t\tconst placeholder = extensionPlaceholder ?? defaultPlaceholder;\n\t\t\tconst decoration: IDecorationOptions[] = [\n\t\t\t\t{\n\t\t\t\t\trange: {\n\t\t\t\t\t\tstartLineNumber: 1,\n\t\t\t\t\t\tendLineNumber: 1,\n\t\t\t\t\t\tstartColumn: 1,\n\t\t\t\t\t\tendColumn: 1000\n\t\t\t\t\t},\n\t\t\t\t\trenderOptions: {\n\t\t\t\t\t\tafter: {\n\t\t\t\t\t\t\tcontentText: placeholder,\n\t\t\t\t\t\t\tcolor: this.getPlaceholderColor()\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t];\n\t\t\tthis.widget.inputEditor.setDecorationsByType(decorationDescription, placeholderDecorationType, decoration);\n\t\t\treturn;\n\t\t}\n\n\t\t// TODO@roblourens need some kind of parser for queries\n\n\t\tlet placeholderDecoration: IDecorationOptions[] | undefined;\n\t\tconst usedAgent = inputValue && agents.find(a => inputValue.startsWith(`@${a.id} `));\n\n\t\tlet usedSubcommand: string | undefined;\n\t\tlet subCommandPosition: number | undefined;\n\t\tif (usedAgent) {\n\t\t\tconst subCommandReg = /\\/(\\w+)(\\s|$)/g;\n\t\t\tlet subCommandMatch: RegExpExecArray | null;\n\t\t\twhile (subCommandMatch = subCommandReg.exec(inputValue)) {\n\t\t\t\tconst maybeCommand = subCommandMatch[1];\n\t\t\t\tusedSubcommand = usedAgent.metadata.subCommands.find(agentCommand => maybeCommand === agentCommand.name)?.name;\n\t\t\t\tif (usedSubcommand) {\n\t\t\t\t\tsubCommandPosition = subCommandMatch.index;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (usedAgent && inputValue === `@${usedAgent.id} `) {\n\t\t\t// Agent reference with no other text - show the placeholder\n\t\t\tif (usedAgent.metadata.description) {\n\t\t\t\tplaceholderDecoration = [{\n\t\t\t\t\trange: {\n\t\t\t\t\t\tstartLineNumber: 1,\n\t\t\t\t\t\tendLineNumber: 1,\n\t\t\t\t\t\tstartColumn: usedAgent.id.length,\n\t\t\t\t\t\tendColumn: 1000\n\t\t\t\t\t},\n\t\t\t\t\trenderOptions: {\n\t\t\t\t\t\tafter: {\n\t\t\t\t\t\t\tcontentText: usedAgent.metadata.description,\n\t\t\t\t\t\t\tcolor: this.getPlaceholderColor(),\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}];\n\t\t\t}\n\t\t}\n\n\t\tconst command = !usedAgent && inputValue && slashCommands?.find(c => inputValue.startsWith(`/${c.command} `));\n\t\tif (command && inputValue === `/${command.command} `) {\n\t\t\t// Command reference with no other text - show the placeholder\n\t\t\tconst isFollowupSlashCommand = this._previouslyUsedSlashCommands.has(command.command);\n\t\t\tconst shouldRenderFollowupPlaceholder = command.followupPlaceholder && isFollowupSlashCommand;\n\t\t\tif (shouldRenderFollowupPlaceholder || command.detail) {\n\t\t\t\tplaceholderDecoration = [{\n\t\t\t\t\trange: {\n\t\t\t\t\t\tstartLineNumber: 1,\n\t\t\t\t\t\tendLineNumber: 1,\n\t\t\t\t\t\tstartColumn: command ? command.command.length : 1,\n\t\t\t\t\t\tendColumn: 1000\n\t\t\t\t\t},\n\t\t\t\t\trenderOptions: {\n\t\t\t\t\t\tafter: {\n\t\t\t\t\t\t\tcontentText: shouldRenderFollowupPlaceholder ? command.followupPlaceholder : command.detail,\n\t\t\t\t\t\t\tcolor: this.getPlaceholderColor(),\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}];\n\t\t\t}\n\t\t}\n\n\t\tthis.widget.inputEditor.setDecorationsByType(decorationDescription, placeholderDecorationType, placeholderDecoration ?? []);\n\n\t\t// TODO@roblourens The way these numbers are computed aren't totally correct...\n\t\tconst textDecorations: IDecorationOptions[] | undefined = [];\n\t\tif (usedAgent) {\n\t\t\ttextDecorations.push(\n\t\t\t\t{\n\t\t\t\t\trange: {\n\t\t\t\t\t\tstartLineNumber: 1,\n\t\t\t\t\t\tendLineNumber: 1,\n\t\t\t\t\t\tstartColumn: 1,\n\t\t\t\t\t\tendColumn: usedAgent.id.length + 2\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\tif (usedSubcommand) {\n\t\t\t\ttextDecorations.push(\n\t\t\t\t\t{\n\t\t\t\t\t\trange: {\n\t\t\t\t\t\t\tstartLineNumber: 1,\n\t\t\t\t\t\t\tendLineNumber: 1,\n\t\t\t\t\t\t\tstartColumn: subCommandPosition! + 1,\n\t\t\t\t\t\t\tendColumn: subCommandPosition! + usedSubcommand.length + 2\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\tif (command) {\n\t\t\ttextDecorations.push(\n\t\t\t\t{\n\t\t\t\t\trange: {\n\t\t\t\t\t\tstartLineNumber: 1,\n\t\t\t\t\t\tendLineNumber: 1,\n\t\t\t\t\t\tstartColumn: 1,\n\t\t\t\t\t\tendColumn: command.command.length + 2\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tthis.widget.inputEditor.setDecorationsByType(decorationDescription, slashCommandTextDecorationType, textDecorations);\n\n\t\tconst variables = this.chatVariablesService.getVariables();\n\t\tconst variableReg = /(^|\\s)@(\\w+)(:\\d+)?(?=(\\s|$))/ig;\n\t\tlet match: RegExpMatchArray | null;\n\t\tconst varDecorations: IDecorationOptions[] = [];\n\t\twhile (match = variableReg.exec(inputValue)) {\n\t\t\tconst varName = match[2];\n\t\t\tif (Iterable.find(variables, v => v.name === varName)) {\n\t\t\t\tvarDecorations.push({\n\t\t\t\t\trange: {\n\t\t\t\t\t\tstartLineNumber: 1,\n\t\t\t\t\t\tendLineNumber: 1,\n\t\t\t\t\t\tstartColumn: match.index! + match[1].length + 1,\n\t\t\t\t\t\tendColumn: match.index! + match[0].length + 1\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tthis.widget.inputEditor.setDecorationsByType(decorationDescription, variableTextDecorationType, varDecorations);\n\t}\n}\n\nclass InputEditorSlashCommandMode extends Disposable {\n\tconstructor(\n\t\tprivate readonly widget: IChatWidget,\n\t\t@IChatService private readonly chatService: IChatService\n\t) {\n\t\tsuper();\n\t\tthis._register(this.chatService.onDidSubmitSlashCommand(({ slashCommand, sessionId }) => this.repopulateSlashCommand(slashCommand, sessionId)));\n\t}\n\n\tprivate async repopulateSlashCommand(slashCommand: string, sessionId: string) {\n\t\tif (this.widget.viewModel?.sessionId !== sessionId) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst slashCommands = await this.widget.getSlashCommands();\n\n\t\tif (this.widget.inputEditor.getValue().trim().length !== 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (slashCommands?.find(c => c.command === slashCommand)?.shouldRepopulate) {\n\t\t\tconst value = `/${slashCommand} `;\n\t\t\tthis.widget.inputEditor.setValue(value);\n\t\t\tthis.widget.inputEditor.setPosition({ lineNumber: 1, column: value.length + 1 });\n\n\t\t}\n\t}\n}\n\nChatWidget.CONTRIBS.push(InputEditorDecorations, InputEditorSlashCommandMode);\n\nclass SlashCommandCompletions extends Disposable {\n\tconstructor(\n\t\t@ILanguageFeaturesService private readonly languageFeaturesService: ILanguageFeaturesService,\n\t\t@IChatWidgetService private readonly chatWidgetService: IChatWidgetService,\n\t\t@IChatAgentService private readonly chatAgentService: IChatAgentService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(this.languageFeaturesService.completionProvider.register({ scheme: ChatInputPart.INPUT_SCHEME, hasAccessToAllModels: true }, {\n\t\t\t_debugDisplayName: 'chatSlashCommand',\n\t\t\ttriggerCharacters: ['/'],\n\t\t\tprovideCompletionItems: async (model: ITextModel, _position: Position, _context: CompletionContext, _token: CancellationToken) => {\n\t\t\t\tconst widget = this.chatWidgetService.getWidgetByInputUri(model.uri);\n\t\t\t\tif (!widget) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst firstLine = model.getLineContent(1).trim();\n\n\t\t\t\tconst agents = this.chatAgentService.getAgents();\n\t\t\t\tconst usedAgent = firstLine.startsWith('@') && agents.find(a => firstLine.startsWith(`@${a.id}`));\n\t\t\t\tif (usedAgent) {\n\t\t\t\t\t// No (classic) global slash commands when an agent is used\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (model.getValueInRange(new Range(1, 1, 1, 2)) !== '/' && model.getValueLength() > 0) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst slashCommands = await widget.getSlashCommands();\n\t\t\t\tif (!slashCommands) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn <CompletionList>{\n\t\t\t\t\tsuggestions: sortSlashCommandsByYieldTo<ISlashCommand>(slashCommands).map((c, i) => {\n\t\t\t\t\t\tconst withSlash = `/${c.command}`;\n\t\t\t\t\t\treturn <CompletionItem>{\n\t\t\t\t\t\t\tlabel: withSlash,\n\t\t\t\t\t\t\tinsertText: c.executeImmediately ? '' : `${withSlash} `,\n\t\t\t\t\t\t\tdetail: c.detail,\n\t\t\t\t\t\t\trange: new Range(1, 1, 1, 1),\n\t\t\t\t\t\t\tsortText: c.sortText ?? 'a'.repeat(i + 1),\n\t\t\t\t\t\t\tkind: CompletionItemKind.Text, // The icons are disabled here anyway,\n\t\t\t\t\t\t\tcommand: c.executeImmediately ? { id: SubmitAction.ID, title: withSlash, arguments: [{ widget, inputValue: `${withSlash} ` }] } : undefined,\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(SlashCommandCompletions, LifecyclePhase.Eventually);\n\nclass AgentCompletions extends Disposable {\n\tconstructor(\n\t\t@ILanguageFeaturesService private readonly languageFeaturesService: ILanguageFeaturesService,\n\t\t@IChatWidgetService private readonly chatWidgetService: IChatWidgetService,\n\t\t@IChatAgentService private readonly chatAgentService: IChatAgentService\n\t) {\n\t\tsuper();\n\n\t\tthis._register(this.languageFeaturesService.completionProvider.register({ scheme: ChatInputPart.INPUT_SCHEME, hasAccessToAllModels: true }, {\n\t\t\t_debugDisplayName: 'chatAgent',\n\t\t\ttriggerCharacters: ['@'],\n\t\t\tprovideCompletionItems: async (model: ITextModel, _position: Position, _context: CompletionContext, _token: CancellationToken) => {\n\t\t\t\tconst widget = this.chatWidgetService.getWidgetByInputUri(model.uri);\n\t\t\t\tif (!widget) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tif (model.getValueInRange(new Range(1, 1, 1, 2)) !== '@' && model.getValueLength() > 0) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst agents = this.chatAgentService.getAgents();\n\t\t\t\treturn <CompletionList>{\n\t\t\t\t\tsuggestions: agents.map((c, i) => {\n\t\t\t\t\t\tconst withAt = `@${c.id}`;\n\t\t\t\t\t\treturn <CompletionItem>{\n\t\t\t\t\t\t\tlabel: withAt,\n\t\t\t\t\t\t\tinsertText: `${withAt} `,\n\t\t\t\t\t\t\tdetail: c.metadata.description,\n\t\t\t\t\t\t\trange: new Range(1, 1, 1, 1),\n\t\t\t\t\t\t\t// sortText: 'a'.repeat(i + 1),\n\t\t\t\t\t\t\tkind: CompletionItemKind.Text, // The icons are disabled here anyway\n\t\t\t\t\t\t\t// command: c.executeImmediately ? { id: SubmitAction.ID, title: withAt, arguments: [{ widget, inputValue: `${withAt} ` }] } : undefined,\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\n\t\tthis._register(this.languageFeaturesService.completionProvider.register({ scheme: ChatInputPart.INPUT_SCHEME, hasAccessToAllModels: true }, {\n\t\t\t_debugDisplayName: 'chatAgentSubcommand',\n\t\t\ttriggerCharacters: ['/'],\n\t\t\tprovideCompletionItems: async (model: ITextModel, position: Position, _context: CompletionContext, _token: CancellationToken) => {\n\t\t\t\tconst widget = this.chatWidgetService.getWidgetByInputUri(model.uri);\n\t\t\t\tif (!widget) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst firstLine = model.getLineContent(1).trim();\n\n\t\t\t\tif (!firstLine.startsWith('@')) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst agents = this.chatAgentService.getAgents();\n\t\t\t\tconst usedAgent = agents.find(a => firstLine.startsWith(`@${a.id}`));\n\t\t\t\tif (!usedAgent) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst maybeCommands = model.getValue().split(/\\s+/).filter(w => w.startsWith('/'));\n\t\t\t\tconst usedSubcommand = usedAgent.metadata.subCommands.find(agentCommand => maybeCommands.some(c => c === `/${agentCommand.name}`));\n\t\t\t\tif (usedSubcommand) {\n\t\t\t\t\t// Only one allowed\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\treturn <CompletionList>{\n\t\t\t\t\tsuggestions: usedAgent.metadata.subCommands.map((c, i) => {\n\t\t\t\t\t\tconst withSlash = `/${c.name}`;\n\t\t\t\t\t\treturn <CompletionItem>{\n\t\t\t\t\t\t\tlabel: withSlash,\n\t\t\t\t\t\t\tinsertText: `${withSlash} `,\n\t\t\t\t\t\t\tdetail: c.description,\n\t\t\t\t\t\t\trange: new Range(1, position.column - 1, 1, position.column - 1),\n\t\t\t\t\t\t\t// sortText: 'a'.repeat(i + 1),\n\t\t\t\t\t\t\tkind: CompletionItemKind.Text, // The icons are disabled here anyway\n\t\t\t\t\t\t\t// command: c.executeImmediately ? { id: SubmitAction.ID, title: withAt, arguments: [{ widget, inputValue: `${withAt} ` }] } : undefined,\n\t\t\t\t\t\t};\n\t\t\t\t\t})\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\n\t\t// list subcommands when the query is empty, insert agent+subcommand\n\t\tthis._register(this.languageFeaturesService.completionProvider.register({ scheme: ChatInputPart.INPUT_SCHEME, hasAccessToAllModels: true }, {\n\t\t\t_debugDisplayName: 'chatAgentAndSubcommand',\n\t\t\ttriggerCharacters: ['/'],\n\t\t\tprovideCompletionItems: async (model: ITextModel, position: Position, _context: CompletionContext, _token: CancellationToken) => {\n\t\t\t\tconst widget = this.chatWidgetService.getWidgetByInputUri(model.uri);\n\t\t\t\tif (!widget) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (model.getValue().trim() !== '/') {\n\t\t\t\t\t// Only when the input only contains a slash\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst agents = this.chatAgentService.getAgents();\n\t\t\t\treturn <CompletionList>{\n\t\t\t\t\tsuggestions: agents.flatMap(a => a.metadata.subCommands.map((c, i) => {\n\t\t\t\t\t\tconst withSlash = `/${c.name}`;\n\t\t\t\t\t\treturn <CompletionItem>{\n\t\t\t\t\t\t\tlabel: withSlash,\n\t\t\t\t\t\t\tinsertText: `@${a.id} ${withSlash} `,\n\t\t\t\t\t\t\tdetail: `(@${a.id}) ${c.description}`,\n\t\t\t\t\t\t\trange: new Range(1, 1, 1, 1),\n\t\t\t\t\t\t\tkind: CompletionItemKind.Text, // The icons are disabled here anyway\n\t\t\t\t\t\t};\n\t\t\t\t\t}))\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\t}\n}\n\ninterface SlashCommandYieldTo {\n\tcommand: string;\n}\n\n// Adapted from https://github.com/microsoft/vscode/blob/ca2c1636f87ea4705f32345c2e348e815996e129/src/vs/editor/contrib/dropOrPasteInto/browser/edit.ts#L31-L99\nfunction sortSlashCommandsByYieldTo<T extends {\n\treadonly command: string;\n\treadonly yieldsTo?: ReadonlyArray<SlashCommandYieldTo>;\n}>(slashCommands: readonly T[]): T[] {\n\tfunction yieldsTo(yTo: SlashCommandYieldTo, other: T): boolean {\n\t\treturn 'command' in yTo && other.command === yTo.command;\n\t}\n\n\t// Build list of nodes each node yields to\n\tconst yieldsToMap = new Map<T, T[]>();\n\tfor (const slashCommand of slashCommands) {\n\t\tfor (const yTo of slashCommand.yieldsTo ?? []) {\n\t\t\tfor (const other of slashCommands) {\n\t\t\t\tif (other.command === slashCommand.command) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (yieldsTo(yTo, other)) {\n\t\t\t\t\tlet arr = yieldsToMap.get(slashCommand);\n\t\t\t\t\tif (!arr) {\n\t\t\t\t\t\tarr = [];\n\t\t\t\t\t\tyieldsToMap.set(slashCommand, arr);\n\t\t\t\t\t}\n\t\t\t\t\tarr.push(other);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!yieldsToMap.size) {\n\t\treturn Array.from(slashCommands);\n\t}\n\n\t// Topological sort\n\tconst visited = new Set<T>();\n\tconst tempStack: T[] = [];\n\n\tfunction visit(nodes: T[]): T[] {\n\t\tif (!nodes.length) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst node = nodes[0];\n\t\tif (tempStack.includes(node)) {\n\t\t\tconsole.warn(`Yield to cycle detected for ${node.command}`);\n\t\t\treturn nodes;\n\t\t}\n\n\t\tif (visited.has(node)) {\n\t\t\treturn visit(nodes.slice(1));\n\t\t}\n\n\t\tlet pre: T[] = [];\n\t\tconst yTo = yieldsToMap.get(node);\n\t\tif (yTo) {\n\t\t\ttempStack.push(node);\n\t\t\tpre = visit(yTo);\n\t\t\ttempStack.pop();\n\t\t}\n\n\t\tvisited.add(node);\n\n\t\treturn [...pre, node, ...visit(nodes.slice(1))];\n\t}\n\n\treturn visit(Array.from(slashCommands));\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(AgentCompletions, LifecyclePhase.Eventually);\n\nclass VariableCompletions extends Disposable {\n\n\tprivate static readonly VariableNameDef = /@\\w*/g; // MUST be using `g`-flag\n\n\tconstructor(\n\t\t@ILanguageFeaturesService private readonly languageFeaturesService: ILanguageFeaturesService,\n\t\t@IChatWidgetService private readonly chatWidgetService: IChatWidgetService,\n\t\t@IChatVariablesService private readonly chatVariablesService: IChatVariablesService,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t) {\n\t\tsuper();\n\n\t\tthis._register(this.languageFeaturesService.completionProvider.register({ scheme: ChatInputPart.INPUT_SCHEME, hasAccessToAllModels: true }, {\n\t\t\t_debugDisplayName: 'chatVariables',\n\t\t\ttriggerCharacters: ['@'],\n\t\t\tprovideCompletionItems: async (model: ITextModel, position: Position, _context: CompletionContext, _token: CancellationToken) => {\n\n\t\t\t\tconst widget = this.chatWidgetService.getWidgetByInputUri(model.uri);\n\t\t\t\tif (!widget) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tconst varWord = getWordAtText(position.column, VariableCompletions.VariableNameDef, model.getLineContent(position.lineNumber), 0);\n\t\t\t\tif (!varWord && model.getWordUntilPosition(position).word) {\n\t\t\t\t\t// inside a \"normal\" word\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\tlet insert: Range;\n\t\t\t\tlet replace: Range;\n\t\t\t\tif (!varWord) {\n\t\t\t\t\tinsert = replace = Range.fromPositions(position);\n\t\t\t\t} else {\n\t\t\t\t\tinsert = new Range(position.lineNumber, varWord.startColumn, position.lineNumber, position.column);\n\t\t\t\t\treplace = new Range(position.lineNumber, varWord.startColumn, position.lineNumber, varWord.endColumn);\n\t\t\t\t}\n\n\t\t\t\tconst history = widget.viewModel!.getItems()\n\t\t\t\t\t.filter(isResponseVM);\n\n\t\t\t\t// TODO@roblourens work out a real API for this- maybe it can be part of the two-step flow that @file will probably use\n\t\t\t\tconst historyVariablesEnabled = this.configurationService.getValue('chat.experimental.historyVariables');\n\t\t\t\tconst historyItems = historyVariablesEnabled ? history.map((h, i): CompletionItem => ({\n\t\t\t\t\tlabel: `@response:${i + 1}`,\n\t\t\t\t\tdetail: h.response.asString(),\n\t\t\t\t\tinsertText: `@response:${String(i + 1).padStart(String(history.length).length, '0')} `,\n\t\t\t\t\tkind: CompletionItemKind.Text,\n\t\t\t\t\trange: { insert, replace },\n\t\t\t\t})) : [];\n\n\t\t\t\tconst variableItems = Array.from(this.chatVariablesService.getVariables()).map(v => {\n\t\t\t\t\tconst withAt = `@${v.name}`;\n\t\t\t\t\treturn <CompletionItem>{\n\t\t\t\t\t\tlabel: withAt,\n\t\t\t\t\t\trange: { insert, replace },\n\t\t\t\t\t\tinsertText: withAt + ' ',\n\t\t\t\t\t\tdetail: v.description,\n\t\t\t\t\t\tkind: CompletionItemKind.Text, // The icons are disabled here anyway,\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\treturn <CompletionList>{\n\t\t\t\t\tsuggestions: [...variableItems, ...historyItems]\n\t\t\t\t};\n\t\t\t}\n\t\t}));\n\t}\n}\n\nRegistry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench).registerWorkbenchContribution(VariableCompletions, LifecyclePhase.Eventually);\n"]}