{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/chat/browser/chatAccessibilityService.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;;;;;;;;;;IAShG,MAAM,uCAAuC,GAAG,IAAI,CAAC;IACrD,MAAM,kCAAkC,GAAG,IAAI,CAAC;IACzC,IAAM,IAAI,GAAV,MAAM,IAAyB,SAAQ,eAAG;QAShD,YAA8B,CAAsC;YACnE,KAAK,EAAE,CAAC;YADsC,MAAC,GAAD,CAAC,CAAoB;YAJ5D,MAAC,GAA8B,KAAK,CAAC;YAM5C,IAAI,CAAC,CAAC,CAAS,IAAI,CAAC,CAAC,GAAmB,IAAI,WAAG,CAAc,GAAG,EAAE;gBACjE,IAAI,CAAC,IAAI,CAAC,CAAC,EAAoB;oBAC9B,IAAI,CAAC,CAAC,GAA0B,IAAI,CAAC,CAAC,CAAgB,gBAAgB,CAAC,qBAAG,CAAM,mBAAmB,EAAE,uCAAuC,CAAC,CAAC;iBAC9I;YACF,CAAC,EAAE,kCAAkC,CAAC,CAAC,CAAC;QACzC,CAAC;QACD,aAAa;YACZ,IAAI,CAAC,CAAC,CAAgB,YAAY,CAAC,qBAAG,CAAM,eAAe,EAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC;YAC5F,IAAI,CAAC,CAAC,CAAiB,QAAQ,EAAE,CAAC;QACnC,CAAC;QACD,cAAc,CAAC,QAA0C;YACxD,IAAI,CAAC,CAAC,GAAqB,IAAI,CAAC;YAChC,MAAM,WAAW,GAAG,OAAO,QAAQ,KAAK,QAAQ,CAAC;YACjD,IAAI,CAAC,CAAC,EAAyB,OAAO,EAAE,CAAC;YACzC,IAAI,CAAC,CAAC,EAAkB,MAAM,EAAE,CAAC;YACjC,MAAM,eAAe,GAAG,OAAO,QAAQ,KAAK,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,QAAQ,EAAE,CAAC;YAChG,IAAI,IAAI,CAAC,CAAC,KAAiB,eAAe,EAAE;gBAC3C,OAAO;aACP;YACD,IAAI,CAAC,CAAC,CAAgB,YAAY,CAAC,qBAAG,CAAM,oBAAoB,EAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC;YACjG,IAAI,CAAC,CAAC,GAAqB,KAAK,CAAC;YACjC,IAAI,CAAC,QAAQ,EAAE;gBACd,OAAO;aACP;YACD,MAAM,YAAY,GAAG,WAAW,IAAI,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,QAAQ,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;YACrG,IAAI,CAAC,CAAC,GAAe,eAAe,CAAC;YACrC,IAAA,UAAG,EAAI,eAAe,GAAG,YAAY,CAAC,CAAC;QACxC,CAAC;KACD,CAAA;IAvCY,oBAAI;mBAAJ,IAAI;QASH,WAAA,qBAAG,CAAA;OATJ,IAAI,CAuChB","file":"chatAccessibilityService.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { status } from 'vs/base/browser/ui/aria/aria';\nimport { RunOnceScheduler } from 'vs/base/common/async';\nimport { Disposable, IDisposable } from 'vs/base/common/lifecycle';\nimport { AudioCue, IAudioCueService } from 'vs/platform/audioCues/browser/audioCueService';\nimport { IChatAccessibilityService } from 'vs/workbench/contrib/chat/browser/chat';\nimport { IChatResponseViewModel } from 'vs/workbench/contrib/chat/common/chatViewModel';\n\nconst CHAT_RESPONSE_PENDING_AUDIO_CUE_LOOP_MS = 5000;\nconst CHAT_RESPONSE_PENDING_ALLOWANCE_MS = 4000;\nexport class ChatAccessibilityService extends Disposable implements IChatAccessibilityService {\n\n\tdeclare readonly _serviceBrand: undefined;\n\n\tprivate _responsePendingAudioCue: IDisposable | undefined;\n\tprivate _hasReceivedRequest: boolean = false;\n\tprivate _runOnceScheduler: RunOnceScheduler;\n\tprivate _lastResponse: string | undefined;\n\n\tconstructor(@IAudioCueService private readonly _audioCueService: IAudioCueService) {\n\t\tsuper();\n\t\tthis._register(this._runOnceScheduler = new RunOnceScheduler(() => {\n\t\t\tif (!this._hasReceivedRequest) {\n\t\t\t\tthis._responsePendingAudioCue = this._audioCueService.playAudioCueLoop(AudioCue.chatResponsePending, CHAT_RESPONSE_PENDING_AUDIO_CUE_LOOP_MS);\n\t\t\t}\n\t\t}, CHAT_RESPONSE_PENDING_ALLOWANCE_MS));\n\t}\n\tacceptRequest(): void {\n\t\tthis._audioCueService.playAudioCue(AudioCue.chatRequestSent, { allowManyInParallel: true });\n\t\tthis._runOnceScheduler.schedule();\n\t}\n\tacceptResponse(response?: IChatResponseViewModel | string): void {\n\t\tthis._hasReceivedRequest = true;\n\t\tconst isPanelChat = typeof response !== 'string';\n\t\tthis._responsePendingAudioCue?.dispose();\n\t\tthis._runOnceScheduler?.cancel();\n\t\tconst responseContent = typeof response === 'string' ? response : response?.response.asString();\n\t\tif (this._lastResponse === responseContent) {\n\t\t\treturn;\n\t\t}\n\t\tthis._audioCueService.playAudioCue(AudioCue.chatResponseReceived, { allowManyInParallel: true });\n\t\tthis._hasReceivedRequest = false;\n\t\tif (!response) {\n\t\t\treturn;\n\t\t}\n\t\tconst errorDetails = isPanelChat && response.errorDetails ? ` ${response.errorDetails.message}` : '';\n\t\tthis._lastResponse = responseContent;\n\t\tstatus(responseContent + errorDetails);\n\t}\n}\n"]}