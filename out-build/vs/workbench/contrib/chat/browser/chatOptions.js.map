{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/chat/browser/chatOptions.ts"],"names":[],"mappings":"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","file":"chatOptions.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Color } from 'vs/base/common/color';\nimport { Emitter } from 'vs/base/common/event';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { IBracketPairColorizationOptions, IEditorOptions } from 'vs/editor/common/config/editorOptions';\nimport { IConfigurationService } from 'vs/platform/configuration/common/configuration';\nimport { IThemeService } from 'vs/platform/theme/common/themeService';\nimport { IViewDescriptorService } from 'vs/workbench/common/views';\n\nexport interface IChatConfiguration {\n\teditor: {\n\t\treadonly fontSize: number;\n\t\treadonly fontFamily: string;\n\t\treadonly lineHeight: number;\n\t\treadonly fontWeight: string;\n\t\treadonly wordWrap: 'off' | 'on';\n\t};\n}\n\nexport interface IChatEditorConfiguration {\n\treadonly foreground: Color | undefined;\n\treadonly inputEditor: IChatInputEditorOptions;\n\treadonly resultEditor: IChatResultEditorOptions;\n}\n\nexport interface IChatInputEditorOptions {\n\treadonly backgroundColor: Color | undefined;\n\treadonly accessibilitySupport: string;\n}\n\nexport interface IChatResultEditorOptions {\n\treadonly fontSize: number;\n\treadonly fontFamily: string | undefined;\n\treadonly lineHeight: number;\n\treadonly fontWeight: string;\n\treadonly backgroundColor: Color | undefined;\n\treadonly bracketPairColorization: IBracketPairColorizationOptions;\n\treadonly fontLigatures: boolean | string | undefined;\n\treadonly wordWrap: 'off' | 'on';\n\n\t// Bring these back if we make the editors editable\n\t// readonly cursorBlinking: string;\n\t// readonly accessibilitySupport: string;\n}\n\n\nexport class ChatEditorOptions extends Disposable {\n\tprivate static readonly lineHeightEm = 1.4;\n\n\tprivate readonly _onDidChange = this._register(new Emitter<void>());\n\treadonly onDidChange = this._onDidChange.event;\n\n\tprivate _config!: IChatEditorConfiguration;\n\tpublic get configuration(): IChatEditorConfiguration {\n\t\treturn this._config;\n\t}\n\n\tprivate static readonly relevantSettingIds = [\n\t\t'chat.editor.lineHeight',\n\t\t'chat.editor.fontSize',\n\t\t'chat.editor.fontFamily',\n\t\t'chat.editor.fontWeight',\n\t\t'chat.editor.wordWrap',\n\t\t'editor.cursorBlinking',\n\t\t'editor.fontLigatures',\n\t\t'editor.accessibilitySupport',\n\t\t'editor.bracketPairColorization.enabled',\n\t\t'editor.bracketPairColorization.independentColorPoolPerBracketType',\n\t];\n\n\tconstructor(\n\t\tviewId: string | undefined,\n\t\tprivate readonly foreground: string,\n\t\tprivate readonly inputEditorBackgroundColor: string,\n\t\tprivate readonly resultEditorBackgroundColor: string,\n\t\t@IConfigurationService private readonly configurationService: IConfigurationService,\n\t\t@IThemeService private readonly themeService: IThemeService,\n\t\t@IViewDescriptorService private readonly viewDescriptorService: IViewDescriptorService\n\t) {\n\t\tsuper();\n\n\t\tthis._register(this.themeService.onDidColorThemeChange(e => this.update()));\n\t\tthis._register(this.viewDescriptorService.onDidChangeLocation(e => {\n\t\t\tif (e.views.some(v => v.id === viewId)) {\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t}));\n\t\tthis._register(this.configurationService.onDidChangeConfiguration(e => {\n\t\t\tif (ChatEditorOptions.relevantSettingIds.some(id => e.affectsConfiguration(id))) {\n\t\t\t\tthis.update();\n\t\t\t}\n\t\t}));\n\t\tthis.update();\n\t}\n\n\tprivate update() {\n\t\tconst editorConfig = this.configurationService.getValue<IEditorOptions>('editor');\n\n\t\t// TODO shouldn't the setting keys be more specific?\n\t\tconst chatEditorConfig = this.configurationService.getValue<IChatConfiguration>('chat')?.editor;\n\t\tconst accessibilitySupport = this.configurationService.getValue<'auto' | 'off' | 'on'>('editor.accessibilitySupport');\n\t\tthis._config = {\n\t\t\tforeground: this.themeService.getColorTheme().getColor(this.foreground),\n\t\t\tinputEditor: {\n\t\t\t\tbackgroundColor: this.themeService.getColorTheme().getColor(this.inputEditorBackgroundColor),\n\t\t\t\taccessibilitySupport,\n\t\t\t},\n\t\t\tresultEditor: {\n\t\t\t\tbackgroundColor: this.themeService.getColorTheme().getColor(this.resultEditorBackgroundColor),\n\t\t\t\tfontSize: chatEditorConfig.fontSize,\n\t\t\t\tfontFamily: chatEditorConfig.fontFamily === 'default' ? editorConfig.fontFamily : chatEditorConfig.fontFamily,\n\t\t\t\tfontWeight: chatEditorConfig.fontWeight,\n\t\t\t\tlineHeight: chatEditorConfig.lineHeight ? chatEditorConfig.lineHeight : ChatEditorOptions.lineHeightEm * chatEditorConfig.fontSize,\n\t\t\t\tbracketPairColorization: {\n\t\t\t\t\tenabled: this.configurationService.getValue<boolean>('editor.bracketPairColorization.enabled'),\n\t\t\t\t\tindependentColorPoolPerBracketType: this.configurationService.getValue<boolean>('editor.bracketPairColorization.independentColorPoolPerBracketType'),\n\t\t\t\t},\n\t\t\t\twordWrap: chatEditorConfig.wordWrap,\n\t\t\t\tfontLigatures: editorConfig.fontLigatures,\n\t\t\t}\n\n\t\t};\n\t\tthis._onDidChange.fire();\n\t}\n}\n"]}