{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/chat/common/chatWordCounter.ts"],"names":[],"mappings":"AAAA;;;gGAGgG;;;;;IAEhG,MAAM,wBAAwB,GAAG,UAAU,CAAC;IAQ5C,SAAgB,IAAI,CAAM,GAAW,EAAE,eAAuB;QAC7D,IAAI,SAAS,GAAG,eAAe,CAAC;QAChC,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,OAAO,CAAC,GAAG,GAAG,CAAC,MAAM,IAAI,SAAS,GAAG,CAAC,EAAE;YACvC,+BAA+B;YAC/B,OAAO,CAAC,GAAG,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,wBAAwB,CAAC,EAAE;gBAChE,CAAC,EAAE,CAAC;aACJ;YAED,qBAAqB;YACrB,OAAO,CAAC,GAAG,GAAG,CAAC,MAAM,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,wBAAwB,CAAC,EAAE;gBACjE,CAAC,EAAE,CAAC;aACJ;YAED,SAAS,EAAE,CAAC;SACZ;QAED,MAAM,KAAK,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAClC,OAAO;YACN,KAAK;YACL,eAAe,EAAE,eAAe,GAAG,SAAS;YAC5C,YAAY,EAAE,CAAC,IAAI,GAAG,CAAC,MAAM;SAC7B,CAAC;IACH,CAAC;IAvBD,oBAuBC;IAED,SAAgB,IAAI,CAAO,GAAW;QACrC,MAAM,MAAM,GAAG,IAAI,CAAM,GAAG,EAAE,MAAM,CAAC,gBAAgB,CAAC,CAAC;QACvD,OAAO,MAAM,CAAC,eAAe,CAAC;IAC/B,CAAC;IAHD,oBAGC","file":"chatWordCounter.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nconst wordSeparatorCharPattern = /[\\s\\|\\-]/;\n\nexport interface IWordCountResult {\n\tvalue: string;\n\tactualWordCount: number;\n\tisFullString: boolean;\n}\n\nexport function getNWords(str: string, numWordsToCount: number): IWordCountResult {\n\tlet wordCount = numWordsToCount;\n\tlet i = 0;\n\twhile (i < str.length && wordCount > 0) {\n\t\t// Consume word separator chars\n\t\twhile (i < str.length && str[i].match(wordSeparatorCharPattern)) {\n\t\t\ti++;\n\t\t}\n\n\t\t// Consume word chars\n\t\twhile (i < str.length && !str[i].match(wordSeparatorCharPattern)) {\n\t\t\ti++;\n\t\t}\n\n\t\twordCount--;\n\t}\n\n\tconst value = str.substring(0, i);\n\treturn {\n\t\tvalue,\n\t\tactualWordCount: numWordsToCount - wordCount,\n\t\tisFullString: i >= str.length\n\t};\n}\n\nexport function countWords(str: string): number {\n\tconst result = getNWords(str, Number.MAX_SAFE_INTEGER);\n\treturn result.actualWordCount;\n}\n"]}