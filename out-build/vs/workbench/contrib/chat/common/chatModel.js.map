{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/chat/common/chatModel.ts"],"names":[],"mappings":"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","file":"chatModel.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DeferredPromise } from 'vs/base/common/async';\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { IMarkdownString, MarkdownString, isMarkdownString } from 'vs/base/common/htmlContent';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { URI, UriComponents } from 'vs/base/common/uri';\nimport { generateUuid } from 'vs/base/common/uuid';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IChatAgentData, IChatAgentService } from 'vs/workbench/contrib/chat/common/chatAgents';\nimport { IChat, IChatFollowup, IChatProgress, IChatReplyFollowup, IChatResponse, IChatResponseErrorDetails, IChatResponseProgressFileTreeData, InteractiveSessionVoteDirection } from 'vs/workbench/contrib/chat/common/chatService';\n\nexport interface IChatRequestModel {\n\treadonly id: string;\n\treadonly providerRequestId: string | undefined;\n\treadonly username: string;\n\treadonly avatarIconUri?: URI;\n\treadonly session: IChatModel;\n\treadonly message: string | IChatReplyFollowup;\n\treadonly response: IChatResponseModel | undefined;\n}\n\nexport interface IResponse {\n\treadonly value: (IMarkdownString | IPlaceholderMarkdownString | IChatResponseProgressFileTreeData)[];\n\tonDidChangeValue: Event<void>;\n\tupdateContent(responsePart: string | IMarkdownString | { treeData: IChatResponseProgressFileTreeData } | { placeholder: string; resolvedContent?: Promise<string | IMarkdownString | { treeData: IChatResponseProgressFileTreeData }> }, quiet?: boolean): void;\n\tasString(): string;\n}\n\nexport interface IChatResponseModel {\n\treadonly onDidChange: Event<void>;\n\treadonly id: string;\n\treadonly providerId: string;\n\treadonly providerResponseId: string | undefined;\n\treadonly username: string;\n\treadonly avatarIconUri?: URI;\n\treadonly session: IChatModel;\n\treadonly response: IResponse;\n\treadonly isComplete: boolean;\n\treadonly isCanceled: boolean;\n\treadonly vote: InteractiveSessionVoteDirection | undefined;\n\treadonly followups?: IChatFollowup[] | undefined;\n\treadonly errorDetails?: IChatResponseErrorDetails;\n\tsetVote(vote: InteractiveSessionVoteDirection): void;\n}\n\nexport function isRequest(item: unknown): item is IChatRequestModel {\n\treturn !!item && typeof (item as IChatRequestModel).message !== 'undefined';\n}\n\nexport function isResponse(item: unknown): item is IChatResponseModel {\n\treturn !isRequest(item);\n}\n\nexport class ChatRequestModel implements IChatRequestModel {\n\tprivate static nextId = 0;\n\n\tpublic response: ChatResponseModel | undefined;\n\n\tprivate _id: string;\n\tpublic get id(): string {\n\t\treturn this._id;\n\t}\n\n\tpublic get providerRequestId(): string | undefined {\n\t\treturn this._providerRequestId;\n\t}\n\n\tpublic get username(): string {\n\t\treturn this.session.requesterUsername;\n\t}\n\n\tpublic get avatarIconUri(): URI | undefined {\n\t\treturn this.session.requesterAvatarIconUri;\n\t}\n\n\tconstructor(\n\t\tpublic readonly session: ChatModel,\n\t\tpublic readonly message: string | IChatReplyFollowup,\n\t\tprivate _providerRequestId?: string) {\n\t\tthis._id = 'request_' + ChatRequestModel.nextId++;\n\t}\n\n\tsetProviderRequestId(providerRequestId: string) {\n\t\tthis._providerRequestId = providerRequestId;\n\t}\n}\n\nexport interface IPlaceholderMarkdownString extends IMarkdownString {\n\tisPlaceholder: boolean;\n}\n\ntype ResponsePart = { string: IMarkdownString; isPlaceholder?: boolean } | { treeData: IChatResponseProgressFileTreeData; isPlaceholder?: undefined };\nexport class Response implements IResponse {\n\tprivate _onDidChangeValue = new Emitter<void>();\n\tpublic get onDidChangeValue() {\n\t\treturn this._onDidChangeValue.event;\n\t}\n\n\t// responseParts internally tracks all the response parts, including strings which are currently resolving, so that they can be updated when they do resolve\n\tprivate _responseParts: ResponsePart[];\n\t// responseData externally presents the response parts with consolidated contiguous strings (including strings which were previously resolving)\n\tprivate _responseData: (IMarkdownString | IPlaceholderMarkdownString | IChatResponseProgressFileTreeData)[];\n\t// responseRepr externally presents the response parts with consolidated contiguous strings (excluding tree data)\n\tprivate _responseRepr: string;\n\n\tget value(): (IMarkdownString | IPlaceholderMarkdownString | IChatResponseProgressFileTreeData)[] {\n\t\treturn this._responseData;\n\t}\n\n\tconstructor(value: IMarkdownString | (IMarkdownString | IChatResponseProgressFileTreeData)[]) {\n\t\tthis._responseData = Array.isArray(value) ? value : [value];\n\t\tthis._responseParts = Array.isArray(value) ? value.map((v) => ('value' in v ? { string: v } : { treeData: v })) : [{ string: value }];\n\t\tthis._responseRepr = this._responseParts.map((part) => {\n\t\t\tif (isCompleteInteractiveProgressTreeData(part)) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn part.string.value;\n\t\t}).join('\\n');\n\t}\n\n\tasString(): string {\n\t\treturn this._responseRepr;\n\t}\n\n\tupdateContent(responsePart: string | IMarkdownString | { treeData: IChatResponseProgressFileTreeData } | { placeholder: string; resolvedContent?: Promise<string | { treeData: IChatResponseProgressFileTreeData }> }, quiet?: boolean): void {\n\t\tif (typeof responsePart === 'string' || isMarkdownString(responsePart)) {\n\t\t\tconst responsePartLength = this._responseParts.length - 1;\n\t\t\tconst lastResponsePart = this._responseParts[responsePartLength];\n\n\t\t\tif (lastResponsePart.isPlaceholder === true || isCompleteInteractiveProgressTreeData(lastResponsePart)) {\n\t\t\t\t// The last part is resolving or a tree data item, start a new part\n\t\t\t\tthis._responseParts.push({ string: typeof responsePart === 'string' ? new MarkdownString(responsePart) : responsePart });\n\t\t\t} else {\n\t\t\t\t// Combine this part with the last, non-resolving string part\n\t\t\t\tif (isMarkdownString(responsePart)) {\n\t\t\t\t\tthis._responseParts[responsePartLength] = { string: new MarkdownString(lastResponsePart.string.value + responsePart.value, responsePart) };\n\t\t\t\t} else {\n\t\t\t\t\tthis._responseParts[responsePartLength] = { string: new MarkdownString(lastResponsePart.string.value + responsePart, lastResponsePart.string) };\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._updateRepr(quiet);\n\t\t} else if ('placeholder' in responsePart) {\n\t\t\t// Add a new resolving part\n\t\t\tconst responsePosition = this._responseParts.push({ string: new MarkdownString(responsePart.placeholder), isPlaceholder: true }) - 1;\n\t\t\tthis._updateRepr(quiet);\n\n\t\t\tresponsePart.resolvedContent?.then((content) => {\n\t\t\t\t// Replace the resolving part's content with the resolved response\n\t\t\t\tif (typeof content === 'string') {\n\t\t\t\t\tthis._responseParts[responsePosition] = { string: new MarkdownString(content), isPlaceholder: true };\n\t\t\t\t\tthis._updateRepr(quiet);\n\t\t\t\t} else if (content.treeData) {\n\t\t\t\t\tthis._responseParts[responsePosition] = { treeData: content.treeData };\n\t\t\t\t\tthis._updateRepr(quiet);\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (isCompleteInteractiveProgressTreeData(responsePart)) {\n\t\t\tthis._responseParts.push(responsePart);\n\t\t\tthis._updateRepr(quiet);\n\t\t}\n\t}\n\n\tprivate _updateRepr(quiet?: boolean) {\n\t\tthis._responseData = this._responseParts.map(part => {\n\t\t\tif (isCompleteInteractiveProgressTreeData(part)) {\n\t\t\t\treturn part.treeData;\n\t\t\t} else if (part.isPlaceholder) {\n\t\t\t\treturn { ...part.string, isPlaceholder: true };\n\t\t\t}\n\t\t\treturn part.string;\n\t\t});\n\n\t\tthis._responseRepr = this._responseParts.map(part => {\n\t\t\tif (isCompleteInteractiveProgressTreeData(part)) {\n\t\t\t\treturn '';\n\t\t\t}\n\t\t\treturn part.string.value;\n\t\t}).join('\\n\\n');\n\n\t\tif (!quiet) {\n\t\t\tthis._onDidChangeValue.fire();\n\t\t}\n\t}\n}\n\nexport class ChatResponseModel extends Disposable implements IChatResponseModel {\n\tprivate readonly _onDidChange = this._register(new Emitter<void>());\n\treadonly onDidChange = this._onDidChange.event;\n\n\tprivate static nextId = 0;\n\n\tprivate _id: string;\n\tpublic get id(): string {\n\t\treturn this._id;\n\t}\n\n\tpublic get providerResponseId(): string | undefined {\n\t\treturn this._providerResponseId;\n\t}\n\n\tpublic get isComplete(): boolean {\n\t\treturn this._isComplete;\n\t}\n\n\tpublic get isCanceled(): boolean {\n\t\treturn this._isCanceled;\n\t}\n\n\tpublic get vote(): InteractiveSessionVoteDirection | undefined {\n\t\treturn this._vote;\n\t}\n\n\tpublic get followups(): IChatFollowup[] | undefined {\n\t\treturn this._followups;\n\t}\n\n\tprivate _response: IResponse;\n\tpublic get response(): IResponse {\n\t\treturn this._response;\n\t}\n\n\tpublic get errorDetails(): IChatResponseErrorDetails | undefined {\n\t\treturn this._errorDetails;\n\t}\n\n\tpublic get providerId(): string {\n\t\treturn this.session.providerId;\n\t}\n\n\tpublic get username(): string {\n\t\treturn this.agent?.metadata.fullName ?? this.session.responderUsername;\n\t}\n\n\tpublic get avatarIconUri(): URI | undefined {\n\t\treturn this.agent?.metadata.icon ?? this.session.responderAvatarIconUri;\n\t}\n\n\tconstructor(\n\t\t_response: IMarkdownString | (IMarkdownString | IChatResponseProgressFileTreeData)[],\n\t\tpublic readonly session: ChatModel,\n\t\tpublic readonly agent: IChatAgentData | undefined,\n\t\tprivate _isComplete: boolean = false,\n\t\tprivate _isCanceled = false,\n\t\tprivate _vote?: InteractiveSessionVoteDirection,\n\t\tprivate _providerResponseId?: string,\n\t\tprivate _errorDetails?: IChatResponseErrorDetails,\n\t\tprivate _followups?: IChatFollowup[]\n\t) {\n\t\tsuper();\n\t\tthis._response = new Response(_response);\n\t\tthis._register(this._response.onDidChangeValue(() => this._onDidChange.fire()));\n\t\tthis._id = 'response_' + ChatResponseModel.nextId++;\n\t}\n\n\tupdateContent(responsePart: string | IMarkdownString | { treeData: IChatResponseProgressFileTreeData } | { placeholder: string; resolvedContent?: Promise<string | IMarkdownString | { treeData: IChatResponseProgressFileTreeData }> }, quiet?: boolean) {\n\t\tthis._response.updateContent(responsePart, quiet);\n\t}\n\n\tsetProviderResponseId(providerResponseId: string) {\n\t\tthis._providerResponseId = providerResponseId;\n\t}\n\n\tsetErrorDetails(errorDetails?: IChatResponseErrorDetails): void {\n\t\tthis._errorDetails = errorDetails;\n\t\tthis._onDidChange.fire();\n\t}\n\n\tcomplete(): void {\n\t\tthis._isComplete = true;\n\t\tthis._onDidChange.fire();\n\t}\n\n\tcancel(): void {\n\t\tthis._isComplete = true;\n\t\tthis._isCanceled = true;\n\t\tthis._onDidChange.fire();\n\t}\n\n\tsetFollowups(followups: IChatFollowup[] | undefined): void {\n\t\tthis._followups = followups;\n\t\tthis._onDidChange.fire(); // Fire so that command followups get rendered on the row\n\t}\n\n\tsetVote(vote: InteractiveSessionVoteDirection): void {\n\t\tthis._vote = vote;\n\t\tthis._onDidChange.fire();\n\t}\n}\n\nexport interface IChatModel {\n\treadonly onDidDispose: Event<void>;\n\treadonly onDidChange: Event<IChatChangeEvent>;\n\treadonly sessionId: string;\n\treadonly providerId: string;\n\treadonly isInitialized: boolean;\n\treadonly title: string;\n\treadonly welcomeMessage: IChatWelcomeMessageModel | undefined;\n\treadonly requestInProgress: boolean;\n\treadonly inputPlaceholder?: string;\n\tgetRequests(): IChatRequestModel[];\n\ttoExport(): IExportableChatData;\n\ttoJSON(): ISerializableChatData;\n}\n\nexport interface ISerializableChatsData {\n\t[sessionId: string]: ISerializableChatData;\n}\n\nexport interface ISerializableChatAgentData {\n\tid: string;\n\tdescription: string;\n\tfullName?: string;\n\ticon?: UriComponents;\n}\n\nexport interface ISerializableChatRequestData {\n\tproviderRequestId: string | undefined;\n\tmessage: string;\n\tresponse: (IMarkdownString | IChatResponseProgressFileTreeData)[] | undefined;\n\tagent?: ISerializableChatAgentData;\n\tresponseErrorDetails: IChatResponseErrorDetails | undefined;\n\tfollowups: IChatFollowup[] | undefined;\n\tisCanceled: boolean | undefined;\n\tvote: InteractiveSessionVoteDirection | undefined;\n}\n\nexport interface IExportableChatData {\n\tproviderId: string;\n\twelcomeMessage: (string | IChatReplyFollowup[])[] | undefined;\n\trequests: ISerializableChatRequestData[];\n\trequesterUsername: string;\n\tresponderUsername: string;\n\trequesterAvatarIconUri: UriComponents | undefined;\n\tresponderAvatarIconUri: UriComponents | undefined;\n\tproviderState: any;\n}\n\nexport interface ISerializableChatData extends IExportableChatData {\n\tsessionId: string;\n\tcreationDate: number;\n\tisImported: boolean;\n}\n\nexport function isExportableSessionData(obj: unknown): obj is IExportableChatData {\n\tconst data = obj as IExportableChatData;\n\treturn typeof data === 'object' &&\n\t\ttypeof data.providerId === 'string' &&\n\t\ttypeof data.requesterUsername === 'string' &&\n\t\ttypeof data.responderUsername === 'string';\n}\n\nexport function isSerializableSessionData(obj: unknown): obj is ISerializableChatData {\n\tconst data = obj as ISerializableChatData;\n\treturn isExportableSessionData(obj) &&\n\t\ttypeof data.creationDate === 'number' &&\n\t\ttypeof data.sessionId === 'string';\n}\n\nexport type IChatChangeEvent = IChatAddRequestEvent | IChatAddResponseEvent | IChatInitEvent | IChatRemoveRequestEvent;\n\nexport interface IChatAddRequestEvent {\n\tkind: 'addRequest';\n\trequest: IChatRequestModel;\n}\n\nexport interface IChatAddResponseEvent {\n\tkind: 'addResponse';\n\tresponse: IChatResponseModel;\n}\n\nexport interface IChatRemoveRequestEvent {\n\tkind: 'removeRequest';\n\trequestId: string;\n\tresponseId?: string;\n}\n\nexport interface IChatInitEvent {\n\tkind: 'initialize';\n}\n\nexport class ChatModel extends Disposable implements IChatModel {\n\tprivate readonly _onDidDispose = this._register(new Emitter<void>());\n\treadonly onDidDispose = this._onDidDispose.event;\n\n\tprivate readonly _onDidChange = this._register(new Emitter<IChatChangeEvent>());\n\treadonly onDidChange = this._onDidChange.event;\n\n\tprivate _requests: ChatRequestModel[];\n\tprivate _isInitializedDeferred = new DeferredPromise<void>();\n\n\tprivate _session: IChat | undefined;\n\tget session(): IChat | undefined {\n\t\treturn this._session;\n\t}\n\n\tprivate _welcomeMessage: ChatWelcomeMessageModel | undefined;\n\tget welcomeMessage(): ChatWelcomeMessageModel | undefined {\n\t\treturn this._welcomeMessage;\n\t}\n\n\tprivate _providerState: any;\n\tget providerState(): any {\n\t\treturn this._providerState;\n\t}\n\n\t// TODO to be clear, this is not the same as the id from the session object, which belongs to the provider.\n\t// It's easier to be able to identify this model before its async initialization is complete\n\tprivate _sessionId: string;\n\tget sessionId(): string {\n\t\treturn this._sessionId;\n\t}\n\n\tget inputPlaceholder(): string | undefined {\n\t\treturn this._session?.inputPlaceholder;\n\t}\n\n\tget requestInProgress(): boolean {\n\t\tconst lastRequest = this._requests[this._requests.length - 1];\n\t\treturn !!lastRequest && !!lastRequest.response && !lastRequest.response.isComplete;\n\t}\n\n\tprivate _creationDate: number;\n\tget creationDate(): number {\n\t\treturn this._creationDate;\n\t}\n\n\tget requesterUsername(): string {\n\t\treturn this._session?.requesterUsername ?? this.initialData?.requesterUsername ?? '';\n\t}\n\n\tget responderUsername(): string {\n\t\treturn this._session?.responderUsername ?? this.initialData?.responderUsername ?? '';\n\t}\n\n\tprivate readonly _initialRequesterAvatarIconUri: URI | undefined;\n\tget requesterAvatarIconUri(): URI | undefined {\n\t\treturn this._session?.requesterAvatarIconUri ?? this._initialRequesterAvatarIconUri;\n\t}\n\n\tprivate readonly _initialResponderAvatarIconUri: URI | undefined;\n\tget responderAvatarIconUri(): URI | undefined {\n\t\treturn this._session?.responderAvatarIconUri ?? this._initialResponderAvatarIconUri;\n\t}\n\n\tget isInitialized(): boolean {\n\t\treturn this._isInitializedDeferred.isSettled;\n\t}\n\n\tprivate _isImported = false;\n\tget isImported(): boolean {\n\t\treturn this._isImported;\n\t}\n\n\tget title(): string {\n\t\tconst firstRequestMessage = this._requests[0]?.message;\n\t\tconst message = typeof firstRequestMessage === 'string' ? firstRequestMessage : firstRequestMessage?.message ?? '';\n\t\treturn message.split('\\n')[0].substring(0, 50);\n\t}\n\n\tconstructor(\n\t\tpublic readonly providerId: string,\n\t\tprivate readonly initialData: ISerializableChatData | IExportableChatData | undefined,\n\t\t@ILogService private readonly logService: ILogService,\n\t\t@IChatAgentService private readonly chatAgentService: IChatAgentService,\n\t) {\n\t\tsuper();\n\n\t\tthis._isImported = (!!initialData && !isSerializableSessionData(initialData)) || (initialData?.isImported ?? false);\n\t\tthis._sessionId = (isSerializableSessionData(initialData) && initialData.sessionId) || generateUuid();\n\t\tthis._requests = initialData ? this._deserialize(initialData) : [];\n\t\tthis._providerState = initialData ? initialData.providerState : undefined;\n\t\tthis._creationDate = (isSerializableSessionData(initialData) && initialData.creationDate) || Date.now();\n\n\t\tthis._initialRequesterAvatarIconUri = initialData?.requesterAvatarIconUri && URI.revive(initialData.requesterAvatarIconUri);\n\t\tthis._initialResponderAvatarIconUri = initialData?.responderAvatarIconUri && URI.revive(initialData.responderAvatarIconUri);\n\t}\n\n\tprivate _deserialize(obj: IExportableChatData): ChatRequestModel[] {\n\t\tconst requests = obj.requests;\n\t\tif (!Array.isArray(requests)) {\n\t\t\tthis.logService.error(`Ignoring malformed session data: ${obj}`);\n\t\t\treturn [];\n\t\t}\n\n\t\tif (obj.welcomeMessage) {\n\t\t\tconst content = obj.welcomeMessage.map(item => typeof item === 'string' ? new MarkdownString(item) : item);\n\t\t\tthis._welcomeMessage = new ChatWelcomeMessageModel(this, content);\n\t\t}\n\n\t\treturn requests.map((raw: ISerializableChatRequestData) => {\n\t\t\tconst request = new ChatRequestModel(this, raw.message, raw.providerRequestId);\n\t\t\tif (raw.response || raw.responseErrorDetails) {\n\t\t\t\tconst agent = raw.agent && this.chatAgentService.getAgents().find(a => a.id === raw.agent!.id); // TODO do something reasonable if this agent has disappeared since the last session\n\t\t\t\trequest.response = new ChatResponseModel(raw.response ?? [new MarkdownString(raw.response)], this, agent, true, raw.isCanceled, raw.vote, raw.providerRequestId, raw.responseErrorDetails, raw.followups);\n\t\t\t}\n\t\t\treturn request;\n\t\t});\n\t}\n\n\tstartReinitialize(): void {\n\t\tthis._session = undefined;\n\t\tthis._isInitializedDeferred = new DeferredPromise<void>();\n\t}\n\n\tinitialize(session: IChat, welcomeMessage: ChatWelcomeMessageModel | undefined): void {\n\t\tif (this._session || this._isInitializedDeferred.isSettled) {\n\t\t\tthrow new Error('ChatModel is already initialized');\n\t\t}\n\n\t\tthis._session = session;\n\t\tif (!this._welcomeMessage) {\n\t\t\t// Could also have loaded the welcome message from persisted data\n\t\t\tthis._welcomeMessage = welcomeMessage;\n\t\t}\n\n\t\tthis._isInitializedDeferred.complete();\n\n\t\tif (session.onDidChangeState) {\n\t\t\tthis._register(session.onDidChangeState(state => {\n\t\t\t\tthis._providerState = state;\n\t\t\t\tthis.logService.trace('ChatModel#acceptNewSessionState');\n\t\t\t}));\n\t\t}\n\t\tthis._onDidChange.fire({ kind: 'initialize' });\n\t}\n\n\tsetInitializationError(error: Error): void {\n\t\tif (!this._isInitializedDeferred.isSettled) {\n\t\t\tthis._isInitializedDeferred.error(error);\n\t\t}\n\t}\n\n\twaitForInitialization(): Promise<void> {\n\t\treturn this._isInitializedDeferred.p;\n\t}\n\n\tgetRequests(): ChatRequestModel[] {\n\t\treturn this._requests;\n\t}\n\n\taddRequest(message: string | IChatReplyFollowup, chatAgent?: IChatAgentData): ChatRequestModel {\n\t\tif (!this._session) {\n\t\t\tthrow new Error('addRequest: No session');\n\t\t}\n\n\t\tconst request = new ChatRequestModel(this, message);\n\t\trequest.response = new ChatResponseModel(new MarkdownString(''), this, chatAgent);\n\n\t\tthis._requests.push(request);\n\t\tthis._onDidChange.fire({ kind: 'addRequest', request });\n\t\treturn request;\n\t}\n\n\tacceptResponseProgress(request: ChatRequestModel, progress: IChatProgress, quiet?: boolean): void {\n\t\tif (!this._session) {\n\t\t\tthrow new Error('acceptResponseProgress: No session');\n\t\t}\n\n\t\tif (!request.response) {\n\t\t\trequest.response = new ChatResponseModel(new MarkdownString(''), this, undefined);\n\t\t}\n\n\t\tif (request.response.isComplete) {\n\t\t\tthrow new Error('acceptResponseProgress: Adding progress to a completed response');\n\t\t}\n\n\t\tif ('content' in progress) {\n\t\t\trequest.response.updateContent(progress.content, quiet);\n\t\t} else if ('placeholder' in progress || isCompleteInteractiveProgressTreeData(progress)) {\n\t\t\trequest.response.updateContent(progress, quiet);\n\t\t} else {\n\t\t\trequest.setProviderRequestId(progress.requestId);\n\t\t\trequest.response.setProviderResponseId(progress.requestId);\n\t\t}\n\t}\n\n\tremoveRequest(requestId: string): void {\n\t\tconst index = this._requests.findIndex(request => request.providerRequestId === requestId);\n\t\tconst request = this._requests[index];\n\t\tif (!request.providerRequestId) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (index !== -1) {\n\t\t\tthis._onDidChange.fire({ kind: 'removeRequest', requestId: request.providerRequestId, responseId: request.response?.providerResponseId });\n\t\t\tthis._requests.splice(index, 1);\n\t\t\trequest.response?.dispose();\n\t\t}\n\t}\n\n\tcancelRequest(request: ChatRequestModel): void {\n\t\tif (request.response) {\n\t\t\trequest.response.cancel();\n\t\t}\n\t}\n\n\tsetResponse(request: ChatRequestModel, rawResponse: IChatResponse): void {\n\t\tif (!this._session) {\n\t\t\tthrow new Error('completeResponse: No session');\n\t\t}\n\n\t\tif (!request.response) {\n\t\t\trequest.response = new ChatResponseModel(new MarkdownString(''), this, undefined);\n\t\t}\n\n\t\trequest.response.setErrorDetails(rawResponse.errorDetails);\n\t}\n\n\tcompleteResponse(request: ChatRequestModel): void {\n\t\tif (!request.response) {\n\t\t\tthrow new Error('Call setResponse before completeResponse');\n\t\t}\n\n\t\trequest.response.complete();\n\t}\n\n\tsetFollowups(request: ChatRequestModel, followups: IChatFollowup[] | undefined): void {\n\t\tif (!request.response) {\n\t\t\t// Maybe something went wrong?\n\t\t\treturn;\n\t\t}\n\n\t\trequest.response.setFollowups(followups);\n\t}\n\n\tsetResponseModel(request: ChatRequestModel, response: ChatResponseModel): void {\n\t\trequest.response = response;\n\t\tthis._onDidChange.fire({ kind: 'addResponse', response });\n\t}\n\n\ttoExport(): IExportableChatData {\n\t\treturn {\n\t\t\trequesterUsername: this.requesterUsername,\n\t\t\trequesterAvatarIconUri: this.requesterAvatarIconUri,\n\t\t\tresponderUsername: this.responderUsername,\n\t\t\tresponderAvatarIconUri: this.responderAvatarIconUri,\n\t\t\twelcomeMessage: this._welcomeMessage?.content.map(c => {\n\t\t\t\tif (Array.isArray(c)) {\n\t\t\t\t\treturn c;\n\t\t\t\t} else {\n\t\t\t\t\treturn c.value;\n\t\t\t\t}\n\t\t\t}),\n\t\t\trequests: this._requests.map((r): ISerializableChatRequestData => {\n\t\t\t\treturn {\n\t\t\t\t\tproviderRequestId: r.providerRequestId,\n\t\t\t\t\tmessage: typeof r.message === 'string' ? r.message : r.message.message,\n\t\t\t\t\tresponse: r.response ? r.response.response.value : undefined,\n\t\t\t\t\tresponseErrorDetails: r.response?.errorDetails,\n\t\t\t\t\tfollowups: r.response?.followups,\n\t\t\t\t\tisCanceled: r.response?.isCanceled,\n\t\t\t\t\tvote: r.response?.vote,\n\t\t\t\t\tagent: r.response?.agent ? {\n\t\t\t\t\t\tid: r.response.agent.id,\n\t\t\t\t\t\tdescription: r.response.agent.metadata.description,\n\t\t\t\t\t\tfullName: r.response.agent.metadata.fullName,\n\t\t\t\t\t\ticon: r.response.agent.metadata.icon\n\t\t\t\t\t} : undefined,\n\t\t\t\t};\n\t\t\t}),\n\t\t\tproviderId: this.providerId,\n\t\t\tproviderState: this._providerState\n\t\t};\n\t}\n\n\ttoJSON(): ISerializableChatData {\n\t\treturn {\n\t\t\t...this.toExport(),\n\t\t\tsessionId: this.sessionId,\n\t\t\tcreationDate: this._creationDate,\n\t\t\tisImported: this._isImported\n\t\t};\n\t}\n\n\toverride dispose() {\n\t\tthis._session?.dispose?.();\n\t\tthis._requests.forEach(r => r.response?.dispose());\n\t\tthis._onDidDispose.fire();\n\t\tif (!this._isInitializedDeferred.isSettled) {\n\t\t\tthis._isInitializedDeferred.error(new Error('model disposed before initialization'));\n\t\t}\n\n\t\tsuper.dispose();\n\t}\n}\n\nexport type IChatWelcomeMessageContent = IMarkdownString | IChatReplyFollowup[];\n\nexport interface IChatWelcomeMessageModel {\n\treadonly id: string;\n\treadonly content: IChatWelcomeMessageContent[];\n\treadonly username: string;\n\treadonly avatarIconUri?: URI;\n\n}\n\nexport class ChatWelcomeMessageModel implements IChatWelcomeMessageModel {\n\tprivate static nextId = 0;\n\n\tprivate _id: string;\n\tpublic get id(): string {\n\t\treturn this._id;\n\t}\n\n\tconstructor(\n\t\tprivate readonly session: ChatModel,\n\t\tpublic readonly content: IChatWelcomeMessageContent[],\n\t) {\n\t\tthis._id = 'welcome_' + ChatWelcomeMessageModel.nextId++;\n\t}\n\n\tpublic get username(): string {\n\t\treturn this.session.responderUsername;\n\t}\n\n\tpublic get avatarIconUri(): URI | undefined {\n\t\treturn this.session.responderAvatarIconUri;\n\t}\n}\n\nexport function isCompleteInteractiveProgressTreeData(item: unknown): item is { treeData: IChatResponseProgressFileTreeData } {\n\treturn typeof item === 'object' && !!item && 'treeData' in item;\n}\n"]}