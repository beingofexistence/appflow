{"version":3,"sources":["vs/workbench/contrib/chat/common/chatViewModel.ts"],"names":[],"mappings":"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","file":"chatViewModel.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Emitter, Event } from 'vs/base/common/event';\nimport { MarkdownString } from 'vs/base/common/htmlContent';\nimport { Disposable } from 'vs/base/common/lifecycle';\nimport { URI } from 'vs/base/common/uri';\nimport { localize } from 'vs/nls';\nimport { IInstantiationService } from 'vs/platform/instantiation/common/instantiation';\nimport { ILogService } from 'vs/platform/log/common/log';\nimport { IChatModel, IChatRequestModel, IChatResponseModel, IChatWelcomeMessageContent, IResponse, Response } from 'vs/workbench/contrib/chat/common/chatModel';\nimport { IChatReplyFollowup, IChatResponseCommandFollowup, IChatResponseErrorDetails, IChatResponseProgressFileTreeData, InteractiveSessionVoteDirection } from 'vs/workbench/contrib/chat/common/chatService';\nimport { countWords } from 'vs/workbench/contrib/chat/common/chatWordCounter';\n\nexport function isRequestVM(item: unknown): item is IChatRequestViewModel {\n\treturn !!item && typeof item === 'object' && 'message' in item;\n}\n\nexport function isResponseVM(item: unknown): item is IChatResponseViewModel {\n\treturn !!item && typeof (item as IChatResponseViewModel).setVote !== 'undefined';\n}\n\nexport function isWelcomeVM(item: unknown): item is IChatWelcomeMessageViewModel {\n\treturn !!item && typeof item === 'object' && 'content' in item;\n}\n\nexport type IChatViewModelChangeEvent = IChatAddRequestEvent | null;\n\nexport interface IChatAddRequestEvent {\n\tkind: 'addRequest';\n}\n\nexport interface IChatViewModel {\n\treadonly isInitialized: boolean;\n\treadonly providerId: string;\n\treadonly sessionId: string;\n\treadonly onDidDisposeModel: Event<void>;\n\treadonly onDidChange: Event<IChatViewModelChangeEvent>;\n\treadonly requestInProgress: boolean;\n\treadonly inputPlaceholder?: string;\n\tgetItems(): (IChatRequestViewModel | IChatResponseViewModel | IChatWelcomeMessageViewModel)[];\n}\n\nexport interface IChatRequestViewModel {\n\treadonly id: string;\n\treadonly providerRequestId: string | undefined;\n\treadonly sessionId: string;\n\t/** This ID updates every time the underlying data changes */\n\treadonly dataId: string;\n\treadonly username: string;\n\treadonly avatarIconUri?: URI;\n\treadonly message: string | IChatReplyFollowup;\n\treadonly messageText: string;\n\tcurrentRenderedHeight: number | undefined;\n}\n\nexport interface IChatResponseMarkdownRenderData {\n\trenderedWordCount: number;\n\tlastRenderTime: number;\n\tisFullyRendered: boolean;\n}\n\nexport interface IChatResponseRenderData {\n\trenderedParts: (IChatResponseProgressFileTreeData | IChatResponseMarkdownRenderData)[];\n}\n\nexport interface IChatLiveUpdateData {\n\twordCountAfterLastUpdate: number;\n\tloadingStartTime: number;\n\tlastUpdateTime: number;\n\timpliedWordLoadRate: number;\n}\n\nexport interface IChatResponseViewModel {\n\treadonly id: string;\n\treadonly sessionId: string;\n\t/** This ID updates every time the underlying data changes */\n\treadonly dataId: string;\n\treadonly providerId: string;\n\treadonly providerResponseId: string | undefined;\n\treadonly username: string;\n\treadonly avatarIconUri?: URI;\n\treadonly response: IResponse;\n\treadonly isComplete: boolean;\n\treadonly isCanceled: boolean;\n\treadonly isPlaceholder: boolean;\n\treadonly vote: InteractiveSessionVoteDirection | undefined;\n\treadonly replyFollowups?: IChatReplyFollowup[];\n\treadonly commandFollowups?: IChatResponseCommandFollowup[];\n\treadonly errorDetails?: IChatResponseErrorDetails;\n\treadonly contentUpdateTimings?: IChatLiveUpdateData;\n\trenderData?: IChatResponseRenderData;\n\tcurrentRenderedHeight: number | undefined;\n\tsetVote(vote: InteractiveSessionVoteDirection): void;\n}\n\nexport class ChatViewModel extends Disposable implements IChatViewModel {\n\tprivate readonly _onDidDisposeModel = this._register(new Emitter<void>());\n\treadonly onDidDisposeModel = this._onDidDisposeModel.event;\n\n\tprivate readonly _onDidChange = this._register(new Emitter<IChatViewModelChangeEvent>());\n\treadonly onDidChange = this._onDidChange.event;\n\n\tprivate readonly _items: (ChatRequestViewModel | ChatResponseViewModel)[] = [];\n\n\tget inputPlaceholder(): string | undefined {\n\t\treturn this._model.inputPlaceholder;\n\t}\n\n\tget sessionId() {\n\t\treturn this._model.sessionId;\n\t}\n\n\tget requestInProgress(): boolean {\n\t\treturn this._model.requestInProgress;\n\t}\n\n\tget providerId() {\n\t\treturn this._model.providerId;\n\t}\n\n\tget isInitialized() {\n\t\treturn this._model.isInitialized;\n\t}\n\n\tconstructor(\n\t\tprivate readonly _model: IChatModel,\n\t\t@IInstantiationService private readonly instantiationService: IInstantiationService,\n\t) {\n\t\tsuper();\n\n\t\t_model.getRequests().forEach((request, i) => {\n\t\t\tthis._items.push(new ChatRequestViewModel(request));\n\t\t\tif (request.response) {\n\t\t\t\tthis.onAddResponse(request.response);\n\t\t\t}\n\t\t});\n\n\t\tthis._register(_model.onDidDispose(() => this._onDidDisposeModel.fire()));\n\t\tthis._register(_model.onDidChange(e => {\n\t\t\tif (e.kind === 'addRequest') {\n\t\t\t\tthis._items.push(new ChatRequestViewModel(e.request));\n\t\t\t\tif (e.request.response) {\n\t\t\t\t\tthis.onAddResponse(e.request.response);\n\t\t\t\t}\n\t\t\t} else if (e.kind === 'addResponse') {\n\t\t\t\tthis.onAddResponse(e.response);\n\t\t\t} else if (e.kind === 'removeRequest') {\n\t\t\t\tconst requestIdx = this._items.findIndex(item => isRequestVM(item) && item.providerRequestId === e.requestId);\n\t\t\t\tif (requestIdx >= 0) {\n\t\t\t\t\tthis._items.splice(requestIdx, 1);\n\t\t\t\t}\n\n\t\t\t\tconst responseIdx = e.responseId && this._items.findIndex(item => isResponseVM(item) && item.providerResponseId === e.responseId);\n\t\t\t\tif (typeof responseIdx === 'number' && responseIdx >= 0) {\n\t\t\t\t\tconst items = this._items.splice(responseIdx, 1);\n\t\t\t\t\tconst item = items[0];\n\t\t\t\t\tif (isResponseVM(item)) {\n\t\t\t\t\t\titem.dispose();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._onDidChange.fire(e.kind === 'addRequest' ? { kind: 'addRequest' } : null);\n\t\t}));\n\t}\n\n\tprivate onAddResponse(responseModel: IChatResponseModel) {\n\t\tconst response = this.instantiationService.createInstance(ChatResponseViewModel, responseModel);\n\t\tthis._register(response.onDidChange(() => this._onDidChange.fire(null)));\n\t\tthis._items.push(response);\n\t}\n\n\tgetItems(): (IChatRequestViewModel | IChatResponseViewModel | IChatWelcomeMessageViewModel)[] {\n\t\treturn [...(this._model.welcomeMessage ? [this._model.welcomeMessage] : []), ...this._items];\n\t}\n\n\toverride dispose() {\n\t\tsuper.dispose();\n\t\tthis._items\n\t\t\t.filter((item): item is ChatResponseViewModel => item instanceof ChatResponseViewModel)\n\t\t\t.forEach((item: ChatResponseViewModel) => item.dispose());\n\t}\n}\n\nexport class ChatRequestViewModel implements IChatRequestViewModel {\n\tget id() {\n\t\treturn this._model.id;\n\t}\n\n\tget providerRequestId() {\n\t\treturn this._model.providerRequestId;\n\t}\n\n\tget dataId() {\n\t\treturn this.id + (this._model.session.isInitialized ? '' : '_initializing');\n\t}\n\n\tget sessionId() {\n\t\treturn this._model.session.sessionId;\n\t}\n\n\tget username() {\n\t\treturn this._model.username;\n\t}\n\n\tget avatarIconUri() {\n\t\treturn this._model.avatarIconUri;\n\t}\n\n\tget message() {\n\t\treturn this._model.message;\n\t}\n\n\tget messageText() {\n\t\treturn typeof this.message === 'string' ? this.message : this.message.message;\n\t}\n\n\tcurrentRenderedHeight: number | undefined;\n\n\tconstructor(readonly _model: IChatRequestModel) { }\n}\n\nexport class ChatResponseViewModel extends Disposable implements IChatResponseViewModel {\n\tprivate _modelChangeCount = 0;\n\n\tprivate readonly _onDidChange = this._register(new Emitter<void>());\n\treadonly onDidChange = this._onDidChange.event;\n\n\tget id() {\n\t\treturn this._model.id;\n\t}\n\n\tget dataId() {\n\t\treturn this._model.id + `_${this._modelChangeCount}` + (this._model.session.isInitialized ? '' : '_initializing');\n\t}\n\n\tget providerId() {\n\t\treturn this._model.providerId;\n\t}\n\n\tget providerResponseId() {\n\t\treturn this._model.providerResponseId;\n\t}\n\n\tget sessionId() {\n\t\treturn this._model.session.sessionId;\n\t}\n\n\tget username() {\n\t\treturn this._model.username;\n\t}\n\n\tget avatarIconUri() {\n\t\treturn this._model.avatarIconUri;\n\t}\n\n\tget response(): IResponse {\n\t\tif (this._isPlaceholder) {\n\t\t\treturn new Response(new MarkdownString(localize('thinking', \"Thinking\") + '\\u2026'));\n\t\t}\n\n\t\treturn this._model.response;\n\t}\n\n\tget isComplete() {\n\t\treturn this._model.isComplete;\n\t}\n\n\tget isCanceled() {\n\t\treturn this._model.isCanceled;\n\t}\n\n\tprivate _isPlaceholder = false;\n\tget isPlaceholder() {\n\t\treturn this._isPlaceholder;\n\t}\n\n\tget replyFollowups() {\n\t\treturn this._model.followups?.filter((f): f is IChatReplyFollowup => f.kind === 'reply');\n\t}\n\n\tget commandFollowups() {\n\t\treturn this._model.followups?.filter((f): f is IChatResponseCommandFollowup => f.kind === 'command');\n\t}\n\n\tget errorDetails() {\n\t\treturn this._model.errorDetails;\n\t}\n\n\tget vote() {\n\t\treturn this._model.vote;\n\t}\n\n\trenderData: IChatResponseRenderData | undefined = undefined;\n\n\tcurrentRenderedHeight: number | undefined;\n\n\tprivate _contentUpdateTimings: IChatLiveUpdateData | undefined = undefined;\n\tget contentUpdateTimings(): IChatLiveUpdateData | undefined {\n\t\treturn this._contentUpdateTimings;\n\t}\n\n\tconstructor(\n\t\tprivate readonly _model: IChatResponseModel,\n\t\t@ILogService private readonly logService: ILogService\n\t) {\n\t\tsuper();\n\n\t\tthis._isPlaceholder = !_model.response.asString() && !_model.isComplete;\n\n\t\tif (!_model.isComplete) {\n\t\t\tthis._contentUpdateTimings = {\n\t\t\t\tloadingStartTime: Date.now(),\n\t\t\t\tlastUpdateTime: Date.now(),\n\t\t\t\twordCountAfterLastUpdate: this._isPlaceholder ? 0 : countWords(_model.response.asString()), // don't count placeholder text\n\t\t\t\timpliedWordLoadRate: 0\n\t\t\t};\n\t\t}\n\n\t\tthis._register(_model.onDidChange(() => {\n\t\t\tif (this._isPlaceholder && (_model.response.value || this.isComplete)) {\n\t\t\t\tthis._isPlaceholder = false;\n\t\t\t}\n\n\t\t\tif (this._contentUpdateTimings) {\n\t\t\t\t// This should be true, if the model is changing\n\t\t\t\tconst now = Date.now();\n\t\t\t\tconst wordCount = countWords(_model.response.asString());\n\t\t\t\tconst timeDiff = now - this._contentUpdateTimings!.loadingStartTime;\n\t\t\t\tconst impliedWordLoadRate = wordCount / (timeDiff / 1000);\n\t\t\t\tconst renderedWordCount = this.renderData?.renderedParts.reduce((acc, part) => acc += ('label' in part ? 0 : part.renderedWordCount), 0);\n\t\t\t\tif (!this.isComplete) {\n\t\t\t\t\tthis.trace('onDidChange', `Update- got ${wordCount} words over ${timeDiff}ms = ${impliedWordLoadRate} words/s. ${renderedWordCount} words are rendered.`);\n\t\t\t\t\tthis._contentUpdateTimings = {\n\t\t\t\t\t\tloadingStartTime: this._contentUpdateTimings!.loadingStartTime,\n\t\t\t\t\t\tlastUpdateTime: now,\n\t\t\t\t\t\twordCountAfterLastUpdate: wordCount,\n\t\t\t\t\t\timpliedWordLoadRate\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tthis.trace(`onDidChange`, `Done- got ${wordCount} words over ${timeDiff}ms = ${impliedWordLoadRate} words/s. ${renderedWordCount} words are rendered.`);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.logService.warn('ChatResponseViewModel#onDidChange: got model update but contentUpdateTimings is not initialized');\n\t\t\t}\n\n\t\t\t// new data -> new id, new content to render\n\t\t\tthis._modelChangeCount++;\n\n\t\t\tthis._onDidChange.fire();\n\t\t}));\n\t}\n\n\tprivate trace(tag: string, message: string) {\n\t\tthis.logService.trace(`ChatResponseViewModel#${tag}: ${message}`);\n\t}\n\n\tsetVote(vote: InteractiveSessionVoteDirection): void {\n\t\tthis._modelChangeCount++;\n\t\tthis._model.setVote(vote);\n\t}\n}\n\nexport interface IChatWelcomeMessageViewModel {\n\treadonly id: string;\n\treadonly username: string;\n\treadonly avatarIconUri?: URI;\n\treadonly content: IChatWelcomeMessageContent[];\n\tcurrentRenderedHeight?: number;\n}\n"]}