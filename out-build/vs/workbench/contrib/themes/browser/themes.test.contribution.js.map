{"version":3,"sources":["file:///workspace/appflow/src/vs/workbench/contrib/themes/browser/themes.test.contribution.ts"],"names":[],"mappings":"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","file":"themes.test.contribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { URI } from 'vs/base/common/uri';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\nimport { CommandsRegistry } from 'vs/platform/commands/common/commands';\nimport { IInstantiationService, ServicesAccessor } from 'vs/platform/instantiation/common/instantiation';\nimport { IWorkbenchThemeService, IWorkbenchColorTheme } from 'vs/workbench/services/themes/common/workbenchThemeService';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { EditorResourceAccessor } from 'vs/workbench/common/editor';\nimport { ITextMateTokenizationService } from 'vs/workbench/services/textMate/browser/textMateTokenizationFeature';\nimport type { IGrammar, StateStack } from 'vscode-textmate';\nimport { TokenizationRegistry } from 'vs/editor/common/languages';\nimport { TokenMetadata } from 'vs/editor/common/encodedTokenAttributes';\nimport { ThemeRule, findMatchingThemeRule } from 'vs/workbench/services/textMate/common/TMHelper';\nimport { Color } from 'vs/base/common/color';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { basename } from 'vs/base/common/resources';\nimport { Schemas } from 'vs/base/common/network';\nimport { splitLines } from 'vs/base/common/strings';\n\ninterface IToken {\n\tc: string;\n\tt: string;\n\tr: { [themeName: string]: string | undefined };\n}\n\ninterface IThemedToken {\n\ttext: string;\n\tcolor: Color;\n}\n\ninterface IThemesResult {\n\t[themeName: string]: {\n\t\tdocument: ThemeDocument;\n\t\ttokens: IThemedToken[];\n\t};\n}\n\nclass ThemeDocument {\n\tprivate readonly _theme: IWorkbenchColorTheme;\n\tprivate readonly _cache: { [scopes: string]: ThemeRule };\n\tprivate readonly _defaultColor: string;\n\n\tconstructor(theme: IWorkbenchColorTheme) {\n\t\tthis._theme = theme;\n\t\tthis._cache = Object.create(null);\n\t\tthis._defaultColor = '#000000';\n\t\tfor (let i = 0, len = this._theme.tokenColors.length; i < len; i++) {\n\t\t\tconst rule = this._theme.tokenColors[i];\n\t\t\tif (!rule.scope) {\n\t\t\t\tthis._defaultColor = rule.settings.foreground!;\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate _generateExplanation(selector: string, color: Color): string {\n\t\treturn `${selector}: ${Color.Format.CSS.formatHexA(color, true).toUpperCase()}`;\n\t}\n\n\tpublic explainTokenColor(scopes: string, color: Color): string {\n\n\t\tconst matchingRule = this._findMatchingThemeRule(scopes);\n\t\tif (!matchingRule) {\n\t\t\tconst expected = Color.fromHex(this._defaultColor);\n\t\t\t// No matching rule\n\t\t\tif (!color.equals(expected)) {\n\t\t\t\tthrow new Error(`[${this._theme.label}]: Unexpected color ${Color.Format.CSS.formatHexA(color)} for ${scopes}. Expected default ${Color.Format.CSS.formatHexA(expected)}`);\n\t\t\t}\n\t\t\treturn this._generateExplanation('default', color);\n\t\t}\n\n\t\tconst expected = Color.fromHex(matchingRule.settings.foreground!);\n\t\tif (!color.equals(expected)) {\n\t\t\tthrow new Error(`[${this._theme.label}]: Unexpected color ${Color.Format.CSS.formatHexA(color)} for ${scopes}. Expected ${Color.Format.CSS.formatHexA(expected)} coming in from ${matchingRule.rawSelector}`);\n\t\t}\n\t\treturn this._generateExplanation(matchingRule.rawSelector, color);\n\t}\n\n\tprivate _findMatchingThemeRule(scopes: string): ThemeRule {\n\t\tif (!this._cache[scopes]) {\n\t\t\tthis._cache[scopes] = findMatchingThemeRule(this._theme, scopes.split(' '))!;\n\t\t}\n\t\treturn this._cache[scopes];\n\t}\n}\n\nclass Snapper {\n\n\tconstructor(\n\t\t@ILanguageService private readonly languageService: ILanguageService,\n\t\t@IWorkbenchThemeService private readonly themeService: IWorkbenchThemeService,\n\t\t@ITextMateTokenizationService private readonly textMateService: ITextMateTokenizationService\n\t) {\n\t}\n\n\tprivate _themedTokenize(grammar: IGrammar, lines: string[]): IThemedToken[] {\n\t\tconst colorMap = TokenizationRegistry.getColorMap();\n\t\tlet state: StateStack | null = null;\n\t\tconst result: IThemedToken[] = [];\n\t\tlet resultLen = 0;\n\t\tfor (let i = 0, len = lines.length; i < len; i++) {\n\t\t\tconst line = lines[i];\n\n\t\t\tconst tokenizationResult = grammar.tokenizeLine2(line, state);\n\n\t\t\tfor (let j = 0, lenJ = tokenizationResult.tokens.length >>> 1; j < lenJ; j++) {\n\t\t\t\tconst startOffset = tokenizationResult.tokens[(j << 1)];\n\t\t\t\tconst metadata = tokenizationResult.tokens[(j << 1) + 1];\n\t\t\t\tconst endOffset = j + 1 < lenJ ? tokenizationResult.tokens[((j + 1) << 1)] : line.length;\n\t\t\t\tconst tokenText = line.substring(startOffset, endOffset);\n\n\t\t\t\tconst color = TokenMetadata.getForeground(metadata);\n\n\t\t\t\tresult[resultLen++] = {\n\t\t\t\t\ttext: tokenText,\n\t\t\t\t\tcolor: colorMap![color]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tstate = tokenizationResult.ruleStack;\n\t\t}\n\n\t\treturn result;\n\t}\n\n\tprivate _tokenize(grammar: IGrammar, lines: string[]): IToken[] {\n\t\tlet state: StateStack | null = null;\n\t\tconst result: IToken[] = [];\n\t\tlet resultLen = 0;\n\t\tfor (let i = 0, len = lines.length; i < len; i++) {\n\t\t\tconst line = lines[i];\n\n\t\t\tconst tokenizationResult = grammar.tokenizeLine(line, state);\n\t\t\tlet lastScopes: string | null = null;\n\n\t\t\tfor (let j = 0, lenJ = tokenizationResult.tokens.length; j < lenJ; j++) {\n\t\t\t\tconst token = tokenizationResult.tokens[j];\n\t\t\t\tconst tokenText = line.substring(token.startIndex, token.endIndex);\n\t\t\t\tconst tokenScopes = token.scopes.join(' ');\n\n\t\t\t\tif (lastScopes === tokenScopes) {\n\t\t\t\t\tresult[resultLen - 1].c += tokenText;\n\t\t\t\t} else {\n\t\t\t\t\tlastScopes = tokenScopes;\n\t\t\t\t\tresult[resultLen++] = {\n\t\t\t\t\t\tc: tokenText,\n\t\t\t\t\t\tt: tokenScopes,\n\t\t\t\t\t\tr: {\n\t\t\t\t\t\t\tdark_plus: undefined,\n\t\t\t\t\t\t\tlight_plus: undefined,\n\t\t\t\t\t\t\tdark_vs: undefined,\n\t\t\t\t\t\t\tlight_vs: undefined,\n\t\t\t\t\t\t\thc_black: undefined,\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstate = tokenizationResult.ruleStack;\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate async _getThemesResult(grammar: IGrammar, lines: string[]): Promise<IThemesResult> {\n\t\tconst currentTheme = this.themeService.getColorTheme();\n\n\t\tconst getThemeName = (id: string) => {\n\t\t\tconst part = 'vscode-theme-defaults-themes-';\n\t\t\tconst startIdx = id.indexOf(part);\n\t\t\tif (startIdx !== -1) {\n\t\t\t\treturn id.substring(startIdx + part.length, id.length - 5);\n\t\t\t}\n\t\t\treturn undefined;\n\t\t};\n\n\t\tconst result: IThemesResult = {};\n\n\t\tconst themeDatas = await this.themeService.getColorThemes();\n\t\tconst defaultThemes = themeDatas.filter(themeData => !!getThemeName(themeData.id));\n\t\tfor (const defaultTheme of defaultThemes) {\n\t\t\tconst themeId = defaultTheme.id;\n\t\t\tconst success = await this.themeService.setColorTheme(themeId, undefined);\n\t\t\tif (success) {\n\t\t\t\tconst themeName = getThemeName(themeId);\n\t\t\t\tresult[themeName!] = {\n\t\t\t\t\tdocument: new ThemeDocument(this.themeService.getColorTheme()),\n\t\t\t\t\ttokens: this._themedTokenize(grammar, lines)\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\tawait this.themeService.setColorTheme(currentTheme.id, undefined);\n\t\treturn result;\n\t}\n\n\tprivate _enrichResult(result: IToken[], themesResult: IThemesResult): void {\n\t\tconst index: { [themeName: string]: number } = {};\n\t\tconst themeNames = Object.keys(themesResult);\n\t\tfor (const themeName of themeNames) {\n\t\t\tindex[themeName] = 0;\n\t\t}\n\n\t\tfor (let i = 0, len = result.length; i < len; i++) {\n\t\t\tconst token = result[i];\n\n\t\t\tfor (const themeName of themeNames) {\n\t\t\t\tconst themedToken = themesResult[themeName].tokens[index[themeName]];\n\n\t\t\t\tthemedToken.text = themedToken.text.substr(token.c.length);\n\t\t\t\ttoken.r[themeName] = themesResult[themeName].document.explainTokenColor(token.t, themedToken.color);\n\t\t\t\tif (themedToken.text.length === 0) {\n\t\t\t\t\tindex[themeName]++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic captureSyntaxTokens(fileName: string, content: string): Promise<IToken[]> {\n\t\tconst languageId = this.languageService.guessLanguageIdByFilepathOrFirstLine(URI.file(fileName));\n\t\treturn this.textMateService.createTokenizer(languageId!).then((grammar) => {\n\t\t\tif (!grammar) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tconst lines = splitLines(content);\n\n\t\t\tconst result = this._tokenize(grammar, lines);\n\t\t\treturn this._getThemesResult(grammar, lines).then((themesResult) => {\n\t\t\t\tthis._enrichResult(result, themesResult);\n\t\t\t\treturn result.filter(t => t.c.length > 0);\n\t\t\t});\n\t\t});\n\t}\n}\n\nCommandsRegistry.registerCommand('_workbench.captureSyntaxTokens', function (accessor: ServicesAccessor, resource: URI) {\n\n\tconst process = (resource: URI) => {\n\t\tconst fileService = accessor.get(IFileService);\n\t\tconst fileName = basename(resource);\n\t\tconst snapper = accessor.get(IInstantiationService).createInstance(Snapper);\n\n\t\treturn fileService.readFile(resource).then(content => {\n\t\t\treturn snapper.captureSyntaxTokens(fileName, content.value.toString());\n\t\t});\n\t};\n\n\tif (!resource) {\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst file = editorService.activeEditor ? EditorResourceAccessor.getCanonicalUri(editorService.activeEditor, { filterByScheme: Schemas.file }) : null;\n\t\tif (file) {\n\t\t\tprocess(file).then(result => {\n\t\t\t\tconsole.log(result);\n\t\t\t});\n\t\t} else {\n\t\t\tconsole.log('No file editor active');\n\t\t}\n\t} else {\n\t\treturn process(resource);\n\t}\n\treturn undefined;\n});\n"]}