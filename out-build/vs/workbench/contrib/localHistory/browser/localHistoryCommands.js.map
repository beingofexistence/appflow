{"version":3,"sources":["vs/workbench/contrib/localHistory/browser/localHistoryCommands.ts"],"names":[],"mappings":"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","file":"localHistoryCommands.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { URI } from 'vs/base/common/uri';\nimport { Event } from 'vs/base/common/event';\nimport { Schemas } from 'vs/base/common/network';\nimport { toErrorMessage } from 'vs/base/common/errorMessage';\nimport { CancellationToken, CancellationTokenSource } from 'vs/base/common/cancellation';\nimport { IWorkingCopyHistoryEntry, IWorkingCopyHistoryService } from 'vs/workbench/services/workingCopy/common/workingCopyHistory';\nimport { API_OPEN_DIFF_EDITOR_COMMAND_ID } from 'vs/workbench/browser/parts/editor/editorCommands';\nimport { LocalHistoryFileSystemProvider } from 'vs/workbench/contrib/localHistory/browser/localHistoryFileSystemProvider';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from 'vs/platform/contextkey/common/contextkey';\nimport { ServicesAccessor } from 'vs/editor/browser/editorExtensions';\nimport { registerAction2, Action2, MenuId, MenuRegistry } from 'vs/platform/actions/common/actions';\nimport { basename, basenameOrAuthority, dirname } from 'vs/base/common/resources';\nimport { ICommandService } from 'vs/platform/commands/common/commands';\nimport { EditorResourceAccessor, SaveSourceRegistry, SideBySideEditor } from 'vs/workbench/common/editor';\nimport { IFileService } from 'vs/platform/files/common/files';\nimport { IWorkingCopyService } from 'vs/workbench/services/workingCopy/common/workingCopyService';\nimport { IDialogService } from 'vs/platform/dialogs/common/dialogs';\nimport { IEditorService } from 'vs/workbench/services/editor/common/editorService';\nimport { ActiveEditorContext, ResourceContextKey } from 'vs/workbench/common/contextkeys';\nimport { IQuickInputService, IQuickPickItem } from 'vs/platform/quickinput/common/quickInput';\nimport { getIconClasses } from 'vs/editor/common/services/getIconClasses';\nimport { IModelService } from 'vs/editor/common/services/model';\nimport { ILanguageService } from 'vs/editor/common/languages/language';\nimport { ILabelService } from 'vs/platform/label/common/label';\nimport { firstOrDefault } from 'vs/base/common/arrays';\nimport { getLocalHistoryDateFormatter, LOCAL_HISTORY_ICON_RESTORE, LOCAL_HISTORY_MENU_CONTEXT_KEY } from 'vs/workbench/contrib/localHistory/browser/localHistory';\nimport { IPathService } from 'vs/workbench/services/path/common/pathService';\n\nconst LOCAL_HISTORY_CATEGORY = { value: localize('localHistory.category', \"Local History\"), original: 'Local History' };\n\nexport interface ITimelineCommandArgument {\n\turi: URI;\n\thandle: string;\n}\n\n//#region Compare with File\n\nexport const COMPARE_WITH_FILE_LABEL = { value: localize('localHistory.compareWithFile', \"Compare with File\"), original: 'Compare with File' };\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.localHistory.compareWithFile',\n\t\t\ttitle: COMPARE_WITH_FILE_LABEL,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.TimelineItemContext,\n\t\t\t\tgroup: '1_compare',\n\t\t\t\torder: 1,\n\t\t\t\twhen: LOCAL_HISTORY_MENU_CONTEXT_KEY\n\t\t\t}\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor, item: ITimelineCommandArgument): Promise<void> {\n\t\tconst commandService = accessor.get(ICommandService);\n\t\tconst workingCopyHistoryService = accessor.get(IWorkingCopyHistoryService);\n\n\t\tconst { entry } = await findLocalHistoryEntry(workingCopyHistoryService, item);\n\t\tif (entry) {\n\t\t\treturn commandService.executeCommand(API_OPEN_DIFF_EDITOR_COMMAND_ID, ...toDiffEditorArguments(entry, entry.workingCopy.resource));\n\t\t}\n\t}\n});\n\n//#endregion\n\n//#region Compare with Previous\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.localHistory.compareWithPrevious',\n\t\t\ttitle: { value: localize('localHistory.compareWithPrevious', \"Compare with Previous\"), original: 'Compare with Previous' },\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.TimelineItemContext,\n\t\t\t\tgroup: '1_compare',\n\t\t\t\torder: 2,\n\t\t\t\twhen: LOCAL_HISTORY_MENU_CONTEXT_KEY\n\t\t\t}\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor, item: ITimelineCommandArgument): Promise<void> {\n\t\tconst commandService = accessor.get(ICommandService);\n\t\tconst workingCopyHistoryService = accessor.get(IWorkingCopyHistoryService);\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tconst { entry, previous } = await findLocalHistoryEntry(workingCopyHistoryService, item);\n\t\tif (entry) {\n\n\t\t\t// Without a previous entry, just show the entry directly\n\t\t\tif (!previous) {\n\t\t\t\treturn openEntry(entry, editorService);\n\t\t\t}\n\n\t\t\t// Open real diff editor\n\t\t\treturn commandService.executeCommand(API_OPEN_DIFF_EDITOR_COMMAND_ID, ...toDiffEditorArguments(previous, entry));\n\t\t}\n\t}\n});\n\n//#endregion\n\n//#region Select for Compare / Compare with Selected\n\nlet itemSelectedForCompare: ITimelineCommandArgument | undefined = undefined;\n\nconst LocalHistoryItemSelectedForCompare = new RawContextKey<boolean>('localHistoryItemSelectedForCompare', false, true);\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.localHistory.selectForCompare',\n\t\t\ttitle: { value: localize('localHistory.selectForCompare', \"Select for Compare\"), original: 'Select for Compare' },\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.TimelineItemContext,\n\t\t\t\tgroup: '2_compare_with',\n\t\t\t\torder: 2,\n\t\t\t\twhen: LOCAL_HISTORY_MENU_CONTEXT_KEY\n\t\t\t}\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor, item: ITimelineCommandArgument): Promise<void> {\n\t\tconst workingCopyHistoryService = accessor.get(IWorkingCopyHistoryService);\n\t\tconst contextKeyService = accessor.get(IContextKeyService);\n\n\t\tconst { entry } = await findLocalHistoryEntry(workingCopyHistoryService, item);\n\t\tif (entry) {\n\t\t\titemSelectedForCompare = item;\n\t\t\tLocalHistoryItemSelectedForCompare.bindTo(contextKeyService).set(true);\n\t\t}\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.localHistory.compareWithSelected',\n\t\t\ttitle: { value: localize('localHistory.compareWithSelected', \"Compare with Selected\"), original: 'Compare with Selected' },\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.TimelineItemContext,\n\t\t\t\tgroup: '2_compare_with',\n\t\t\t\torder: 1,\n\t\t\t\twhen: ContextKeyExpr.and(LOCAL_HISTORY_MENU_CONTEXT_KEY, LocalHistoryItemSelectedForCompare)\n\t\t\t}\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor, item: ITimelineCommandArgument): Promise<void> {\n\t\tconst workingCopyHistoryService = accessor.get(IWorkingCopyHistoryService);\n\t\tconst commandService = accessor.get(ICommandService);\n\n\t\tif (!itemSelectedForCompare) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst selectedEntry = (await findLocalHistoryEntry(workingCopyHistoryService, itemSelectedForCompare)).entry;\n\t\tif (!selectedEntry) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { entry } = await findLocalHistoryEntry(workingCopyHistoryService, item);\n\t\tif (entry) {\n\t\t\treturn commandService.executeCommand(API_OPEN_DIFF_EDITOR_COMMAND_ID, ...toDiffEditorArguments(selectedEntry, entry));\n\t\t}\n\t}\n});\n\n//#endregion\n\n//#region Show Contents\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.localHistory.open',\n\t\t\ttitle: { value: localize('localHistory.open', \"Show Contents\"), original: 'Show Contents' },\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.TimelineItemContext,\n\t\t\t\tgroup: '3_contents',\n\t\t\t\torder: 1,\n\t\t\t\twhen: LOCAL_HISTORY_MENU_CONTEXT_KEY\n\t\t\t}\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor, item: ITimelineCommandArgument): Promise<void> {\n\t\tconst workingCopyHistoryService = accessor.get(IWorkingCopyHistoryService);\n\t\tconst editorService = accessor.get(IEditorService);\n\n\t\tconst { entry } = await findLocalHistoryEntry(workingCopyHistoryService, item);\n\t\tif (entry) {\n\t\t\treturn openEntry(entry, editorService);\n\t\t}\n\t}\n});\n\n//#region Restore Contents\n\nconst RESTORE_CONTENTS_LABEL = { value: localize('localHistory.restore', \"Restore Contents\"), original: 'Restore Contents' };\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.localHistory.restoreViaEditor',\n\t\t\ttitle: RESTORE_CONTENTS_LABEL,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.EditorTitle,\n\t\t\t\tgroup: 'navigation',\n\t\t\t\torder: -10,\n\t\t\t\twhen: ResourceContextKey.Scheme.isEqualTo(LocalHistoryFileSystemProvider.SCHEMA)\n\t\t\t},\n\t\t\ticon: LOCAL_HISTORY_ICON_RESTORE\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor, uri: URI): Promise<void> {\n\t\tconst { associatedResource, location } = LocalHistoryFileSystemProvider.fromLocalHistoryFileSystem(uri);\n\n\t\treturn restore(accessor, { uri: associatedResource, handle: basenameOrAuthority(location) });\n\t}\n});\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.localHistory.restore',\n\t\t\ttitle: RESTORE_CONTENTS_LABEL,\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.TimelineItemContext,\n\t\t\t\tgroup: '3_contents',\n\t\t\t\torder: 2,\n\t\t\t\twhen: LOCAL_HISTORY_MENU_CONTEXT_KEY\n\t\t\t}\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor, item: ITimelineCommandArgument): Promise<void> {\n\t\treturn restore(accessor, item);\n\t}\n});\n\nconst restoreSaveSource = SaveSourceRegistry.registerSource('localHistoryRestore.source', localize('localHistoryRestore.source', \"File Restored\"));\n\nasync function restore(accessor: ServicesAccessor, item: ITimelineCommandArgument): Promise<void> {\n\tconst fileService = accessor.get(IFileService);\n\tconst dialogService = accessor.get(IDialogService);\n\tconst workingCopyService = accessor.get(IWorkingCopyService);\n\tconst workingCopyHistoryService = accessor.get(IWorkingCopyHistoryService);\n\tconst editorService = accessor.get(IEditorService);\n\n\tconst { entry } = await findLocalHistoryEntry(workingCopyHistoryService, item);\n\tif (entry) {\n\n\t\t// Ask for confirmation\n\t\tconst { confirmed } = await dialogService.confirm({\n\t\t\ttype: 'warning',\n\t\t\tmessage: localize('confirmRestoreMessage', \"Do you want to restore the contents of '{0}'?\", basename(entry.workingCopy.resource)),\n\t\t\tdetail: localize('confirmRestoreDetail', \"Restoring will discard any unsaved changes.\"),\n\t\t\tprimaryButton: localize({ key: 'restoreButtonLabel', comment: ['&& denotes a mnemonic'] }, \"&&Restore\")\n\t\t});\n\n\t\tif (!confirmed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Revert all dirty working copies for target\n\t\tconst workingCopies = workingCopyService.getAll(entry.workingCopy.resource);\n\t\tif (workingCopies) {\n\t\t\tfor (const workingCopy of workingCopies) {\n\t\t\t\tif (workingCopy.isDirty()) {\n\t\t\t\t\tawait workingCopy.revert({ soft: true });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Replace target with contents of history entry\n\t\ttry {\n\t\t\tawait fileService.cloneFile(entry.location, entry.workingCopy.resource);\n\t\t} catch (error) {\n\n\t\t\t// It is possible that we fail to copy the history entry to the\n\t\t\t// destination, for example when the destination is write protected.\n\t\t\t// In that case tell the user and return, it is still possible for\n\t\t\t// the user to manually copy the changes over from the diff editor.\n\n\t\t\tawait dialogService.error(localize('unableToRestore', \"Unable to restore '{0}'.\", basename(entry.workingCopy.resource)), toErrorMessage(error));\n\n\t\t\treturn;\n\t\t}\n\n\t\t// Restore all working copies for target\n\t\tif (workingCopies) {\n\t\t\tfor (const workingCopy of workingCopies) {\n\t\t\t\tawait workingCopy.revert({ force: true });\n\t\t\t}\n\t\t}\n\n\t\t// Open target\n\t\tawait editorService.openEditor({ resource: entry.workingCopy.resource });\n\n\t\t// Add new entry\n\t\tawait workingCopyHistoryService.addEntry({\n\t\t\tresource: entry.workingCopy.resource,\n\t\t\tsource: restoreSaveSource\n\t\t}, CancellationToken.None);\n\n\t\t// Close source\n\t\tawait closeEntry(entry, editorService);\n\t}\n}\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.localHistory.restoreViaPicker',\n\t\t\ttitle: { value: localize('localHistory.restoreViaPicker', \"Find Entry to Restore\"), original: 'Find Entry to Restore' },\n\t\t\tf1: true,\n\t\t\tcategory: LOCAL_HISTORY_CATEGORY\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst workingCopyHistoryService = accessor.get(IWorkingCopyHistoryService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst modelService = accessor.get(IModelService);\n\t\tconst languageService = accessor.get(ILanguageService);\n\t\tconst labelService = accessor.get(ILabelService);\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst fileService = accessor.get(IFileService);\n\t\tconst commandService = accessor.get(ICommandService);\n\n\t\t// Show all resources with associated history entries in picker\n\t\t// with progress because this operation will take longer the more\n\t\t// files have been saved overall.\n\n\t\tconst resourcePicker = quickInputService.createQuickPick<IQuickPickItem & { resource: URI }>();\n\n\t\tlet cts = new CancellationTokenSource();\n\t\tresourcePicker.onDidHide(() => cts.dispose(true));\n\n\t\tresourcePicker.busy = true;\n\t\tresourcePicker.show();\n\n\t\tconst resources = await workingCopyHistoryService.getAll(cts.token);\n\n\t\tresourcePicker.busy = false;\n\t\tresourcePicker.placeholder = localize('restoreViaPicker.filePlaceholder', \"Select the file to show local history for\");\n\t\tresourcePicker.matchOnLabel = true;\n\t\tresourcePicker.matchOnDescription = true;\n\t\tresourcePicker.items = resources.map(resource => ({\n\t\t\tresource,\n\t\t\tlabel: basenameOrAuthority(resource),\n\t\t\tdescription: labelService.getUriLabel(dirname(resource), { relative: true }),\n\t\t\ticonClasses: getIconClasses(modelService, languageService, resource)\n\t\t})).sort((r1, r2) => r1.resource.fsPath < r2.resource.fsPath ? -1 : 1);\n\n\t\tawait Event.toPromise(resourcePicker.onDidAccept);\n\t\tresourcePicker.dispose();\n\n\t\tconst resource = firstOrDefault(resourcePicker.selectedItems)?.resource;\n\t\tif (!resource) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Show all entries for the picked resource in another picker\n\t\t// and open the entry in the end that was selected by the user\n\n\t\tconst entryPicker = quickInputService.createQuickPick<IQuickPickItem & { entry: IWorkingCopyHistoryEntry }>();\n\n\t\tcts = new CancellationTokenSource();\n\t\tentryPicker.onDidHide(() => cts.dispose(true));\n\n\t\tentryPicker.busy = true;\n\t\tentryPicker.show();\n\n\t\tconst entries = await workingCopyHistoryService.getEntries(resource, cts.token);\n\n\t\tentryPicker.busy = false;\n\t\tentryPicker.placeholder = localize('restoreViaPicker.entryPlaceholder', \"Select the local history entry to open\");\n\t\tentryPicker.matchOnLabel = true;\n\t\tentryPicker.matchOnDescription = true;\n\t\tentryPicker.items = Array.from(entries).reverse().map(entry => ({\n\t\t\tentry,\n\t\t\tlabel: `$(circle-outline) ${SaveSourceRegistry.getSourceLabel(entry.source)}`,\n\t\t\tdescription: toLocalHistoryEntryDateLabel(entry.timestamp)\n\t\t}));\n\n\t\tawait Event.toPromise(entryPicker.onDidAccept);\n\t\tentryPicker.dispose();\n\n\t\tconst selectedItem = firstOrDefault(entryPicker.selectedItems);\n\t\tif (!selectedItem) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst resourceExists = await fileService.exists(selectedItem.entry.workingCopy.resource);\n\t\tif (resourceExists) {\n\t\t\treturn commandService.executeCommand(API_OPEN_DIFF_EDITOR_COMMAND_ID, ...toDiffEditorArguments(selectedItem.entry, selectedItem.entry.workingCopy.resource));\n\t\t}\n\n\t\treturn openEntry(selectedItem.entry, editorService);\n\t}\n});\n\nMenuRegistry.appendMenuItem(MenuId.TimelineTitle, { command: { id: 'workbench.action.localHistory.restoreViaPicker', title: { value: localize('localHistory.restoreViaPickerMenu', \"Local History: Find Entry to Restore...\"), original: 'Local History: Find Entry to Restore...' } }, group: 'submenu', order: 1 });\n\n//#endregion\n\n//#region Rename\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.localHistory.rename',\n\t\t\ttitle: { value: localize('localHistory.rename', \"Rename\"), original: 'Rename' },\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.TimelineItemContext,\n\t\t\t\tgroup: '5_edit',\n\t\t\t\torder: 1,\n\t\t\t\twhen: LOCAL_HISTORY_MENU_CONTEXT_KEY\n\t\t\t}\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor, item: ITimelineCommandArgument): Promise<void> {\n\t\tconst workingCopyHistoryService = accessor.get(IWorkingCopyHistoryService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\n\t\tconst { entry } = await findLocalHistoryEntry(workingCopyHistoryService, item);\n\t\tif (entry) {\n\t\t\tconst inputBox = quickInputService.createInputBox();\n\t\t\tinputBox.title = localize('renameLocalHistoryEntryTitle', \"Rename Local History Entry\");\n\t\t\tinputBox.ignoreFocusOut = true;\n\t\t\tinputBox.placeholder = localize('renameLocalHistoryPlaceholder', \"Enter the new name of the local history entry\");\n\t\t\tinputBox.value = SaveSourceRegistry.getSourceLabel(entry.source);\n\t\t\tinputBox.show();\n\t\t\tinputBox.onDidAccept(() => {\n\t\t\t\tif (inputBox.value) {\n\t\t\t\t\tworkingCopyHistoryService.updateEntry(entry, { source: inputBox.value }, CancellationToken.None);\n\t\t\t\t}\n\t\t\t\tinputBox.dispose();\n\t\t\t});\n\t\t}\n\t}\n});\n\n//#endregion\n\n//#region Delete\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.localHistory.delete',\n\t\t\ttitle: { value: localize('localHistory.delete', \"Delete\"), original: 'Delete' },\n\t\t\tmenu: {\n\t\t\t\tid: MenuId.TimelineItemContext,\n\t\t\t\tgroup: '5_edit',\n\t\t\t\torder: 2,\n\t\t\t\twhen: LOCAL_HISTORY_MENU_CONTEXT_KEY\n\t\t\t}\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor, item: ITimelineCommandArgument): Promise<void> {\n\t\tconst workingCopyHistoryService = accessor.get(IWorkingCopyHistoryService);\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst dialogService = accessor.get(IDialogService);\n\n\t\tconst { entry } = await findLocalHistoryEntry(workingCopyHistoryService, item);\n\t\tif (entry) {\n\n\t\t\t// Ask for confirmation\n\t\t\tconst { confirmed } = await dialogService.confirm({\n\t\t\t\ttype: 'warning',\n\t\t\t\tmessage: localize('confirmDeleteMessage', \"Do you want to delete the local history entry of '{0}' from {1}?\", entry.workingCopy.name, toLocalHistoryEntryDateLabel(entry.timestamp)),\n\t\t\t\tdetail: localize('confirmDeleteDetail', \"This action is irreversible!\"),\n\t\t\t\tprimaryButton: localize({ key: 'deleteButtonLabel', comment: ['&& denotes a mnemonic'] }, \"&&Delete\"),\n\t\t\t});\n\n\t\t\tif (!confirmed) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Remove via service\n\t\t\tawait workingCopyHistoryService.removeEntry(entry, CancellationToken.None);\n\n\t\t\t// Close any opened editors\n\t\t\tawait closeEntry(entry, editorService);\n\t\t}\n\t}\n});\n\n//#endregion\n\n//#region Delete All\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.localHistory.deleteAll',\n\t\t\ttitle: { value: localize('localHistory.deleteAll', \"Delete All\"), original: 'Delete All' },\n\t\t\tf1: true,\n\t\t\tcategory: LOCAL_HISTORY_CATEGORY\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst dialogService = accessor.get(IDialogService);\n\t\tconst workingCopyHistoryService = accessor.get(IWorkingCopyHistoryService);\n\n\t\t// Ask for confirmation\n\t\tconst { confirmed } = await dialogService.confirm({\n\t\t\ttype: 'warning',\n\t\t\tmessage: localize('confirmDeleteAllMessage', \"Do you want to delete all entries of all files in local history?\"),\n\t\t\tdetail: localize('confirmDeleteAllDetail', \"This action is irreversible!\"),\n\t\t\tprimaryButton: localize({ key: 'deleteAllButtonLabel', comment: ['&& denotes a mnemonic'] }, \"&&Delete All\"),\n\t\t});\n\n\t\tif (!confirmed) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remove via service\n\t\tawait workingCopyHistoryService.removeAll(CancellationToken.None);\n\t}\n});\n\n//#endregion\n\n//#region Create\n\nregisterAction2(class extends Action2 {\n\tconstructor() {\n\t\tsuper({\n\t\t\tid: 'workbench.action.localHistory.create',\n\t\t\ttitle: { value: localize('localHistory.create', \"Create Entry\"), original: 'Create Entry' },\n\t\t\tf1: true,\n\t\t\tcategory: LOCAL_HISTORY_CATEGORY,\n\t\t\tprecondition: ActiveEditorContext\n\t\t});\n\t}\n\tasync run(accessor: ServicesAccessor): Promise<void> {\n\t\tconst workingCopyHistoryService = accessor.get(IWorkingCopyHistoryService);\n\t\tconst quickInputService = accessor.get(IQuickInputService);\n\t\tconst editorService = accessor.get(IEditorService);\n\t\tconst labelService = accessor.get(ILabelService);\n\t\tconst pathService = accessor.get(IPathService);\n\n\t\tconst resource = EditorResourceAccessor.getOriginalUri(editorService.activeEditor, { supportSideBySide: SideBySideEditor.PRIMARY });\n\t\tif (resource?.scheme !== pathService.defaultUriScheme && resource?.scheme !== Schemas.vscodeUserData) {\n\t\t\treturn; // only enable for selected schemes\n\t\t}\n\n\t\tconst inputBox = quickInputService.createInputBox();\n\t\tinputBox.title = localize('createLocalHistoryEntryTitle', \"Create Local History Entry\");\n\t\tinputBox.ignoreFocusOut = true;\n\t\tinputBox.placeholder = localize('createLocalHistoryPlaceholder', \"Enter the new name of the local history entry for '{0}'\", labelService.getUriBasenameLabel(resource));\n\t\tinputBox.show();\n\t\tinputBox.onDidAccept(async () => {\n\t\t\tconst entrySource = inputBox.value;\n\t\t\tinputBox.dispose();\n\n\t\t\tif (entrySource) {\n\t\t\t\tawait workingCopyHistoryService.addEntry({ resource, source: inputBox.value }, CancellationToken.None);\n\t\t\t}\n\t\t});\n\t}\n});\n\n//#endregion\n\n//#region Helpers\n\nasync function openEntry(entry: IWorkingCopyHistoryEntry, editorService: IEditorService): Promise<void> {\n\tconst resource = LocalHistoryFileSystemProvider.toLocalHistoryFileSystem({ location: entry.location, associatedResource: entry.workingCopy.resource });\n\n\tawait editorService.openEditor({\n\t\tresource,\n\t\tlabel: localize('localHistoryEditorLabel', \"{0} ({1} • {2})\", entry.workingCopy.name, SaveSourceRegistry.getSourceLabel(entry.source), toLocalHistoryEntryDateLabel(entry.timestamp))\n\t});\n}\n\nasync function closeEntry(entry: IWorkingCopyHistoryEntry, editorService: IEditorService): Promise<void> {\n\tconst resource = LocalHistoryFileSystemProvider.toLocalHistoryFileSystem({ location: entry.location, associatedResource: entry.workingCopy.resource });\n\n\tconst editors = editorService.findEditors(resource, { supportSideBySide: SideBySideEditor.ANY });\n\tawait editorService.closeEditors(editors, { preserveFocus: true });\n}\n\nexport function toDiffEditorArguments(entry: IWorkingCopyHistoryEntry, resource: URI): unknown[];\nexport function toDiffEditorArguments(previousEntry: IWorkingCopyHistoryEntry, entry: IWorkingCopyHistoryEntry): unknown[];\nexport function toDiffEditorArguments(arg1: IWorkingCopyHistoryEntry, arg2: IWorkingCopyHistoryEntry | URI): unknown[] {\n\n\t// Left hand side is always a working copy history entry\n\tconst originalResource = LocalHistoryFileSystemProvider.toLocalHistoryFileSystem({ location: arg1.location, associatedResource: arg1.workingCopy.resource });\n\n\tlet label: string;\n\n\t// Right hand side depends on how the method was called\n\t// and is either another working copy history entry\n\t// or the file on disk.\n\n\tlet modifiedResource: URI;\n\n\t// Compare with file on disk\n\tif (URI.isUri(arg2)) {\n\t\tconst resource = arg2;\n\n\t\tmodifiedResource = resource;\n\t\tlabel = localize('localHistoryCompareToFileEditorLabel', \"{0} ({1} • {2}) ↔ {3}\", arg1.workingCopy.name, SaveSourceRegistry.getSourceLabel(arg1.source), toLocalHistoryEntryDateLabel(arg1.timestamp), arg1.workingCopy.name);\n\t}\n\n\t// Compare with another entry\n\telse {\n\t\tconst modified = arg2;\n\n\t\tmodifiedResource = LocalHistoryFileSystemProvider.toLocalHistoryFileSystem({ location: modified.location, associatedResource: modified.workingCopy.resource });\n\t\tlabel = localize('localHistoryCompareToPreviousEditorLabel', \"{0} ({1} • {2}) ↔ {3} ({4} • {5})\", arg1.workingCopy.name, SaveSourceRegistry.getSourceLabel(arg1.source), toLocalHistoryEntryDateLabel(arg1.timestamp), modified.workingCopy.name, SaveSourceRegistry.getSourceLabel(modified.source), toLocalHistoryEntryDateLabel(modified.timestamp));\n\t}\n\n\treturn [\n\t\toriginalResource,\n\t\tmodifiedResource,\n\t\tlabel,\n\t\tundefined // important to keep order of arguments in command proper\n\t];\n}\n\nexport async function findLocalHistoryEntry(workingCopyHistoryService: IWorkingCopyHistoryService, descriptor: ITimelineCommandArgument): Promise<{ entry: IWorkingCopyHistoryEntry | undefined; previous: IWorkingCopyHistoryEntry | undefined }> {\n\tconst entries = await workingCopyHistoryService.getEntries(descriptor.uri, CancellationToken.None);\n\n\tlet currentEntry: IWorkingCopyHistoryEntry | undefined = undefined;\n\tlet previousEntry: IWorkingCopyHistoryEntry | undefined = undefined;\n\tfor (let i = 0; i < entries.length; i++) {\n\t\tconst entry = entries[i];\n\n\t\tif (entry.id === descriptor.handle) {\n\t\t\tcurrentEntry = entry;\n\t\t\tpreviousEntry = entries[i - 1];\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn {\n\t\tentry: currentEntry,\n\t\tprevious: previousEntry\n\t};\n}\n\nconst SEP = /\\//g;\nfunction toLocalHistoryEntryDateLabel(timestamp: number): string {\n\treturn `${getLocalHistoryDateFormatter().format(timestamp).replace(SEP, '-')}`; // preserving `/` will break editor labels, so replace it with a non-path symbol\n}\n\n//#endregion\n"]}