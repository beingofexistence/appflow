{"version":3,"sources":["vs/workbench/contrib/localization/electron-sandbox/localization.contribution.ts"],"names":[],"mappings":"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","file":"localization.contribution.js","sourceRoot":"file:///workspace/appflow/src","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { localize } from 'vs/nls';\nimport { Registry } from 'vs/platform/registry/common/platform';\nimport { Extensions as WorkbenchExtensions, IWorkbenchContributionsRegistry } from 'vs/workbench/common/contributions';\nimport { LifecyclePhase } from 'vs/workbench/services/lifecycle/common/lifecycle';\nimport * as platform from 'vs/base/common/platform';\nimport { IExtensionManagementService, IExtensionGalleryService, InstallOperation, ILocalExtension, InstallExtensionResult, DidUninstallExtensionEvent } from 'vs/platform/extensionManagement/common/extensionManagement';\nimport { INotificationService, NeverShowAgainScope } from 'vs/platform/notification/common/notification';\nimport Severity from 'vs/base/common/severity';\nimport { IStorageService, StorageScope, StorageTarget } from 'vs/platform/storage/common/storage';\nimport { VIEWLET_ID as EXTENSIONS_VIEWLET_ID, IExtensionsViewPaneContainer } from 'vs/workbench/contrib/extensions/common/extensions';\nimport { minimumTranslatedStrings } from 'vs/workbench/contrib/localization/electron-sandbox/minimalTranslations';\nimport { ITelemetryService } from 'vs/platform/telemetry/common/telemetry';\nimport { CancellationToken } from 'vs/base/common/cancellation';\nimport { IPaneCompositePartService } from 'vs/workbench/services/panecomposite/browser/panecomposite';\nimport { ViewContainerLocation } from 'vs/workbench/common/views';\nimport { ILocaleService } from 'vs/workbench/services/localization/common/locale';\nimport { IProductService } from 'vs/platform/product/common/productService';\nimport { BaseLocalizationWorkbenchContribution } from 'vs/workbench/contrib/localization/common/localization.contribution';\n\nclass NativeLocalizationWorkbenchContribution extends BaseLocalizationWorkbenchContribution {\n\tprivate static LANGUAGEPACK_SUGGESTION_IGNORE_STORAGE_KEY = 'extensionsAssistant/languagePackSuggestionIgnore';\n\n\tconstructor(\n\t\t@INotificationService private readonly notificationService: INotificationService,\n\t\t@ILocaleService private readonly localeService: ILocaleService,\n\t\t@IProductService private readonly productService: IProductService,\n\t\t@IStorageService private readonly storageService: IStorageService,\n\t\t@IExtensionManagementService private readonly extensionManagementService: IExtensionManagementService,\n\t\t@IExtensionGalleryService private readonly galleryService: IExtensionGalleryService,\n\t\t@IPaneCompositePartService private readonly paneCompositeService: IPaneCompositePartService,\n\t\t@ITelemetryService private readonly telemetryService: ITelemetryService,\n\t) {\n\t\tsuper();\n\n\t\tthis.checkAndInstall();\n\t\tthis._register(this.extensionManagementService.onDidInstallExtensions(e => this.onDidInstallExtensions(e)));\n\t\tthis._register(this.extensionManagementService.onDidUninstallExtension(e => this.onDidUninstallExtension(e)));\n\t}\n\n\tprivate async onDidInstallExtensions(results: readonly InstallExtensionResult[]): Promise<void> {\n\t\tfor (const result of results) {\n\t\t\tif (result.operation === InstallOperation.Install && result.local) {\n\t\t\t\tawait this.onDidInstallExtension(result.local, !!result.context?.extensionsSync);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tprivate async onDidInstallExtension(localExtension: ILocalExtension, fromSettingsSync: boolean): Promise<void> {\n\t\tconst localization = localExtension.manifest.contributes?.localizations?.[0];\n\t\tif (!localization || platform.language === localization.languageId) {\n\t\t\treturn;\n\t\t}\n\t\tconst { languageId, languageName } = localization;\n\n\t\tthis.notificationService.prompt(\n\t\t\tSeverity.Info,\n\t\t\tlocalize('updateLocale', \"Would you like to change {0}'s display language to {1} and restart?\", this.productService.nameLong, languageName || languageId),\n\t\t\t[{\n\t\t\t\tlabel: localize('changeAndRestart', \"Change Language and Restart\"),\n\t\t\t\trun: async () => {\n\t\t\t\t\tawait this.localeService.setLocale({\n\t\t\t\t\t\tid: languageId,\n\t\t\t\t\t\tlabel: languageName ?? languageId,\n\t\t\t\t\t\textensionId: localExtension.identifier.id,\n\t\t\t\t\t\t// If settings sync installs the language pack, then we would have just shown the notification so no\n\t\t\t\t\t\t// need to show the dialog.\n\t\t\t\t\t}, true);\n\t\t\t\t}\n\t\t\t}],\n\t\t\t{\n\t\t\t\tsticky: true,\n\t\t\t\tneverShowAgain: { id: 'langugage.update.donotask', isSecondary: true, scope: NeverShowAgainScope.APPLICATION }\n\t\t\t}\n\t\t);\n\t}\n\n\tprivate async onDidUninstallExtension(_event: DidUninstallExtensionEvent): Promise<void> {\n\t\tif (!await this.isLocaleInstalled(platform.language)) {\n\t\t\tthis.localeService.setLocale({\n\t\t\t\tid: 'en',\n\t\t\t\tlabel: 'English'\n\t\t\t});\n\t\t}\n\t}\n\n\tprivate async checkAndInstall(): Promise<void> {\n\t\tconst language = platform.language;\n\t\tlet locale = platform.locale ?? '';\n\t\tconst languagePackSuggestionIgnoreList: string[] = JSON.parse(\n\t\t\tthis.storageService.get(\n\t\t\t\tNativeLocalizationWorkbenchContribution.LANGUAGEPACK_SUGGESTION_IGNORE_STORAGE_KEY,\n\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\t'[]'\n\t\t\t)\n\t\t);\n\n\t\tif (!this.galleryService.isEnabled()) {\n\t\t\treturn;\n\t\t}\n\t\tif (!language || !locale || locale === 'en' || locale.indexOf('en-') === 0) {\n\t\t\treturn;\n\t\t}\n\t\tif (locale.startsWith(language) || languagePackSuggestionIgnoreList.includes(locale)) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst installed = await this.isLocaleInstalled(locale);\n\t\tif (installed) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst fullLocale = locale;\n\t\tlet tagResult = await this.galleryService.query({ text: `tag:lp-${locale}` }, CancellationToken.None);\n\t\tif (tagResult.total === 0) {\n\t\t\t// Trim the locale and try again.\n\t\t\tlocale = locale.split('-')[0];\n\t\t\ttagResult = await this.galleryService.query({ text: `tag:lp-${locale}` }, CancellationToken.None);\n\t\t\tif (tagResult.total === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tconst extensionToInstall = tagResult.total === 1 ? tagResult.firstPage[0] : tagResult.firstPage.find(e => e.publisher === 'MS-CEINTL' && e.name.startsWith('vscode-language-pack'));\n\t\tconst extensionToFetchTranslationsFrom = extensionToInstall ?? tagResult.firstPage[0];\n\n\t\tif (!extensionToFetchTranslationsFrom.assets.manifest) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst [manifest, translation] = await Promise.all([\n\t\t\tthis.galleryService.getManifest(extensionToFetchTranslationsFrom, CancellationToken.None),\n\t\t\tthis.galleryService.getCoreTranslation(extensionToFetchTranslationsFrom, locale)\n\t\t]);\n\t\tconst loc = manifest?.contributes?.localizations?.find(x => locale.startsWith(x.languageId.toLowerCase()));\n\t\tconst languageName = loc ? (loc.languageName || locale) : locale;\n\t\tconst languageDisplayName = loc ? (loc.localizedLanguageName || loc.languageName || locale) : locale;\n\t\tconst translationsFromPack: { [key: string]: string } = translation?.contents?.['vs/workbench/contrib/localization/electron-sandbox/minimalTranslations'] ?? {};\n\t\tconst promptMessageKey = extensionToInstall ? 'installAndRestartMessage' : 'showLanguagePackExtensions';\n\t\tconst useEnglish = !translationsFromPack[promptMessageKey];\n\n\t\tconst translations: { [key: string]: string } = {};\n\t\tObject.keys(minimumTranslatedStrings).forEach(key => {\n\t\t\tif (!translationsFromPack[key] || useEnglish) {\n\t\t\t\ttranslations[key] = minimumTranslatedStrings[key].replace('{0}', () => languageName);\n\t\t\t} else {\n\t\t\t\ttranslations[key] = `${translationsFromPack[key].replace('{0}', () => languageDisplayName)} (${minimumTranslatedStrings[key].replace('{0}', () => languageName)})`;\n\t\t\t}\n\t\t});\n\n\t\tconst logUserReaction = (userReaction: string) => {\n\t\t\t/* __GDPR__\n\t\t\t\t\"languagePackSuggestion:popup\" : {\n\t\t\t\t\t\"owner\": \"TylerLeonhardt\",\n\t\t\t\t\t\"userReaction\" : { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" },\n\t\t\t\t\t\"language\": { \"classification\": \"SystemMetaData\", \"purpose\": \"FeatureInsight\" }\n\t\t\t\t}\n\t\t\t*/\n\t\t\tthis.telemetryService.publicLog('languagePackSuggestion:popup', { userReaction, language: locale });\n\t\t};\n\n\t\tconst searchAction = {\n\t\t\tlabel: translations['searchMarketplace'],\n\t\t\trun: async () => {\n\t\t\t\tlogUserReaction('search');\n\t\t\t\tconst viewlet = await this.paneCompositeService.openPaneComposite(EXTENSIONS_VIEWLET_ID, ViewContainerLocation.Sidebar, true);\n\t\t\t\tif (!viewlet) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconst container = viewlet.getViewPaneContainer();\n\t\t\t\tif (!container) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t(container as IExtensionsViewPaneContainer).search(`tag:lp-${locale}`);\n\t\t\t\tcontainer.focus();\n\t\t\t}\n\t\t};\n\n\t\tconst installAndRestartAction = {\n\t\t\tlabel: translations['installAndRestart'],\n\t\t\trun: async () => {\n\t\t\t\tlogUserReaction('installAndRestart');\n\t\t\t\tawait this.localeService.setLocale({\n\t\t\t\t\tid: locale,\n\t\t\t\t\tlabel: languageName,\n\t\t\t\t\textensionId: extensionToInstall?.identifier.id,\n\t\t\t\t\tgalleryExtension: extensionToInstall\n\t\t\t\t\t// The user will be prompted if they want to install the language pack before this.\n\t\t\t\t}, true);\n\t\t\t}\n\t\t};\n\n\t\tconst promptMessage = translations[promptMessageKey];\n\n\t\tthis.notificationService.prompt(\n\t\t\tSeverity.Info,\n\t\t\tpromptMessage,\n\t\t\t[extensionToInstall ? installAndRestartAction : searchAction,\n\t\t\t{\n\t\t\t\tlabel: localize('neverAgain', \"Don't Show Again\"),\n\t\t\t\tisSecondary: true,\n\t\t\t\trun: () => {\n\t\t\t\t\tlanguagePackSuggestionIgnoreList.push(fullLocale);\n\t\t\t\t\tthis.storageService.store(\n\t\t\t\t\t\tNativeLocalizationWorkbenchContribution.LANGUAGEPACK_SUGGESTION_IGNORE_STORAGE_KEY,\n\t\t\t\t\t\tJSON.stringify(languagePackSuggestionIgnoreList),\n\t\t\t\t\t\tStorageScope.APPLICATION,\n\t\t\t\t\t\tStorageTarget.USER\n\t\t\t\t\t);\n\t\t\t\t\tlogUserReaction('neverShowAgain');\n\t\t\t\t}\n\t\t\t}],\n\t\t\t{\n\t\t\t\tonCancel: () => {\n\t\t\t\t\tlogUserReaction('cancelled');\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tprivate async isLocaleInstalled(locale: string): Promise<boolean> {\n\t\tconst installed = await this.extensionManagementService.getInstalled();\n\t\treturn installed.some(i => !!i.manifest.contributes?.localizations?.length\n\t\t\t&& i.manifest.contributes.localizations.some(l => locale.startsWith(l.languageId.toLowerCase())));\n\t}\n}\n\nconst workbenchRegistry = Registry.as<IWorkbenchContributionsRegistry>(WorkbenchExtensions.Workbench);\nworkbenchRegistry.registerWorkbenchContribution(NativeLocalizationWorkbenchContribution, LifecyclePhase.Eventually);\n"]}