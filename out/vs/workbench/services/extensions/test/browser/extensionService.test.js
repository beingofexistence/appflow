/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
define(["require", "exports", "assert", "vs/base/common/event", "vs/base/common/lifecycle", "vs/base/test/common/mock", "vs/base/test/common/utils", "vs/platform/configuration/common/configuration", "vs/platform/configuration/test/common/testConfigurationService", "vs/platform/dialogs/test/common/testDialogService", "vs/platform/environment/common/environment", "vs/platform/files/common/files", "vs/platform/instantiation/common/instantiation", "vs/platform/instantiation/test/common/instantiationServiceMock", "vs/platform/log/common/log", "vs/platform/notification/common/notification", "vs/platform/notification/test/common/testNotificationService", "vs/platform/product/common/product", "vs/platform/product/common/productService", "vs/platform/remote/browser/remoteAuthorityResolverService", "vs/platform/remote/common/remoteAuthorityResolver", "vs/platform/remote/common/remoteExtensionsScanner", "vs/platform/telemetry/common/telemetry", "vs/platform/telemetry/common/telemetryUtils", "vs/platform/uriIdentity/common/uriIdentity", "vs/platform/uriIdentity/common/uriIdentityService", "vs/platform/userDataProfile/common/userDataProfile", "vs/platform/workspace/common/workspace", "vs/platform/workspace/common/workspaceTrust", "vs/workbench/services/environment/common/environmentService", "vs/workbench/services/extensionManagement/common/extensionManagement", "vs/workbench/services/extensions/browser/extensionService", "vs/workbench/services/extensions/common/abstractExtensionService", "vs/workbench/services/extensions/common/extensionManifestPropertiesService", "vs/workbench/services/extensions/common/extensions", "vs/workbench/services/extensions/common/extensionsProposedApi", "vs/workbench/services/lifecycle/common/lifecycle", "vs/workbench/services/remote/common/remoteAgentService", "vs/workbench/services/userDataProfile/common/userDataProfile", "vs/workbench/services/workspaces/common/workspaceTrust", "vs/workbench/test/browser/workbenchTestServices", "vs/workbench/test/common/workbenchTestServices"], function (require, exports, assert, event_1, lifecycle_1, mock_1, utils_1, configuration_1, testConfigurationService_1, testDialogService_1, environment_1, files_1, instantiation_1, instantiationServiceMock_1, log_1, notification_1, testNotificationService_1, product_1, productService_1, remoteAuthorityResolverService_1, remoteAuthorityResolver_1, remoteExtensionsScanner_1, telemetry_1, telemetryUtils_1, uriIdentity_1, uriIdentityService_1, userDataProfile_1, workspace_1, workspaceTrust_1, environmentService_1, extensionManagement_1, extensionService_1, abstractExtensionService_1, extensionManifestPropertiesService_1, extensions_1, extensionsProposedApi_1, lifecycle_2, remoteAgentService_1, userDataProfile_2, workspaceTrust_2, workbenchTestServices_1, workbenchTestServices_2) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    suite('BrowserExtensionService', () => {
        (0, utils_1.ensureNoDisposablesAreLeakedInTestSuite)();
        test('pickRunningLocation', () => {
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation([], false, false, 0 /* ExtensionRunningPreference.None */), null);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation([], false, true, 0 /* ExtensionRunningPreference.None */), null);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation([], true, false, 0 /* ExtensionRunningPreference.None */), null);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation([], true, true, 0 /* ExtensionRunningPreference.None */), null);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['ui'], false, false, 0 /* ExtensionRunningPreference.None */), null);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['ui'], false, true, 0 /* ExtensionRunningPreference.None */), 3 /* ExtensionHostKind.Remote */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['ui'], true, false, 0 /* ExtensionRunningPreference.None */), null);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['ui'], true, true, 0 /* ExtensionRunningPreference.None */), 3 /* ExtensionHostKind.Remote */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['workspace'], false, false, 0 /* ExtensionRunningPreference.None */), null);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['workspace'], false, true, 0 /* ExtensionRunningPreference.None */), 3 /* ExtensionHostKind.Remote */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['workspace'], true, false, 0 /* ExtensionRunningPreference.None */), null);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['workspace'], true, true, 0 /* ExtensionRunningPreference.None */), 3 /* ExtensionHostKind.Remote */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['web'], false, false, 0 /* ExtensionRunningPreference.None */), null);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['web'], false, true, 0 /* ExtensionRunningPreference.None */), 2 /* ExtensionHostKind.LocalWebWorker */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['web'], true, false, 0 /* ExtensionRunningPreference.None */), 2 /* ExtensionHostKind.LocalWebWorker */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['web'], true, true, 0 /* ExtensionRunningPreference.None */), 2 /* ExtensionHostKind.LocalWebWorker */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['ui', 'workspace'], false, false, 0 /* ExtensionRunningPreference.None */), null);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['ui', 'workspace'], false, true, 0 /* ExtensionRunningPreference.None */), 3 /* ExtensionHostKind.Remote */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['ui', 'workspace'], true, false, 0 /* ExtensionRunningPreference.None */), null);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['ui', 'workspace'], true, true, 0 /* ExtensionRunningPreference.None */), 3 /* ExtensionHostKind.Remote */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['workspace', 'ui'], false, false, 0 /* ExtensionRunningPreference.None */), null);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['workspace', 'ui'], false, true, 0 /* ExtensionRunningPreference.None */), 3 /* ExtensionHostKind.Remote */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['workspace', 'ui'], true, false, 0 /* ExtensionRunningPreference.None */), null);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['workspace', 'ui'], true, true, 0 /* ExtensionRunningPreference.None */), 3 /* ExtensionHostKind.Remote */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['web', 'workspace'], false, false, 0 /* ExtensionRunningPreference.None */), null);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['web', 'workspace'], false, true, 0 /* ExtensionRunningPreference.None */), 2 /* ExtensionHostKind.LocalWebWorker */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['web', 'workspace'], true, false, 0 /* ExtensionRunningPreference.None */), 2 /* ExtensionHostKind.LocalWebWorker */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['web', 'workspace'], true, true, 0 /* ExtensionRunningPreference.None */), 2 /* ExtensionHostKind.LocalWebWorker */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['workspace', 'web'], false, false, 0 /* ExtensionRunningPreference.None */), null);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['workspace', 'web'], false, true, 0 /* ExtensionRunningPreference.None */), 3 /* ExtensionHostKind.Remote */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['workspace', 'web'], true, false, 0 /* ExtensionRunningPreference.None */), 2 /* ExtensionHostKind.LocalWebWorker */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['workspace', 'web'], true, true, 0 /* ExtensionRunningPreference.None */), 3 /* ExtensionHostKind.Remote */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['ui', 'web'], false, false, 0 /* ExtensionRunningPreference.None */), null);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['ui', 'web'], false, true, 0 /* ExtensionRunningPreference.None */), 2 /* ExtensionHostKind.LocalWebWorker */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['ui', 'web'], true, false, 0 /* ExtensionRunningPreference.None */), 2 /* ExtensionHostKind.LocalWebWorker */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['ui', 'web'], true, true, 0 /* ExtensionRunningPreference.None */), 2 /* ExtensionHostKind.LocalWebWorker */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['web', 'ui'], false, false, 0 /* ExtensionRunningPreference.None */), null);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['web', 'ui'], false, true, 0 /* ExtensionRunningPreference.None */), 2 /* ExtensionHostKind.LocalWebWorker */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['web', 'ui'], true, false, 0 /* ExtensionRunningPreference.None */), 2 /* ExtensionHostKind.LocalWebWorker */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['web', 'ui'], true, true, 0 /* ExtensionRunningPreference.None */), 2 /* ExtensionHostKind.LocalWebWorker */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['ui', 'web', 'workspace'], false, false, 0 /* ExtensionRunningPreference.None */), null);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['ui', 'web', 'workspace'], false, true, 0 /* ExtensionRunningPreference.None */), 2 /* ExtensionHostKind.LocalWebWorker */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['ui', 'web', 'workspace'], true, false, 0 /* ExtensionRunningPreference.None */), 2 /* ExtensionHostKind.LocalWebWorker */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['ui', 'web', 'workspace'], true, true, 0 /* ExtensionRunningPreference.None */), 2 /* ExtensionHostKind.LocalWebWorker */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['ui', 'workspace', 'web'], false, false, 0 /* ExtensionRunningPreference.None */), null);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['ui', 'workspace', 'web'], false, true, 0 /* ExtensionRunningPreference.None */), 3 /* ExtensionHostKind.Remote */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['ui', 'workspace', 'web'], true, false, 0 /* ExtensionRunningPreference.None */), 2 /* ExtensionHostKind.LocalWebWorker */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['ui', 'workspace', 'web'], true, true, 0 /* ExtensionRunningPreference.None */), 3 /* ExtensionHostKind.Remote */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['web', 'ui', 'workspace'], false, false, 0 /* ExtensionRunningPreference.None */), null);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['web', 'ui', 'workspace'], false, true, 0 /* ExtensionRunningPreference.None */), 2 /* ExtensionHostKind.LocalWebWorker */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['web', 'ui', 'workspace'], true, false, 0 /* ExtensionRunningPreference.None */), 2 /* ExtensionHostKind.LocalWebWorker */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['web', 'ui', 'workspace'], true, true, 0 /* ExtensionRunningPreference.None */), 2 /* ExtensionHostKind.LocalWebWorker */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['web', 'workspace', 'ui'], false, false, 0 /* ExtensionRunningPreference.None */), null);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['web', 'workspace', 'ui'], false, true, 0 /* ExtensionRunningPreference.None */), 2 /* ExtensionHostKind.LocalWebWorker */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['web', 'workspace', 'ui'], true, false, 0 /* ExtensionRunningPreference.None */), 2 /* ExtensionHostKind.LocalWebWorker */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['web', 'workspace', 'ui'], true, true, 0 /* ExtensionRunningPreference.None */), 2 /* ExtensionHostKind.LocalWebWorker */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['workspace', 'ui', 'web'], false, false, 0 /* ExtensionRunningPreference.None */), null);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['workspace', 'ui', 'web'], false, true, 0 /* ExtensionRunningPreference.None */), 3 /* ExtensionHostKind.Remote */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['workspace', 'ui', 'web'], true, false, 0 /* ExtensionRunningPreference.None */), 2 /* ExtensionHostKind.LocalWebWorker */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['workspace', 'ui', 'web'], true, true, 0 /* ExtensionRunningPreference.None */), 3 /* ExtensionHostKind.Remote */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['workspace', 'web', 'ui'], false, false, 0 /* ExtensionRunningPreference.None */), null);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['workspace', 'web', 'ui'], false, true, 0 /* ExtensionRunningPreference.None */), 3 /* ExtensionHostKind.Remote */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['workspace', 'web', 'ui'], true, false, 0 /* ExtensionRunningPreference.None */), 2 /* ExtensionHostKind.LocalWebWorker */);
            assert.deepStrictEqual(extensionService_1.BrowserExtensionHostKindPicker.pickRunningLocation(['workspace', 'web', 'ui'], true, true, 0 /* ExtensionRunningPreference.None */), 3 /* ExtensionHostKind.Remote */);
        });
    });
    suite('ExtensionService', () => {
        let MyTestExtensionService = class MyTestExtensionService extends abstractExtensionService_1.AbstractExtensionService {
            constructor(instantiationService, notificationService, environmentService, telemetryService, extensionEnablementService, fileService, productService, extensionManagementService, contextService, configurationService, extensionManifestPropertiesService, logService, remoteAgentService, remoteExtensionsScannerService, lifecycleService, remoteAuthorityResolverService) {
                const extensionsProposedApi = instantiationService.createInstance(extensionsProposedApi_1.ExtensionsProposedApi);
                const extensionHostFactory = new class {
                    createExtensionHost(runningLocations, runningLocation, isInitialStart) {
                        return new class extends (0, mock_1.mock)() {
                            constructor() {
                                super(...arguments);
                                this.runningLocation = runningLocation;
                            }
                        };
                    }
                };
                super(extensionsProposedApi, extensionHostFactory, null, instantiationService, notificationService, environmentService, telemetryService, extensionEnablementService, fileService, productService, extensionManagementService, contextService, configurationService, extensionManifestPropertiesService, logService, remoteAgentService, remoteExtensionsScannerService, lifecycleService, remoteAuthorityResolverService, new testDialogService_1.TestDialogService());
                this._extHostId = 0;
                this.order = [];
            }
            _pickExtensionHostKind(extensionId, extensionKinds, isInstalledLocally, isInstalledRemotely, preference) {
                throw new Error('Method not implemented.');
            }
            _doCreateExtensionHostManager(extensionHost, initialActivationEvents) {
                const order = this.order;
                const extensionHostId = ++this._extHostId;
                order.push(`create ${extensionHostId}`);
                return new class extends (0, mock_1.mock)() {
                    constructor() {
                        super(...arguments);
                        this.onDidExit = event_1.Event.None;
                        this.onDidChangeResponsiveState = event_1.Event.None;
                    }
                    dispose() {
                        order.push(`dispose ${extensionHostId}`);
                    }
                    representsRunningLocation(runningLocation) {
                        return extensionHost.runningLocation.equals(runningLocation);
                    }
                };
            }
            _resolveExtensions() {
                throw new Error('Method not implemented.');
            }
            _scanSingleExtension(extension) {
                throw new Error('Method not implemented.');
            }
            _onExtensionHostExit(code) {
                throw new Error('Method not implemented.');
            }
            _resolveAuthority(remoteAuthority) {
                throw new Error('Method not implemented.');
            }
        };
        MyTestExtensionService = __decorate([
            __param(0, instantiation_1.IInstantiationService),
            __param(1, notification_1.INotificationService),
            __param(2, environmentService_1.IWorkbenchEnvironmentService),
            __param(3, telemetry_1.ITelemetryService),
            __param(4, extensionManagement_1.IWorkbenchExtensionEnablementService),
            __param(5, files_1.IFileService),
            __param(6, productService_1.IProductService),
            __param(7, extensionManagement_1.IWorkbenchExtensionManagementService),
            __param(8, workspace_1.IWorkspaceContextService),
            __param(9, configuration_1.IConfigurationService),
            __param(10, extensionManifestPropertiesService_1.IExtensionManifestPropertiesService),
            __param(11, log_1.ILogService),
            __param(12, remoteAgentService_1.IRemoteAgentService),
            __param(13, remoteExtensionsScanner_1.IRemoteExtensionsScannerService),
            __param(14, lifecycle_2.ILifecycleService),
            __param(15, remoteAuthorityResolver_1.IRemoteAuthorityResolverService)
        ], MyTestExtensionService);
        let disposables;
        let instantiationService;
        let extService;
        setup(() => {
            disposables = new lifecycle_1.DisposableStore();
            const testProductService = { _serviceBrand: undefined, ...product_1.default };
            disposables.add(instantiationService = (0, instantiationServiceMock_1.createServices)(disposables, [
                // custom
                [extensions_1.IExtensionService, MyTestExtensionService],
                // default
                [lifecycle_2.ILifecycleService, workbenchTestServices_1.TestLifecycleService],
                [extensionManagement_1.IWorkbenchExtensionManagementService, workbenchTestServices_1.TestWorkbenchExtensionManagementService],
                [notification_1.INotificationService, testNotificationService_1.TestNotificationService],
                [remoteAgentService_1.IRemoteAgentService, workbenchTestServices_1.TestRemoteAgentService],
                [log_1.ILogService, log_1.NullLogService],
                [extensionManagement_1.IWebExtensionsScannerService, workbenchTestServices_1.TestWebExtensionsScannerService],
                [extensionManifestPropertiesService_1.IExtensionManifestPropertiesService, extensionManifestPropertiesService_1.ExtensionManifestPropertiesService],
                [configuration_1.IConfigurationService, testConfigurationService_1.TestConfigurationService],
                [workspace_1.IWorkspaceContextService, workbenchTestServices_2.TestContextService],
                [productService_1.IProductService, testProductService],
                [files_1.IFileService, workbenchTestServices_1.TestFileService],
                [extensionManagement_1.IWorkbenchExtensionEnablementService, workbenchTestServices_1.TestWorkbenchExtensionEnablementService],
                [telemetry_1.ITelemetryService, telemetryUtils_1.NullTelemetryService],
                [environment_1.IEnvironmentService, workbenchTestServices_1.TestEnvironmentService],
                [workspaceTrust_1.IWorkspaceTrustEnablementService, workspaceTrust_2.WorkspaceTrustEnablementService],
                [userDataProfile_1.IUserDataProfilesService, userDataProfile_1.UserDataProfilesService],
                [userDataProfile_2.IUserDataProfileService, workbenchTestServices_1.TestUserDataProfileService],
                [uriIdentity_1.IUriIdentityService, uriIdentityService_1.UriIdentityService],
                [remoteExtensionsScanner_1.IRemoteExtensionsScannerService, workbenchTestServices_1.TestRemoteExtensionsScannerService],
                [remoteAuthorityResolver_1.IRemoteAuthorityResolverService, new remoteAuthorityResolverService_1.RemoteAuthorityResolverService(false, undefined, undefined, testProductService, new log_1.NullLogService())]
            ]));
            extService = instantiationService.get(extensions_1.IExtensionService);
        });
        teardown(() => {
            disposables.dispose();
        });
        (0, utils_1.ensureNoDisposablesAreLeakedInTestSuite)();
        test('issue #152204: Remote extension host not disposed after closing vscode client', async () => {
            await extService.startExtensionHosts();
            await extService.stopExtensionHosts('foo');
            assert.deepStrictEqual(extService.order, (['create 1', 'create 2', 'create 3', 'dispose 3', 'dispose 2', 'dispose 1']));
        });
        test('Extension host disposed when awaited', async () => {
            await extService.startExtensionHosts();
            await extService.stopExtensionHosts('foo');
            assert.deepStrictEqual(extService.order, (['create 1', 'create 2', 'create 3', 'dispose 3', 'dispose 2', 'dispose 1']));
        });
        test('Extension host not disposed when vetoed (sync)', async () => {
            await extService.startExtensionHosts();
            disposables.add(extService.onWillStop(e => e.veto(true, 'test 1')));
            disposables.add(extService.onWillStop(e => e.veto(false, 'test 2')));
            await extService.stopExtensionHosts('foo');
            assert.deepStrictEqual(extService.order, (['create 1', 'create 2', 'create 3']));
        });
        test('Extension host not disposed when vetoed (async)', async () => {
            await extService.startExtensionHosts();
            disposables.add(extService.onWillStop(e => e.veto(false, 'test 1')));
            disposables.add(extService.onWillStop(e => e.veto(Promise.resolve(true), 'test 2')));
            disposables.add(extService.onWillStop(e => e.veto(Promise.resolve(false), 'test 3')));
            await extService.stopExtensionHosts('foo');
            assert.deepStrictEqual(extService.order, (['create 1', 'create 2', 'create 3']));
        });
    });
});
//# sourceMappingURL=data:application/json;base64,